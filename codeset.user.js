// ==UserScript==
// @name       codeset
// @namespace  npm/vite-plugin-monkey
// @version    0.0.0
// @author     monkey
// @icon       https://vitejs.dev/logo.svg
// @match      http://172.31.32.67:8080/index/*
// @require    https://cdn.jsdelivr.net/npm/vue@3.4.31/dist/vue.global.prod.js
// @grant      GM_addStyle
// @grant      unsafeWindow
// ==/UserScript==

(t=>{if(typeof GM_addStyle=="function"){GM_addStyle(t);return}const o=document.createElement("style");o.textContent=t,document.head.append(o)})(' #self_dialog{display:block;position:absolute;right:150px;width:20px;top:54px;font-size:18px;z-index:1000}.t-loading{font:var(--td-font-body-medium);color:var(--td-text-color-primary);box-sizing:border-box;margin:0;padding:0;list-style:none;position:relative;color:var(--td-brand-color);font-size:var(--td-comp-size-l)}.t-loading--lock{overflow:hidden}.t-loading.t-size-s{font-size:var(--td-comp-size-xxxs)}.t-loading.t-size-l{font-size:var(--td-comp-size-xxxl)}.t-loading__parent--relative{position:relative!important}.t-loading__fullscreen{position:fixed;top:0;left:0;width:100%;height:100%;z-index:3500}.t-loading--center{display:inline-flex;align-items:center;vertical-align:middle;justify-content:center}.t-loading__content{position:absolute;left:48%;top:20%}.t-loading--inherit-color{color:inherit}.t-loading__parent{position:relative}.t-loading__overlay{background-color:var(--td-mask-disabled)}.t-loading--full{position:absolute;top:0;left:0;width:100%;height:100%;z-index:3500}.t-loading--hidden{visibility:hidden}.t-loading--visible{visibility:visible}.t-loading__text{width:auto;display:inline-block;vertical-align:middle;font:var(--td-font-body-medium);margin-left:var(--td-comp-margin-xs)}.t-loading__gradient{display:inline-flex;justify-content:center;align-items:center;vertical-align:middle}.t-loading__gradient-conic{width:100%;height:100%;border-radius:var(--td-radius-circle);background:conic-gradient(from 90deg at 50% 50%,#fff 0deg,currentcolor 360deg);-webkit-mask:radial-gradient(transparent calc(50% - .5px),#fff 50%);mask:radial-gradient(transparent calc(50% - .5px),#fff 50%)}.t-button{font:var(--td-font-body-medium);color:var(--td-text-color-primary);box-sizing:border-box;margin:0;padding:0;list-style:none;position:relative;z-index:0;overflow:hidden;font-size:var(--td-font-body-medium);outline:none;border-width:1px;border-style:solid;border-color:transparent;background-color:transparent;cursor:pointer;display:inline-flex;align-items:center;justify-content:center;vertical-align:middle;white-space:nowrap;border-radius:var(--td-radius-default);transition:all .2s linear;touch-action:manipulation;text-decoration:none}.t-button .t-button__text,.t-button .t-icon{position:relative;z-index:1;display:inline-flex}.t-button .t-icon,.t-button .t-loading{font-size:var(--td-font-size-body-large)}.t-button .t-icon+.t-button__text:not(:empty){margin-left:8px}.t-button .t-loading+.t-button__text:not(:empty){margin-left:8px}.t-button .t-button__suffix:not(:empty){display:inline-flex;margin-left:8px}.t-button--variant-base{color:var(--td-text-color-anti);height:var(--td-comp-size-m);font:var(--td-font-body-medium);padding-left:calc(var(--td-comp-paddingLR-l) - 1px);padding-right:calc(var(--td-comp-paddingLR-l) - 1px);background-color:var(--td-bg-color-component);border-color:var(--td-bg-color-component);color:var(--td-text-color-primary)}.t-button--variant-base .t-icon,.t-button--variant-base .t-loading{font-size:var(--td-font-size-body-large)}.t-button--variant-base:hover,.t-button--variant-base:focus-visible{background-color:var(--td-bg-color-component-hover)}.t-button--variant-base.t-is-loading{background-color:var(--td-bg-color-component)}.t-button--variant-base.t-is-disabled{background-color:var(--td-bg-color-component-disabled)}.t-button--variant-base:hover,.t-button--variant-base:focus-visible{border-color:var(--td-bg-color-component-hover)}.t-button--variant-base.t-is-loading{border-color:var(--td-bg-color-component)}.t-button--variant-base.t-is-disabled{border-color:var(--td-bg-color-component-disabled)}.t-button--variant-base:hover,.t-button--variant-base:focus-visible{color:var(--td-text-color-primary)}.t-button--variant-base.t-is-loading{color:var(--td-text-color-primary)}.t-button--variant-base.t-is-disabled{color:var(--td-text-color-disabled)}.t-button--variant-base.t-button--theme-primary{color:var(--td-text-color-anti);background-color:var(--td-brand-color);border-color:var(--td-brand-color)}.t-button--variant-base.t-button--theme-primary:hover,.t-button--variant-base.t-button--theme-primary:focus-visible{background-color:var(--td-brand-color-hover)}.t-button--variant-base.t-button--theme-primary.t-is-loading{background-color:var(--td-brand-color)}.t-button--variant-base.t-button--theme-primary.t-is-disabled{background-color:var(--td-brand-color-disabled)}.t-button--variant-base.t-button--theme-primary:hover,.t-button--variant-base.t-button--theme-primary:focus-visible{border-color:var(--td-brand-color-hover)}.t-button--variant-base.t-button--theme-primary.t-is-loading{border-color:var(--td-brand-color)}.t-button--variant-base.t-button--theme-primary.t-is-disabled{border-color:var(--td-brand-color-disabled)}.t-button--variant-base.t-button--theme-success{color:var(--td-text-color-anti);background-color:var(--td-success-color);border-color:var(--td-success-color)}.t-button--variant-base.t-button--theme-success:hover,.t-button--variant-base.t-button--theme-success:focus-visible{background-color:var(--td-success-color-hover)}.t-button--variant-base.t-button--theme-success.t-is-loading{background-color:var(--td-success-color)}.t-button--variant-base.t-button--theme-success.t-is-disabled{background-color:var(--td-success-color-disabled)}.t-button--variant-base.t-button--theme-success:hover,.t-button--variant-base.t-button--theme-success:focus-visible{border-color:var(--td-success-color-hover)}.t-button--variant-base.t-button--theme-success.t-is-loading{border-color:var(--td-success-color)}.t-button--variant-base.t-button--theme-success.t-is-disabled{border-color:var(--td-success-color-disabled)}.t-button--variant-base.t-button--theme-warning{color:var(--td-text-color-anti);background-color:var(--td-warning-color);border-color:var(--td-warning-color)}.t-button--variant-base.t-button--theme-warning:hover,.t-button--variant-base.t-button--theme-warning:focus-visible{background-color:var(--td-warning-color-hover)}.t-button--variant-base.t-button--theme-warning.t-is-loading{background-color:var(--td-warning-color)}.t-button--variant-base.t-button--theme-warning.t-is-disabled{background-color:var(--td-warning-color-disabled)}.t-button--variant-base.t-button--theme-warning:hover,.t-button--variant-base.t-button--theme-warning:focus-visible{border-color:var(--td-warning-color-hover)}.t-button--variant-base.t-button--theme-warning.t-is-loading{border-color:var(--td-warning-color)}.t-button--variant-base.t-button--theme-warning.t-is-disabled{border-color:var(--td-warning-color-disabled)}.t-button--variant-base.t-button--theme-danger{color:var(--td-text-color-anti);background-color:var(--td-error-color);border-color:var(--td-error-color)}.t-button--variant-base.t-button--theme-danger:hover,.t-button--variant-base.t-button--theme-danger:focus-visible{background-color:var(--td-error-color-hover)}.t-button--variant-base.t-button--theme-danger.t-is-loading{background-color:var(--td-error-color)}.t-button--variant-base.t-button--theme-danger.t-is-disabled{background-color:var(--td-error-color-disabled)}.t-button--variant-base.t-button--theme-danger:hover,.t-button--variant-base.t-button--theme-danger:focus-visible{border-color:var(--td-error-color-hover)}.t-button--variant-base.t-button--theme-danger.t-is-loading{border-color:var(--td-error-color)}.t-button--variant-base.t-button--theme-danger.t-is-disabled{border-color:var(--td-error-color-disabled)}.t-button--variant-base.t-button--ghost{background-color:transparent;color:var(--td-text-color-anti);border-color:var(--td-text-color-anti)}.t-button--variant-base.t-button--ghost:hover,.t-button--variant-base.t-button--ghost:focus-visible{background-color:transparent}.t-button--variant-base.t-button--ghost:active,.t-button--variant-base.t-button--ghost.t-is-loading{background-color:transparent}.t-button--variant-base.t-button--ghost.t-is-disabled{background-color:#ffffff38;background-color:transparent}.t-button--variant-base.t-button--ghost:hover,.t-button--variant-base.t-button--ghost:focus-visible{color:var(--td-brand-color-hover)}.t-button--variant-base.t-button--ghost:active{color:var(--td-brand-color-active)}.t-button--variant-base.t-button--ghost.t-is-loading{color:var(--td-text-color-anti)}.t-button--variant-base.t-button--ghost.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-base.t-button--ghost:hover,.t-button--variant-base.t-button--ghost:focus-visible{border-color:var(--td-brand-color-hover)}.t-button--variant-base.t-button--ghost:active{border-color:var(--td-brand-color-active)}.t-button--variant-base.t-button--ghost.t-is-loading{border-color:var(--td-text-color-anti)}.t-button--variant-base.t-button--ghost.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-base.t-button--ghost.t-button--theme-primary{color:var(--td-brand-color);border-color:var(--td-brand-color)}.t-button--variant-base.t-button--ghost.t-button--theme-primary:hover,.t-button--variant-base.t-button--ghost.t-button--theme-primary:focus-visible{color:var(--td-brand-color-hover)}.t-button--variant-base.t-button--ghost.t-button--theme-primary:active{color:var(--td-brand-color-active)}.t-button--variant-base.t-button--ghost.t-button--theme-primary.t-is-loading{color:var(--td-brand-color)}.t-button--variant-base.t-button--ghost.t-button--theme-primary.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-base.t-button--ghost.t-button--theme-primary:hover,.t-button--variant-base.t-button--ghost.t-button--theme-primary:focus-visible{border-color:var(--td-brand-color-hover)}.t-button--variant-base.t-button--ghost.t-button--theme-primary:active{border-color:var(--td-brand-color-active)}.t-button--variant-base.t-button--ghost.t-button--theme-primary.t-is-loading{border-color:var(--td-brand-color)}.t-button--variant-base.t-button--ghost.t-button--theme-primary.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-base.t-button--ghost.t-button--theme-success{color:var(--td-success-color);border-color:var(--td-success-color)}.t-button--variant-base.t-button--ghost.t-button--theme-success:hover,.t-button--variant-base.t-button--ghost.t-button--theme-success:focus-visible{color:var(--td-success-color-hover)}.t-button--variant-base.t-button--ghost.t-button--theme-success:active{color:var(--td-success-color-active)}.t-button--variant-base.t-button--ghost.t-button--theme-success.t-is-loading{color:var(--td-success-color)}.t-button--variant-base.t-button--ghost.t-button--theme-success.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-base.t-button--ghost.t-button--theme-success:hover,.t-button--variant-base.t-button--ghost.t-button--theme-success:focus-visible{border-color:var(--td-success-color-hover)}.t-button--variant-base.t-button--ghost.t-button--theme-success:active{border-color:var(--td-success-color-active)}.t-button--variant-base.t-button--ghost.t-button--theme-success.t-is-loading{border-color:var(--td-success-color)}.t-button--variant-base.t-button--ghost.t-button--theme-success.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-base.t-button--ghost.t-button--theme-warning{color:var(--td-warning-color);border-color:var(--td-warning-color)}.t-button--variant-base.t-button--ghost.t-button--theme-warning:hover,.t-button--variant-base.t-button--ghost.t-button--theme-warning:focus-visible{color:var(--td-warning-color-hover)}.t-button--variant-base.t-button--ghost.t-button--theme-warning:active{color:var(--td-warning-color-active)}.t-button--variant-base.t-button--ghost.t-button--theme-warning.t-is-loading{color:var(--td-warning-color)}.t-button--variant-base.t-button--ghost.t-button--theme-warning.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-base.t-button--ghost.t-button--theme-warning:hover,.t-button--variant-base.t-button--ghost.t-button--theme-warning:focus-visible{border-color:var(--td-warning-color-hover)}.t-button--variant-base.t-button--ghost.t-button--theme-warning:active{border-color:var(--td-warning-color-active)}.t-button--variant-base.t-button--ghost.t-button--theme-warning.t-is-loading{border-color:var(--td-warning-color)}.t-button--variant-base.t-button--ghost.t-button--theme-warning.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-base.t-button--ghost.t-button--theme-danger{color:var(--td-error-color);border-color:var(--td-error-color)}.t-button--variant-base.t-button--ghost.t-button--theme-danger:hover,.t-button--variant-base.t-button--ghost.t-button--theme-danger:focus-visible{color:var(--td-error-color-hover)}.t-button--variant-base.t-button--ghost.t-button--theme-danger:active{color:var(--td-error-color-active)}.t-button--variant-base.t-button--ghost.t-button--theme-danger.t-is-loading{color:var(--td-error-color)}.t-button--variant-base.t-button--ghost.t-button--theme-danger.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-base.t-button--ghost.t-button--theme-danger:hover,.t-button--variant-base.t-button--ghost.t-button--theme-danger:focus-visible{border-color:var(--td-error-color-hover)}.t-button--variant-base.t-button--ghost.t-button--theme-danger:active{border-color:var(--td-error-color-active)}.t-button--variant-base.t-button--ghost.t-button--theme-danger.t-is-loading{border-color:var(--td-error-color)}.t-button--variant-base.t-button--ghost.t-button--theme-danger.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-outline{height:var(--td-comp-size-m);font:var(--td-font-body-medium);padding-left:calc(var(--td-comp-paddingLR-l) - 1px);padding-right:calc(var(--td-comp-paddingLR-l) - 1px);color:var(--td-text-color-primary);background-color:var(--td-bg-color-specialcomponent);border-color:var(--td-border-level-2-color)}.t-button--variant-outline .t-icon,.t-button--variant-outline .t-loading{font-size:var(--td-font-size-body-large)}.t-button--variant-outline:hover,.t-button--variant-outline:focus-visible{color:var(--td-brand-color-hover)}.t-button--variant-outline.t-is-loading{color:var(--td-text-color-primary)}.t-button--variant-outline.t-is-disabled{color:var(--td-text-color-disabled)}.t-button--variant-outline:hover,.t-button--variant-outline:focus-visible{background-color:var(--td-bg-color-specialcomponent)}.t-button--variant-outline.t-is-loading{background-color:var(--td-bg-color-specialcomponent)}.t-button--variant-outline.t-is-disabled{background-color:var(--td-bg-color-component-disabled)}.t-button--variant-outline:hover,.t-button--variant-outline:focus-visible{border-color:var(--td-brand-color-hover)}.t-button--variant-outline.t-is-loading,.t-button--variant-outline.t-is-disabled{border-color:var(--td-border-level-2-color)}.t-button--variant-outline.t-button--theme-primary{color:var(--td-brand-color);border-color:var(--td-brand-color)}.t-button--variant-outline.t-button--theme-primary:hover,.t-button--variant-outline.t-button--theme-primary:focus-visible{color:var(--td-brand-color-hover)}.t-button--variant-outline.t-button--theme-primary.t-is-loading{color:var(--td-brand-color)}.t-button--variant-outline.t-button--theme-primary.t-is-disabled{color:var(--td-brand-color-disabled)}.t-button--variant-outline.t-button--theme-primary:hover,.t-button--variant-outline.t-button--theme-primary:focus-visible{border-color:var(--td-brand-color-hover)}.t-button--variant-outline.t-button--theme-primary.t-is-loading{border-color:var(--td-brand-color)}.t-button--variant-outline.t-button--theme-primary.t-is-disabled{border-color:var(--td-brand-color-disabled)}.t-button--variant-outline.t-button--theme-success{color:var(--td-success-color);border-color:var(--td-success-color)}.t-button--variant-outline.t-button--theme-success:hover,.t-button--variant-outline.t-button--theme-success:focus-visible{color:var(--td-success-color-hover)}.t-button--variant-outline.t-button--theme-success.t-is-loading{color:var(--td-success-color)}.t-button--variant-outline.t-button--theme-success.t-is-disabled{color:var(--td-success-color-disabled)}.t-button--variant-outline.t-button--theme-success:hover,.t-button--variant-outline.t-button--theme-success:focus-visible{border-color:var(--td-success-color-hover)}.t-button--variant-outline.t-button--theme-success.t-is-loading{border-color:var(--td-success-color)}.t-button--variant-outline.t-button--theme-success.t-is-disabled{border-color:var(--td-success-color-disabled)}.t-button--variant-outline.t-button--theme-warning{color:var(--td-warning-color);border-color:var(--td-warning-color)}.t-button--variant-outline.t-button--theme-warning:hover,.t-button--variant-outline.t-button--theme-warning:focus-visible{color:var(--td-warning-color-hover)}.t-button--variant-outline.t-button--theme-warning.t-is-loading{color:var(--td-warning-color)}.t-button--variant-outline.t-button--theme-warning.t-is-disabled{color:var(--td-warning-color-disabled)}.t-button--variant-outline.t-button--theme-warning:hover,.t-button--variant-outline.t-button--theme-warning:focus-visible{border-color:var(--td-warning-color-hover)}.t-button--variant-outline.t-button--theme-warning.t-is-loading{border-color:var(--td-warning-color)}.t-button--variant-outline.t-button--theme-warning.t-is-disabled{border-color:var(--td-warning-color-disabled)}.t-button--variant-outline.t-button--theme-danger{color:var(--td-error-color);border-color:var(--td-error-color)}.t-button--variant-outline.t-button--theme-danger:hover,.t-button--variant-outline.t-button--theme-danger:focus-visible{color:var(--td-error-color-hover)}.t-button--variant-outline.t-button--theme-danger.t-is-loading{color:var(--td-error-color)}.t-button--variant-outline.t-button--theme-danger.t-is-disabled{color:var(--td-error-color-disabled)}.t-button--variant-outline.t-button--theme-danger:hover,.t-button--variant-outline.t-button--theme-danger:focus-visible{border-color:var(--td-error-color-hover)}.t-button--variant-outline.t-button--theme-danger.t-is-loading{border-color:var(--td-error-color)}.t-button--variant-outline.t-button--theme-danger.t-is-disabled{border-color:var(--td-error-color-disabled)}.t-button--variant-outline.t-button--ghost{background-color:transparent;color:var(--td-text-color-anti);border-color:var(--td-text-color-anti)}.t-button--variant-outline.t-button--ghost:hover,.t-button--variant-outline.t-button--ghost:focus-visible{background-color:transparent}.t-button--variant-outline.t-button--ghost:active,.t-button--variant-outline.t-button--ghost.t-is-loading{background-color:transparent}.t-button--variant-outline.t-button--ghost.t-is-disabled{background-color:#ffffff38;background-color:transparent}.t-button--variant-outline.t-button--ghost:hover,.t-button--variant-outline.t-button--ghost:focus-visible{color:var(--td-brand-color-hover)}.t-button--variant-outline.t-button--ghost:active{color:var(--td-brand-color-active)}.t-button--variant-outline.t-button--ghost.t-is-loading{color:var(--td-text-color-anti)}.t-button--variant-outline.t-button--ghost.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-outline.t-button--ghost:hover,.t-button--variant-outline.t-button--ghost:focus-visible{border-color:var(--td-brand-color-hover)}.t-button--variant-outline.t-button--ghost:active{border-color:var(--td-brand-color-active)}.t-button--variant-outline.t-button--ghost.t-is-loading{border-color:var(--td-text-color-anti)}.t-button--variant-outline.t-button--ghost.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-outline.t-button--ghost.t-button--theme-primary{color:var(--td-brand-color);border-color:var(--td-brand-color)}.t-button--variant-outline.t-button--ghost.t-button--theme-primary:hover,.t-button--variant-outline.t-button--ghost.t-button--theme-primary:focus-visible{color:var(--td-brand-color-hover)}.t-button--variant-outline.t-button--ghost.t-button--theme-primary:active{color:var(--td-brand-color-active)}.t-button--variant-outline.t-button--ghost.t-button--theme-primary.t-is-loading{color:var(--td-brand-color)}.t-button--variant-outline.t-button--ghost.t-button--theme-primary.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-outline.t-button--ghost.t-button--theme-primary:hover,.t-button--variant-outline.t-button--ghost.t-button--theme-primary:focus-visible{border-color:var(--td-brand-color-hover)}.t-button--variant-outline.t-button--ghost.t-button--theme-primary:active{border-color:var(--td-brand-color-active)}.t-button--variant-outline.t-button--ghost.t-button--theme-primary.t-is-loading{border-color:var(--td-brand-color)}.t-button--variant-outline.t-button--ghost.t-button--theme-primary.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-outline.t-button--ghost.t-button--theme-success{color:var(--td-success-color);border-color:var(--td-success-color)}.t-button--variant-outline.t-button--ghost.t-button--theme-success:hover,.t-button--variant-outline.t-button--ghost.t-button--theme-success:focus-visible{color:var(--td-success-color-hover)}.t-button--variant-outline.t-button--ghost.t-button--theme-success:active{color:var(--td-success-color-active)}.t-button--variant-outline.t-button--ghost.t-button--theme-success.t-is-loading{color:var(--td-success-color)}.t-button--variant-outline.t-button--ghost.t-button--theme-success.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-outline.t-button--ghost.t-button--theme-success:hover,.t-button--variant-outline.t-button--ghost.t-button--theme-success:focus-visible{border-color:var(--td-success-color-hover)}.t-button--variant-outline.t-button--ghost.t-button--theme-success:active{border-color:var(--td-success-color-active)}.t-button--variant-outline.t-button--ghost.t-button--theme-success.t-is-loading{border-color:var(--td-success-color)}.t-button--variant-outline.t-button--ghost.t-button--theme-success.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-outline.t-button--ghost.t-button--theme-warning{color:var(--td-warning-color);border-color:var(--td-warning-color)}.t-button--variant-outline.t-button--ghost.t-button--theme-warning:hover,.t-button--variant-outline.t-button--ghost.t-button--theme-warning:focus-visible{color:var(--td-warning-color-hover)}.t-button--variant-outline.t-button--ghost.t-button--theme-warning:active{color:var(--td-warning-color-active)}.t-button--variant-outline.t-button--ghost.t-button--theme-warning.t-is-loading{color:var(--td-warning-color)}.t-button--variant-outline.t-button--ghost.t-button--theme-warning.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-outline.t-button--ghost.t-button--theme-warning:hover,.t-button--variant-outline.t-button--ghost.t-button--theme-warning:focus-visible{border-color:var(--td-warning-color-hover)}.t-button--variant-outline.t-button--ghost.t-button--theme-warning:active{border-color:var(--td-warning-color-active)}.t-button--variant-outline.t-button--ghost.t-button--theme-warning.t-is-loading{border-color:var(--td-warning-color)}.t-button--variant-outline.t-button--ghost.t-button--theme-warning.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-outline.t-button--ghost.t-button--theme-danger{color:var(--td-error-color);border-color:var(--td-error-color)}.t-button--variant-outline.t-button--ghost.t-button--theme-danger:hover,.t-button--variant-outline.t-button--ghost.t-button--theme-danger:focus-visible{color:var(--td-error-color-hover)}.t-button--variant-outline.t-button--ghost.t-button--theme-danger:active{color:var(--td-error-color-active)}.t-button--variant-outline.t-button--ghost.t-button--theme-danger.t-is-loading{color:var(--td-error-color)}.t-button--variant-outline.t-button--ghost.t-button--theme-danger.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-outline.t-button--ghost.t-button--theme-danger:hover,.t-button--variant-outline.t-button--ghost.t-button--theme-danger:focus-visible{border-color:var(--td-error-color-hover)}.t-button--variant-outline.t-button--ghost.t-button--theme-danger:active{border-color:var(--td-error-color-active)}.t-button--variant-outline.t-button--ghost.t-button--theme-danger.t-is-loading{border-color:var(--td-error-color)}.t-button--variant-outline.t-button--ghost.t-button--theme-danger.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-dashed{height:var(--td-comp-size-m);font:var(--td-font-body-medium);padding-left:calc(var(--td-comp-paddingLR-l) - 1px);padding-right:calc(var(--td-comp-paddingLR-l) - 1px);color:var(--td-text-color-primary);background-color:var(--td-bg-color-specialcomponent);border-color:var(--td-border-level-2-color);border-style:dashed}.t-button--variant-dashed .t-icon,.t-button--variant-dashed .t-loading{font-size:var(--td-font-size-body-large)}.t-button--variant-dashed:hover,.t-button--variant-dashed:focus-visible{color:var(--td-brand-color-hover)}.t-button--variant-dashed.t-is-loading{color:var(--td-text-color-primary)}.t-button--variant-dashed.t-is-disabled{color:var(--td-text-color-disabled)}.t-button--variant-dashed:hover,.t-button--variant-dashed:focus-visible{background-color:var(--td-bg-color-specialcomponent)}.t-button--variant-dashed.t-is-loading{background-color:var(--td-bg-color-specialcomponent)}.t-button--variant-dashed.t-is-disabled{background-color:var(--td-bg-color-component-disabled)}.t-button--variant-dashed:hover,.t-button--variant-dashed:focus-visible{border-color:var(--td-brand-color-hover)}.t-button--variant-dashed.t-is-loading,.t-button--variant-dashed.t-is-disabled{border-color:var(--td-border-level-2-color)}.t-button--variant-dashed.t-button--theme-primary{color:var(--td-brand-color);border-color:var(--td-brand-color)}.t-button--variant-dashed.t-button--theme-primary:hover,.t-button--variant-dashed.t-button--theme-primary:focus-visible{color:var(--td-brand-color-hover)}.t-button--variant-dashed.t-button--theme-primary.t-is-loading{color:var(--td-brand-color)}.t-button--variant-dashed.t-button--theme-primary.t-is-disabled{color:var(--td-brand-color-disabled)}.t-button--variant-dashed.t-button--theme-primary:hover,.t-button--variant-dashed.t-button--theme-primary:focus-visible{border-color:var(--td-brand-color-hover)}.t-button--variant-dashed.t-button--theme-primary.t-is-loading{border-color:var(--td-brand-color)}.t-button--variant-dashed.t-button--theme-primary.t-is-disabled{border-color:var(--td-brand-color-disabled)}.t-button--variant-dashed.t-button--theme-success{color:var(--td-success-color);border-color:var(--td-success-color)}.t-button--variant-dashed.t-button--theme-success:hover,.t-button--variant-dashed.t-button--theme-success:focus-visible{color:var(--td-success-color-hover)}.t-button--variant-dashed.t-button--theme-success.t-is-loading{color:var(--td-success-color)}.t-button--variant-dashed.t-button--theme-success.t-is-disabled{color:var(--td-success-color-disabled)}.t-button--variant-dashed.t-button--theme-success:hover,.t-button--variant-dashed.t-button--theme-success:focus-visible{border-color:var(--td-success-color-hover)}.t-button--variant-dashed.t-button--theme-success.t-is-loading{border-color:var(--td-success-color)}.t-button--variant-dashed.t-button--theme-success.t-is-disabled{border-color:var(--td-success-color-disabled)}.t-button--variant-dashed.t-button--theme-warning{color:var(--td-warning-color);border-color:var(--td-warning-color)}.t-button--variant-dashed.t-button--theme-warning:hover,.t-button--variant-dashed.t-button--theme-warning:focus-visible{color:var(--td-warning-color-hover)}.t-button--variant-dashed.t-button--theme-warning.t-is-loading{color:var(--td-warning-color)}.t-button--variant-dashed.t-button--theme-warning.t-is-disabled{color:var(--td-warning-color-disabled)}.t-button--variant-dashed.t-button--theme-warning:hover,.t-button--variant-dashed.t-button--theme-warning:focus-visible{border-color:var(--td-warning-color-hover)}.t-button--variant-dashed.t-button--theme-warning.t-is-loading{border-color:var(--td-warning-color)}.t-button--variant-dashed.t-button--theme-warning.t-is-disabled{border-color:var(--td-warning-color-disabled)}.t-button--variant-dashed.t-button--theme-danger{color:var(--td-error-color);border-color:var(--td-error-color)}.t-button--variant-dashed.t-button--theme-danger:hover,.t-button--variant-dashed.t-button--theme-danger:focus-visible{color:var(--td-error-color-hover)}.t-button--variant-dashed.t-button--theme-danger.t-is-loading{color:var(--td-error-color)}.t-button--variant-dashed.t-button--theme-danger.t-is-disabled{color:var(--td-error-color-disabled)}.t-button--variant-dashed.t-button--theme-danger:hover,.t-button--variant-dashed.t-button--theme-danger:focus-visible{border-color:var(--td-error-color-hover)}.t-button--variant-dashed.t-button--theme-danger.t-is-loading{border-color:var(--td-error-color)}.t-button--variant-dashed.t-button--theme-danger.t-is-disabled{border-color:var(--td-error-color-disabled)}.t-button--variant-dashed.t-button--ghost{background-color:transparent;color:var(--td-text-color-anti);border-color:var(--td-text-color-anti)}.t-button--variant-dashed.t-button--ghost:hover,.t-button--variant-dashed.t-button--ghost:focus-visible{background-color:transparent}.t-button--variant-dashed.t-button--ghost:active,.t-button--variant-dashed.t-button--ghost.t-is-loading{background-color:transparent}.t-button--variant-dashed.t-button--ghost.t-is-disabled{background-color:#ffffff38;background-color:transparent}.t-button--variant-dashed.t-button--ghost:hover,.t-button--variant-dashed.t-button--ghost:focus-visible{color:var(--td-brand-color-hover)}.t-button--variant-dashed.t-button--ghost:active{color:var(--td-brand-color-active)}.t-button--variant-dashed.t-button--ghost.t-is-loading{color:var(--td-text-color-anti)}.t-button--variant-dashed.t-button--ghost.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-dashed.t-button--ghost:hover,.t-button--variant-dashed.t-button--ghost:focus-visible{border-color:var(--td-brand-color-hover)}.t-button--variant-dashed.t-button--ghost:active{border-color:var(--td-brand-color-active)}.t-button--variant-dashed.t-button--ghost.t-is-loading{border-color:var(--td-text-color-anti)}.t-button--variant-dashed.t-button--ghost.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-dashed.t-button--ghost.t-button--theme-primary{color:var(--td-brand-color);border-color:var(--td-brand-color)}.t-button--variant-dashed.t-button--ghost.t-button--theme-primary:hover,.t-button--variant-dashed.t-button--ghost.t-button--theme-primary:focus-visible{color:var(--td-brand-color-hover)}.t-button--variant-dashed.t-button--ghost.t-button--theme-primary:active{color:var(--td-brand-color-active)}.t-button--variant-dashed.t-button--ghost.t-button--theme-primary.t-is-loading{color:var(--td-brand-color)}.t-button--variant-dashed.t-button--ghost.t-button--theme-primary.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-dashed.t-button--ghost.t-button--theme-primary:hover,.t-button--variant-dashed.t-button--ghost.t-button--theme-primary:focus-visible{border-color:var(--td-brand-color-hover)}.t-button--variant-dashed.t-button--ghost.t-button--theme-primary:active{border-color:var(--td-brand-color-active)}.t-button--variant-dashed.t-button--ghost.t-button--theme-primary.t-is-loading{border-color:var(--td-brand-color)}.t-button--variant-dashed.t-button--ghost.t-button--theme-primary.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-dashed.t-button--ghost.t-button--theme-success{color:var(--td-success-color);border-color:var(--td-success-color)}.t-button--variant-dashed.t-button--ghost.t-button--theme-success:hover,.t-button--variant-dashed.t-button--ghost.t-button--theme-success:focus-visible{color:var(--td-success-color-hover)}.t-button--variant-dashed.t-button--ghost.t-button--theme-success:active{color:var(--td-success-color-active)}.t-button--variant-dashed.t-button--ghost.t-button--theme-success.t-is-loading{color:var(--td-success-color)}.t-button--variant-dashed.t-button--ghost.t-button--theme-success.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-dashed.t-button--ghost.t-button--theme-success:hover,.t-button--variant-dashed.t-button--ghost.t-button--theme-success:focus-visible{border-color:var(--td-success-color-hover)}.t-button--variant-dashed.t-button--ghost.t-button--theme-success:active{border-color:var(--td-success-color-active)}.t-button--variant-dashed.t-button--ghost.t-button--theme-success.t-is-loading{border-color:var(--td-success-color)}.t-button--variant-dashed.t-button--ghost.t-button--theme-success.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-dashed.t-button--ghost.t-button--theme-warning{color:var(--td-warning-color);border-color:var(--td-warning-color)}.t-button--variant-dashed.t-button--ghost.t-button--theme-warning:hover,.t-button--variant-dashed.t-button--ghost.t-button--theme-warning:focus-visible{color:var(--td-warning-color-hover)}.t-button--variant-dashed.t-button--ghost.t-button--theme-warning:active{color:var(--td-warning-color-active)}.t-button--variant-dashed.t-button--ghost.t-button--theme-warning.t-is-loading{color:var(--td-warning-color)}.t-button--variant-dashed.t-button--ghost.t-button--theme-warning.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-dashed.t-button--ghost.t-button--theme-warning:hover,.t-button--variant-dashed.t-button--ghost.t-button--theme-warning:focus-visible{border-color:var(--td-warning-color-hover)}.t-button--variant-dashed.t-button--ghost.t-button--theme-warning:active{border-color:var(--td-warning-color-active)}.t-button--variant-dashed.t-button--ghost.t-button--theme-warning.t-is-loading{border-color:var(--td-warning-color)}.t-button--variant-dashed.t-button--ghost.t-button--theme-warning.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-dashed.t-button--ghost.t-button--theme-danger{color:var(--td-error-color);border-color:var(--td-error-color)}.t-button--variant-dashed.t-button--ghost.t-button--theme-danger:hover,.t-button--variant-dashed.t-button--ghost.t-button--theme-danger:focus-visible{color:var(--td-error-color-hover)}.t-button--variant-dashed.t-button--ghost.t-button--theme-danger:active{color:var(--td-error-color-active)}.t-button--variant-dashed.t-button--ghost.t-button--theme-danger.t-is-loading{color:var(--td-error-color)}.t-button--variant-dashed.t-button--ghost.t-button--theme-danger.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-dashed.t-button--ghost.t-button--theme-danger:hover,.t-button--variant-dashed.t-button--ghost.t-button--theme-danger:focus-visible{border-color:var(--td-error-color-hover)}.t-button--variant-dashed.t-button--ghost.t-button--theme-danger:active{border-color:var(--td-error-color-active)}.t-button--variant-dashed.t-button--ghost.t-button--theme-danger.t-is-loading{border-color:var(--td-error-color)}.t-button--variant-dashed.t-button--ghost.t-button--theme-danger.t-is-disabled{border-color:#ffffff38;background-color:transparent}.t-button--variant-text{height:var(--td-comp-size-m);font:var(--td-font-body-medium);padding-left:calc(var(--td-comp-paddingLR-l) - 1px);padding-right:calc(var(--td-comp-paddingLR-l) - 1px);color:var(--td-text-color-primary);background-color:transparent;border-color:transparent}.t-button--variant-text .t-icon,.t-button--variant-text .t-loading{font-size:var(--td-font-size-body-large)}.t-button--variant-text:hover,.t-button--variant-text:focus-visible{color:var(--td-text-color-primary)}.t-button--variant-text.t-is-loading{color:var(--td-text-color-primary)}.t-button--variant-text.t-is-disabled{color:var(--td-text-color-disabled)}.t-button--variant-text:hover,.t-button--variant-text:focus-visible{background-color:var(--td-bg-color-container-hover)}.t-button--variant-text.t-is-loading,.t-button--variant-text.t-is-disabled{background-color:transparent}.t-button--variant-text:hover,.t-button--variant-text:focus-visible{border-color:var(--td-bg-color-container-hover)}.t-button--variant-text.t-is-loading,.t-button--variant-text.t-is-disabled{border-color:transparent}.t-button--variant-text.t-button--theme-primary{color:var(--td-brand-color)}.t-button--variant-text.t-button--theme-primary:hover,.t-button--variant-text.t-button--theme-primary:focus-visible{color:var(--td-brand-color-hover)}.t-button--variant-text.t-button--theme-primary.t-is-loading{color:var(--td-brand-color)}.t-button--variant-text.t-button--theme-primary.t-is-disabled{color:var(--td-brand-color-disabled)}.t-button--variant-text.t-button--theme-success{color:var(--td-success-color)}.t-button--variant-text.t-button--theme-success:hover,.t-button--variant-text.t-button--theme-success:focus-visible{color:var(--td-success-color-hover)}.t-button--variant-text.t-button--theme-success.t-is-loading{color:var(--td-success-color)}.t-button--variant-text.t-button--theme-success.t-is-disabled{color:var(--td-success-color-disabled)}.t-button--variant-text.t-button--theme-warning{color:var(--td-warning-color)}.t-button--variant-text.t-button--theme-warning:hover,.t-button--variant-text.t-button--theme-warning:focus-visible{color:var(--td-warning-color-hover)}.t-button--variant-text.t-button--theme-warning.t-is-loading{color:var(--td-warning-color)}.t-button--variant-text.t-button--theme-warning.t-is-disabled{color:var(--td-warning-color-disabled)}.t-button--variant-text.t-button--theme-danger{color:var(--td-error-color)}.t-button--variant-text.t-button--theme-danger:hover,.t-button--variant-text.t-button--theme-danger:focus-visible{color:var(--td-error-color-hover)}.t-button--variant-text.t-button--theme-danger.t-is-loading{color:var(--td-error-color)}.t-button--variant-text.t-button--theme-danger.t-is-disabled{color:var(--td-error-color-disabled)}.t-button--variant-text.t-button--ghost{background:none;color:var(--td-text-color-anti)}.t-button--variant-text.t-button--ghost:hover,.t-button--variant-text.t-button--ghost:focus-visible{color:var(--td-brand-color-hover)}.t-button--variant-text.t-button--ghost:active{color:var(--td-brand-color-active)}.t-button--variant-text.t-button--ghost.t-is-loading{color:var(--td-text-color-anti)}.t-button--variant-text.t-button--ghost.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-text.t-button--ghost.t-button--theme-primary{color:var(--td-brand-color)}.t-button--variant-text.t-button--ghost.t-button--theme-primary:hover,.t-button--variant-text.t-button--ghost.t-button--theme-primary:focus-visible{color:var(--td-brand-color-hover)}.t-button--variant-text.t-button--ghost.t-button--theme-primary:active{color:var(--td-brand-color-active)}.t-button--variant-text.t-button--ghost.t-button--theme-primary.t-is-loading{color:var(--td-brand-color)}.t-button--variant-text.t-button--ghost.t-button--theme-primary.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-text.t-button--ghost.t-button--theme-success{color:var(--td-success-color)}.t-button--variant-text.t-button--ghost.t-button--theme-success:hover,.t-button--variant-text.t-button--ghost.t-button--theme-success:focus-visible{color:var(--td-success-color-hover)}.t-button--variant-text.t-button--ghost.t-button--theme-success:active{color:var(--td-success-color-active)}.t-button--variant-text.t-button--ghost.t-button--theme-success.t-is-loading{color:var(--td-success-color)}.t-button--variant-text.t-button--ghost.t-button--theme-success.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-text.t-button--ghost.t-button--theme-warning{color:var(--td-warning-color)}.t-button--variant-text.t-button--ghost.t-button--theme-warning:hover,.t-button--variant-text.t-button--ghost.t-button--theme-warning:focus-visible{color:var(--td-warning-color-hover)}.t-button--variant-text.t-button--ghost.t-button--theme-warning:active{color:var(--td-warning-color-active)}.t-button--variant-text.t-button--ghost.t-button--theme-warning.t-is-loading{color:var(--td-warning-color)}.t-button--variant-text.t-button--ghost.t-button--theme-warning.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button--variant-text.t-button--ghost.t-button--theme-danger{color:var(--td-error-color)}.t-button--variant-text.t-button--ghost.t-button--theme-danger:hover,.t-button--variant-text.t-button--ghost.t-button--theme-danger:focus-visible{color:var(--td-error-color-hover)}.t-button--variant-text.t-button--ghost.t-button--theme-danger:active{color:var(--td-error-color-active)}.t-button--variant-text.t-button--ghost.t-button--theme-danger.t-is-loading{color:var(--td-error-color)}.t-button--variant-text.t-button--ghost.t-button--theme-danger.t-is-disabled{color:#ffffff38;background-color:transparent}.t-button.t-is-loading,.t-button.t-is-disabled{cursor:not-allowed}.t-button.t-size-s{height:var(--td-comp-size-xs);font:var(--td-font-body-small);padding-left:calc(var(--td-comp-paddingLR-s) - 1px);padding-right:calc(var(--td-comp-paddingLR-s) - 1px)}.t-button.t-size-s .t-icon,.t-button.t-size-s .t-loading{font-size:var(--td-font-size-body-medium)}.t-button.t-size-l{height:var(--td-comp-size-xl);font:var(--td-font-body-large);padding-left:calc(var(--td-comp-paddingLR-xl) - 1px);padding-right:calc(var(--td-comp-paddingLR-xl) - 1px)}.t-button.t-size-l .t-icon,.t-button.t-size-l .t-loading{font-size:var(--td-font-size-title-large)}.t-button--shape-square{width:var(--td-comp-size-m);padding:0}.t-button--shape-square.t-size-s{width:var(--td-comp-size-xs);padding:0}.t-button--shape-square.t-size-l{width:var(--td-comp-size-xl);padding:0}.t-button--shape-round{border-radius:var(--td-radius-round)}.t-button--shape-round.t-size-s{border-radius:calc(var(--td-comp-size-xs) / 2)}.t-button--shape-round.t-size-l{border-radius:calc(var(--td-comp-size-xl) / 2)}.t-button--shape-circle{width:var(--td-comp-size-m);padding:0;text-align:center;border-radius:calc(var(--td-comp-size-m) / 2)}.t-button--shape-circle .t-icon,.t-button--shape-circle .t-loading{font-size:var(--td-font-size-body-large)}.t-button--shape-circle.t-size-s{width:var(--td-comp-size-xs);border-radius:calc(var(--td-comp-size-xs) / 2)}.t-button--shape-circle.t-size-l{width:var(--td-comp-size-xl);padding:0;border-radius:calc(var(--td-comp-size-xl) / 2)}.t-button.t-size-full-width{display:flex;width:100%}.t-button--ghost{--ripple-color: var(--td-gray-color-10)}.t-button:not(.t-is-disabled):not(.t-button--ghost){--ripple-color: var(--td-bg-color-container-active)}.t-button--variant-base:not(.t-is-disabled):not(.t-button--ghost){--ripple-color: var(--td-bg-color-component-active)}.t-button--variant-base.t-button--theme-primary:not(.t-is-disabled):not(.t-button--ghost){--ripple-color: var(--td-brand-color-active)}.t-button--variant-base.t-button--theme-success:not(.t-is-disabled):not(.t-button--ghost){--ripple-color: var(--td-success-color-active)}.t-button--variant-base.t-button--theme-warning:not(.t-is-disabled):not(.t-button--ghost){--ripple-color: var(--td-warning-color-active)}.t-button--variant-base.t-button--theme-danger:not(.t-is-disabled):not(.t-button--ghost){--ripple-color: var(--td-error-color-active)}.t-icon{display:inline-block;vertical-align:middle;width:1em;height:1em}.t-icon:before{font-family:unset}.t-icon{fill:currentColor}.t-icon.t-size-s,i.t-size-s{font-size:14px}.t-icon.t-size-m,i.t-size-m{font-size:16px}.t-icon.t-size-l,i.t-size-l{font-size:18px}.t-space{display:inline-flex}.t-space .t-space-item{width:inherit}.t-space-align-start{align-items:flex-start}.t-space-align-end{align-items:flex-end}.t-space-align-baseline{align-items:baseline}.t-space-align-center{align-items:center}.t-space-vertical{flex-direction:column}.t-space-vertical .t-space-item-separator{width:100%}.t-space.t-space--break-line{flex-wrap:wrap}.t-space.t-space--polyfill{display:flex}.t-space.t-space--polyfill.t-space-horizontal,.t-space.t-space--polyfill.t-space--break-line{margin-left:calc(-1 * var(--td-space-column-gap, 0))}.t-space.t-space--polyfill.t-space-vertical,.t-space.t-space--polyfill.t-space--break-line{margin-top:calc(-1 * var(--td-space-row-gap, 0))}.t-space.t-space--polyfill.t-space-horizontal>*,.t-space.t-space--polyfill.t-space--break-line>*{margin-left:var(--td-space-column-gap)}.t-space.t-space--polyfill.t-space-vertical>*,.t-space.t-space--polyfill.t-space--break-line>*{margin-top:var(--td-space-row-gap)}.content-placement-top .t-popup[data-popper-placement^=top] .t-popup__content{margin-bottom:var(--td-comp-margin-s)}.content-placement-top .t-popup[data-popper-placement^=top] .t-popup__content--arrow{margin-bottom:var(--td-comp-margin-l)}.content-placement-bottom .t-popup[data-popper-placement^=bottom] .t-popup__content{margin-top:var(--td-comp-margin-s)}.content-placement-bottom .t-popup[data-popper-placement^=bottom] .t-popup__content--arrow{margin-top:var(--td-comp-margin-l)}.content-placement-left .t-popup[data-popper-placement^=left] .t-popup__content{margin-right:var(--td-comp-margin-s)}.content-placement-left .t-popup[data-popper-placement^=left] .t-popup__content--arrow{margin-right:var(--td-comp-margin-l)}.content-placement-left .t-popup[data-popper-placement^=left] .t-popup__content--text{max-width:480px}.content-placement-right .t-popup[data-popper-placement^=right] .t-popup__content{margin-left:var(--td-comp-margin-s)}.content-placement-right .t-popup[data-popper-placement^=right] .t-popup__content--arrow{margin-left:var(--td-comp-margin-l)}.content-placement-right .t-popup[data-popper-placement^=right] .t-popup__content--text{max-width:480px}.t-popup{font:var(--td-font-body-medium);box-sizing:border-box;margin:0;padding:0;list-style:none;color:var(--td-text-color-primary);display:inline-block;z-index:5500}.t-popup__content{position:relative;background:var(--td-bg-color-container);box-shadow:var(--td-shadow-2),var(--td-shadow-inset-top),var(--td-shadow-inset-right),var(--td-shadow-inset-bottom),var(--td-shadow-inset-left);border-radius:var(--td-radius-medium);padding:var(--td-comp-paddingTB-xs) var(--td-comp-paddingLR-s);font-size:var(--td-font-size-body-medium);line-height:var(--td-line-height-body-medium);box-sizing:border-box;word-break:break-all}.t-popup__arrow{position:absolute;z-index:1;width:8px;height:8px}.t-popup__arrow:before{position:absolute;content:"";width:8px;height:8px;transform:rotate(45deg);background:var(--td-bg-color-container)}.t-popup[data-popper-placement^=top] .t-popup__content{margin-bottom:var(--td-comp-margin-s)}.t-popup[data-popper-placement^=top] .t-popup__content--arrow{margin-bottom:var(--td-comp-margin-l)}.t-popup[data-popper-placement^=bottom] .t-popup__content{margin-top:var(--td-comp-margin-s)}.t-popup[data-popper-placement^=bottom] .t-popup__content--arrow{margin-top:var(--td-comp-margin-l)}.t-popup[data-popper-placement^=left] .t-popup__content{margin-right:var(--td-comp-margin-s)}.t-popup[data-popper-placement^=left] .t-popup__content--arrow{margin-right:var(--td-comp-margin-l)}.t-popup[data-popper-placement^=left] .t-popup__content--text{max-width:480px}.t-popup[data-popper-placement^=right] .t-popup__content{margin-left:var(--td-comp-margin-s)}.t-popup[data-popper-placement^=right] .t-popup__content--arrow{margin-left:var(--td-comp-margin-l)}.t-popup[data-popper-placement^=right] .t-popup__content--text{max-width:480px}.t-popup[data-popper-placement^=top] .t-popup__arrow:before{border-top-left-radius:100%;box-shadow:var(--td-shadow-inset-left),var(--td-shadow-inset-bottom)}.t-popup[data-popper-placement=top-start] .t-popup__arrow{left:8px}.t-popup[data-popper-placement=top] .t-popup__arrow{left:50%;margin-left:-4px}.t-popup[data-popper-placement=top-end] .t-popup__arrow{left:calc(100% - 16px)}.t-popup[data-popper-placement^=bottom] .t-popup__arrow{top:-4px}.t-popup[data-popper-placement^=bottom] .t-popup__arrow:before{border-bottom-right-radius:100%;box-shadow:var(--td-shadow-inset-top),var(--td-shadow-inset-right)}.t-popup[data-popper-placement=bottom-start] .t-popup__arrow{left:8px}.t-popup[data-popper-placement=bottom] .t-popup__arrow{left:50%;margin-left:-4px}.t-popup[data-popper-placement=bottom-end] .t-popup__arrow{left:calc(100% - 16px)}.t-popup[data-popper-placement^=left] .t-popup__arrow{right:-4px}.t-popup[data-popper-placement^=left] .t-popup__arrow:before{box-shadow:var(--td-shadow-inset-left),var(--td-shadow-inset-top)}.t-popup[data-popper-placement=left-start] .t-popup__arrow{top:8px}.t-popup[data-popper-placement=left] .t-popup__arrow{top:50%;margin-top:-4px}.t-popup[data-popper-placement=left-end] .t-popup__arrow{top:calc(100% - 16px)}.t-popup[data-popper-placement^=right] .t-popup__arrow{left:-4px}.t-popup[data-popper-placement^=right] .t-popup__arrow:before{box-shadow:var(--td-shadow-inset-right),var(--td-shadow-inset-bottom)}.t-popup[data-popper-placement=right-start] .t-popup__arrow{top:8px}.t-popup[data-popper-placement=right] .t-popup__arrow{top:50%;margin-top:-4px}.t-popup[data-popper-placement=right-end] .t-popup__arrow{top:calc(100% - 16px)}.t-popup--animation-enter,.t-popup--animation-enter-from,.t-popup--animation-exiting,.t-popup--animation-leave-to{opacity:0;visibility:hidden}.t-popup--animation-enter-to,.t-popup--animation-entering,.t-popup--animation-leave-from,.t-popup--animation-leave{opacity:1;visibility:visible;transform:none}.t-popup--animation-enter-active{transition:opacity .2s linear}.t-popup--animation-leave-active{transition:opacity .2s cubic-bezier(0,0,.15,1),visibility .2s cubic-bezier(.82,0,1,.9)}.t-popup--animation-expand-enter-active[data-popper-placement^=top]{animation:t-popup-animation-expand-in-top .2s cubic-bezier(.38,0,.24,1),t-fade-in .2s linear}.t-popup--animation-expand-leave-active[data-popper-placement^=top]{animation:t-popup-animation-expand-out-top .2s cubic-bezier(.38,0,.24,1),t-fade-out .2s cubic-bezier(0,0,.15,1)}@keyframes t-popup-animation-expand-in-top{0%{clip-path:polygon(-20% 120%,120% 120%,120% 120%,-20% 120%)}to{clip-path:polygon(-20% 0,120% 0,120% 120%,-20% 120%)}}@keyframes t-popup-animation-expand-out-top{0%{clip-path:polygon(-20% 0,120% 0,120% 120%,-20% 120%)}to{clip-path:polygon(-20% 120%,120% 120%,120% 120%,-20% 120%)}}.t-popup--animation-expand-enter-active[data-popper-placement^=bottom]{animation:t-popup-animation-expand-in-bottom .2s cubic-bezier(.38,0,.24,1),t-fade-in .2s linear}.t-popup--animation-expand-leave-active[data-popper-placement^=bottom]{animation:t-popup-animation-expand-out-bottom .2s cubic-bezier(.38,0,.24,1),t-fade-out .2s cubic-bezier(0,0,.15,1)}@keyframes t-popup-animation-expand-in-bottom{0%{clip-path:polygon(-20% 0,120% 0,120% 0,-20% 0)}to{clip-path:polygon(-20% 0,120% 0,120% 120%,-20% 120%)}}@keyframes t-popup-animation-expand-out-bottom{0%{clip-path:polygon(-20% 0,120% 0,120% 120%,-20% 120%)}to{clip-path:polygon(-20% 0,120% 0,120% 0,-20% 0)}}.input-readonly.t-is-readonly{color:var(--td-text-color-primary);background-color:var(--td-bg-color-specialcomponent)}.input-readonly.t-is-readonly .t-input__inner{cursor:pointer}.input-disabled.t-is-disabled{color:var(--td-text-color-disabled);background-color:var(--td-bg-color-component-disabled)}.input-disabled.t-is-disabled:hover{border-color:var(--td-border-level-2-color)}.input-disabled.t-is-disabled .t-input__inner{cursor:not-allowed;color:var(--td-text-color-disabled)}.input-disabled.t-is-disabled .t-input__inner::placeholder{color:var(--td-text-color-disabled)}.input-disabled.t-is-disabled>.t-input__prefix .t-icon,.input-disabled.t-is-disabled>.t-input__suffix .t-icon{color:var(--td-text-color-disabled)}.input-disabled.t-is-disabled>.t-input__prefix .t-icon:hover,.input-disabled.t-is-disabled>.t-input__suffix .t-icon:hover{color:var(--td-text-color-disabled)}.t-tips{font-size:var(--td-font-size-body-small)}.t-tips.t-is-default{color:var(--td-text-color-placeholder)}.t-tips.t-is-error{color:var(--td-error-color)}.t-tips.t-is-warning{color:var(--td-warning-color)}.t-tips.t-is-success{color:var(--td-success-color)}.t-input{margin:0;padding:0;list-style:none;position:relative;height:var(--td-comp-size-m);border-width:1px;border-style:solid;border-radius:var(--td-radius-default);border-color:var(--td-border-level-2-color);padding:0 var(--td-comp-paddingLR-s);background-color:var(--td-bg-color-specialcomponent);outline:none;color:var(--td-text-color-primary);font:var(--td-font-body-medium);width:100%;box-sizing:border-box;transition:border cubic-bezier(.38,0,.24,1) .2s,box-shadow cubic-bezier(.38,0,.24,1) .2s,background-color cubic-bezier(.38,0,.24,1) .2s;display:flex;align-items:center;overflow:hidden}.t-input:hover{border-color:var(--td-brand-color)}.t-input:focus{z-index:1;border-color:var(--td-brand-color);box-shadow:0 0 0 2px var(--td-brand-color-focus)}.t-input--borderless:not(.t-input--focused){border-color:transparent;transition:border cubic-bezier(.38,0,.24,1) .2s,box-shadow cubic-bezier(.38,0,.24,1) .2s,background-color cubic-bezier(.38,0,.24,1) .2s}.t-input--borderless:not(.t-input--focused):hover{border-color:var(--td-component-border);background-color:var(--td-bg-color-container-hover);cursor:pointer}.t-input--borderless:not(.t-input--focused).t-is-disabled{border:none;background-color:var(--td-bg-color-component-disabled)}.t-input--focused{border-color:var(--td-brand-color);box-shadow:0 0 0 2px var(--td-brand-color-focus);z-index:1}.t-input :focus-visible{outline:none}.t-input__inner{flex:1;border:none;outline:none;padding:0;max-width:100%;min-width:0;color:var(--td-text-color-primary);font:inherit;background-color:transparent;box-sizing:border-box;white-space:nowrap;word-wrap:normal;overflow:hidden;text-overflow:ellipsis}.t-input__inner::placeholder{color:var(--td-text-color-placeholder)}.t-input__inner:placeholder-shown{text-overflow:ellipsis;width:100%}.t-input__inner[type=password]::-ms-reveal{display:none}.t-input__inner[type=search]::-webkit-search-decoration,.t-input__inner[type=search]::-webkit-search-cancel-button,.t-input__inner[type=search]::-webkit-search-results-button,.t-input__inner[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none;appearance:none}.t-input__inner.t-input--soft-hidden{width:0}.t-input__extra{font:var(--td-font-body-small);color:var(--td-text-color-placeholder)}.t-input__status{position:absolute;right:-24px;top:0}.t-input.t-input--suffix>span.t-input__clear{opacity:0;visibility:hidden;transition:border cubic-bezier(.38,0,.24,1) .2s,box-shadow cubic-bezier(.38,0,.24,1) .2s,background-color cubic-bezier(.38,0,.24,1) .2s}.t-input.t-input--suffix:hover>span.t-input__clear{opacity:1;visibility:visible}.t-input.t-is-success{border-color:var(--td-success-color)}.t-input.t-is-success:focus{box-shadow:0 0 0 2px var(--td-success-color-focus)}.t-input.t-is-success.t-input--focused{box-shadow:0 0 0 2px var(--td-success-color-focus)}.t-input.t-is-success>.t-input__extra{color:var(--td-success-color)}.t-input.t-is-warning{border-color:var(--td-warning-color)}.t-input.t-is-warning:focus{box-shadow:0 0 0 2px var(--td-warning-color-focus)}.t-input.t-is-warning.t-input--focused{box-shadow:0 0 0 2px var(--td-warning-color-focus)}.t-input.t-is-warning>.t-input__extra{color:var(--td-warning-color)}.t-input.t-is-error{border-color:var(--td-error-color)}.t-input.t-is-error:focus{box-shadow:0 0 0 2px var(--td-error-color-focus)}.t-input.t-is-error.t-input--focused{box-shadow:0 0 0 2px var(--td-error-color-focus)}.t-input.t-is-error>.t-input__extra{color:var(--td-error-color)}.t-input.t-is-readonly{color:var(--td-text-color-primary);background-color:var(--td-bg-color-specialcomponent)}.t-input.t-is-readonly .t-input__inner{cursor:pointer}.t-input.t-is-disabled{color:var(--td-text-color-disabled);background-color:var(--td-bg-color-component-disabled)}.t-input.t-is-disabled:hover{border-color:var(--td-border-level-2-color)}.t-input.t-is-disabled .t-input__inner{cursor:not-allowed;color:var(--td-text-color-disabled)}.t-input.t-is-disabled .t-input__inner::placeholder{color:var(--td-text-color-disabled)}.t-input.t-is-disabled>.t-input__prefix .t-icon,.t-input.t-is-disabled>.t-input__suffix .t-icon{color:var(--td-text-color-disabled)}.t-input.t-is-disabled>.t-input__prefix .t-icon:hover,.t-input.t-is-disabled>.t-input__suffix .t-icon:hover{color:var(--td-text-color-disabled)}.t-input.t-input--prefix>.t-input__prefix{z-index:2;height:100%;text-align:center;display:flex;align-items:center}.t-input.t-input--prefix>.t-input__prefix-icon{font-size:var(--td-font-size-body-large)}.t-input.t-input--suffix>.t-input__suffix{z-index:2;height:100%;text-align:center;display:flex;align-items:center}.t-input.t-input--suffix>.t-input__suffix-icon{font-size:var(--td-font-size-body-large)}.t-input .t-input__suffix-clear{cursor:pointer}.t-input.t-size-l{height:var(--td-comp-size-xl);font:var(--td-font-body-large);padding:var(--td-comp-paddingTB-m) var(--td-comp-paddingLR-m)}.t-input.t-size-s{height:var(--td-comp-size-xs);font:var(--td-font-body-small)}.t-input .t-input__prefix>.t-icon,.t-input .t-input__suffix>.t-icon{font-size:inherit}.t-input .t-input__prefix>.t-icon{font-size:16px;color:var(--td-text-color-placeholder)}.t-input .t-input__prefix:not(:empty){margin-right:var(--td-comp-margin-s)}.t-input .t-input__suffix>.t-icon{color:var(--td-text-color-placeholder);transition:all .2s linear}.t-input .t-input__suffix>.t-icon:hover{color:var(--td-text-color-secondary);transition:all .2s linear}.t-input .t-input__suffix:not(:empty){margin-left:var(--td-comp-margin-s)}.t-input.t-is-focused .t-input__prefix>.t-icon{color:var(--td-brand-color)}.t-input.t-is-focused .t-input__suffix>.t-icon-time,.t-input.t-is-focused .t-input__suffix .t-icon-calendar{color:var(--td-brand-color)}.t-input-group{position:relative;display:inline-flex;align-items:stretch}.t-input-group .t-input__wrap{border-radius:0}.t-input-group .t-input__wrap:first-child{border-radius:var(--td-radius-default) 0 0 var(--td-radius-default)}.t-input-group .t-input__wrap:last-child{border-radius:0 var(--td-radius-default) var(--td-radius-default) 0}.t-input-group .t-button,.t-input-group .t-select{border-radius:0}.t-input-group .t-button:not(:first-child),.t-input-group .t-select:not(:first-child){margin-left:-1px}.t-input-group .t-input__wrap:not(:first-child) .t-input{margin-left:-1px}.t-input-group .t-input__wrap:first-child .t-input{border-radius:var(--td-radius-default) 0 0 var(--td-radius-default)}.t-input-group .t-input__wrap:last-child .t-input{border-radius:0 var(--td-radius-default) var(--td-radius-default) 0}.t-input-group .t-button:first-child,.t-input-group .t-select:first-child{border-radius:var(--td-radius-default) 0 0 var(--td-radius-default)}.t-input-group .t-button:last-child,.t-input-group .t-select:last-child{border-radius:0 var(--td-radius-default) var(--td-radius-default) 0}.t-input-group--separate .t-input__wrap+.t-input__wrap{margin-left:var(--td-comp-margin-xxxl)}.t-input-group--separate .t-button,.t-input-group--separate .t-select{border-radius:var(--td-radius-default)}.t-input-group--separate .t-button:first-child,.t-input-group--separate .t-select:first-child{border-radius:var(--td-radius-default) 0 0 var(--td-radius-default)}.t-input-group--separate .t-button:last-child,.t-input-group--separate .t-select:last-child{border-radius:0 var(--td-radius-default) var(--td-radius-default) 0}.t-input-group--separate .t-input__wrap .t-input,.t-input-group--separate .t-input__wrap .t-input:first-child{border-radius:var(--td-radius-default)}.t-input-group--separate .t-input__wrap .t-input:last-child{border-radius:var(--td-radius-default)}.t-input-group .t-input__inner,.t-input-group .t-button,.t-input-group .t-select{position:relative;z-index:0}.t-input-group .t-input__inner:hover,.t-input-group .t-button:hover,.t-input-group .t-select:hover,.t-input-group .t-input__inner:focus,.t-input-group .t-button:focus,.t-input-group .t-select:focus,.t-input-group .t-input__inner:active,.t-input-group .t-button:active,.t-input-group .t-select:active{z-index:1}.t-input__wrap{width:100%}.t-input__tips{height:auto;min-height:var(--td-line-height-body-small);font:var(--td-font-body-small);position:absolute}.t-input__tips--default{color:var(--td-text-color-placeholder)}.t-input__tips--success{color:var(--td-success-color)}.t-input__tips--warning{color:var(--td-warning-color)}.t-input__tips--error{color:var(--td-error-color)}.t-align-center>.t-input__inner{text-align:center}.t-align-right>.t-input__inner{text-align:right}.t-input__input-pre{position:absolute;visibility:hidden;white-space:pre;display:block}.t-input--auto-width{width:fit-content;min-width:60px}.t-input__limit-number{font:var(--td-font-body-medium);color:var(--td-text-color-placeholder);background:var(--td-bg-color-specialcomponent)}.t-input__limit-number.t-is-disabled{background:var(--td-bg-color-component-disabled)}.t-input-number{font:var(--td-font-body-medium);color:var(--td-text-color-primary);margin:0;padding:0;list-style:none;display:inline-block;position:relative;box-sizing:border-box;padding:0 var(--td-comp-size-m);-webkit-user-select:none;user-select:none;width:144px}.t-input-number:not(.t-input-number--column)>.t-input-number__decrease+.t-input__wrap{margin-left:var(--td-comp-margin-xs)}.t-input-number input::-webkit-outer-spin-button,.t-input-number input::-webkit-inner-spin-button{-webkit-appearance:none;-moz-appearance:none;appearance:none}.t-input-number input[type=number]{-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield}.t-input-number>.t-input__tips{position:absolute;left:0}.t-input-number input+.t-input__suffix{margin-left:var(--td-comp-paddingLR-s)}.t-input-number .t-input__prefix{margin-right:var(--td-comp-paddingLR-s)}.t-input-number .t-input{color:var(--td-text-color-primary)}.t-input-number.t-input-number--auto-width{width:auto}.t-input-number.t-input-number--auto-width.t-is-controls-right{min-width:auto;width:auto}.t-input-number.t-input-number--auto-width .t-input__inner{min-width:42px}.t-input-number .t-input-number__decrease,.t-input-number .t-input-number__increase{width:var(--td-comp-size-m);height:var(--td-comp-size-m);position:absolute;top:0;border:1px solid var(--td-border-level-2-color);box-sizing:border-box;border-radius:var(--td-radius-default);background-color:transparent;display:flex;justify-content:center;align-items:center;z-index:1;cursor:pointer;transition:all cubic-bezier(.38,0,.24,1) .2s}.t-input-number .t-input-number__decrease:hover,.t-input-number .t-input-number__increase:hover{color:var(--td-brand-color);border-color:var(--td-brand-color)}.t-input-number .t-input-number__decrease:hover .t-icon,.t-input-number .t-input-number__increase:hover .t-icon{color:var(--td-brand-color)}.t-input-number .t-input-number__decrease:active,.t-input-number .t-input-number__increase:active{color:var(--td-brand-color);background-color:var(--td-bg-color-container-hover)}.t-input-number .t-input-number__decrease .t-icon,.t-input-number .t-input-number__increase .t-icon{position:relative;z-index:1;font-size:var(--td-font-size-body-large);color:var(--td-text-color-secondary)}.t-input-number .t-input-number__decrease.t-is-disabled,.t-input-number .t-input-number__increase.t-is-disabled{color:var(--td-text-color-disabled);cursor:no-drop;background-color:var(--td-bg-color-component-disabled)}.t-input-number .t-input-number__decrease.t-is-disabled .t-icon,.t-input-number .t-input-number__increase.t-is-disabled .t-icon{color:var(--td-text-color-disabled)}.t-input-number .t-input-number__decrease.t-is-disabled:hover,.t-input-number .t-input-number__increase.t-is-disabled:hover{border-color:var(--td-border-level-2-color)}.t-input-number .t-input-number__decrease.t-is-disabled:hover .t-icon,.t-input-number .t-input-number__increase.t-is-disabled:hover .t-icon{color:var(--td-text-color-disabled)}.t-input-number .t-input-number__decrease.t-is-disabled::placeholder,.t-input-number .t-input-number__increase.t-is-disabled::placeholder{color:var(--td-text-color-disabled)}.t-input-number .t-input-number__decrease{left:0}.t-input-number .t-input-number__increase{right:-8px}.t-input-number.t-is-disabled .t-input{cursor:no-drop;background-color:var(--td-bg-color-component-disabled);color:var(--td-text-color-disabled)}.t-input-number.t-is-disabled .t-input:hover,.t-input-number.t-is-disabled .t-input:focus,.t-input-number.t-is-disabled .t-input:active{border-color:var(--td-border-level-2-color)}.t-input-number.t-is-disabled .t-input-number__decrease,.t-input-number.t-is-disabled .t-input-number__increase{color:var(--td-text-color-disabled);cursor:no-drop;background-color:var(--td-bg-color-component-disabled)}.t-input-number.t-is-disabled .t-input-number__decrease .t-icon,.t-input-number.t-is-disabled .t-input-number__increase .t-icon{color:var(--td-text-color-secondary)}.t-input-number.t-size-s{width:120px;padding:0 var(--td-comp-size-xs)}.t-input-number.t-size-s .t-input{font-size:var(--td-font-size-body-small);height:var(--td-comp-size-xs);line-height:var(--td-comp-size-xs)}.t-input-number.t-size-s .t-input-number__decrease,.t-input-number.t-size-s .t-input-number__increase{font-size:var(--td-font-size-body-medium);width:var(--td-comp-size-xs);height:var(--td-comp-size-xs)}.t-input-number.t-size-l{width:168px;padding:0 var(--td-comp-size-xl)}.t-input-number.t-size-l .t-input{height:var(--td-comp-size-xl);line-height:var(--td-comp-size-xl)}.t-input-number.t-size-l .t-input-number__decrease,.t-input-number.t-size-l .t-input-number__increase{font-size:18px;width:var(--td-comp-size-xl);height:var(--td-comp-size-xl)}.t-input-number.t-size-l.t-is-controls-right .t-input{height:var(--td-comp-size-xl);line-height:var(--td-comp-size-xl);padding-right:calc(var(--td-comp-size-xl) + var(--td-comp-paddingLR-s))}.t-input-number.t-size-l.t-is-controls-right .t-input-number__decrease,.t-input-number.t-size-l.t-is-controls-right .t-input-number__increase{width:var(--td-comp-size-xl);font-size:var(--td-font-size-body-large)}.t-input-number.t-size-l .t-input--prefix{font:var(--td-font-body-large);padding:0 var(--td-comp-paddingLR-m)}.t-input-number.t-input-number--normal{padding:0;border-radius:var(--td-radius-default)}.t-input-number.t-input-number--normal.t-is-disabled{cursor:no-drop;color:var(--td-text-color-disabled)}.t-input-number.t-input-number--normal.t-is-disabled:hover .t-input{border-color:var(--td-border-level-2-color)}.t-input-number.t-input-number--normal.t-is-disabled::placeholder{color:var(--td-text-color-disabled)}.t-input-number.t-input-number--normal.t-is-disabled .t-input:focus{box-shadow:none}.t-input-number.t-is-controls-right{width:96px;padding:0}.t-input-number.t-is-controls-right:hover .t-input-number__decrease,.t-input-number.t-is-controls-right:hover .t-input-number__increase{opacity:1;visibility:visible}.t-input-number.t-is-controls-right .t-input{width:100%;box-sizing:border-box;margin:0;padding-right:calc(var(--td-comp-size-m) + var(--td-comp-paddingLR-s));border-radius:var(--td-radius-default)}.t-input-number.t-is-controls-right .t-input-number__decrease,.t-input-number.t-is-controls-right .t-input-number__increase{width:var(--td-comp-size-m);height:calc(calc(var(--td-comp-size-m) / 2) - 2px);border:0;left:initial;top:initial;right:1px;border-radius:0;background:var(--td-bg-color-secondarycontainer);opacity:0;visibility:hidden;z-index:2}.t-input-number.t-is-controls-right .t-input-number__decrease .t-icon,.t-input-number.t-is-controls-right .t-input-number__increase .t-icon{font-size:var(--td-font-size-body-small)}.t-input-number.t-is-controls-right .t-input-number__decrease:hover,.t-input-number.t-is-controls-right .t-input-number__increase:hover{background:var(--td-bg-color-component-hover)}.t-input-number.t-is-controls-right .t-input-number__decrease:hover .t-icon,.t-input-number.t-is-controls-right .t-input-number__increase:hover .t-icon{color:var(--td-text-color-primary)}.t-input-number.t-is-controls-right .t-input-number__decrease.t-is-disabled,.t-input-number.t-is-controls-right .t-input-number__increase.t-is-disabled{color:var(--td-text-color-disabled);cursor:no-drop;background-color:var(--td-bg-color-component-disabled)}.t-input-number.t-is-controls-right .t-input-number__decrease.t-is-disabled .t-icon,.t-input-number.t-is-controls-right .t-input-number__increase.t-is-disabled .t-icon{color:var(--td-text-color-disabled)}.t-input-number.t-is-controls-right .t-input-number__decrease.t-is-disabled:hover,.t-input-number.t-is-controls-right .t-input-number__increase.t-is-disabled:hover{border-color:var(--td-border-level-2-color)}.t-input-number.t-is-controls-right .t-input-number__decrease.t-is-disabled:hover .t-icon,.t-input-number.t-is-controls-right .t-input-number__increase.t-is-disabled:hover .t-icon{color:var(--td-text-color-disabled)}.t-input-number.t-is-controls-right .t-input-number__decrease.t-is-disabled::placeholder,.t-input-number.t-is-controls-right .t-input-number__increase.t-is-disabled::placeholder{color:var(--td-text-color-disabled)}.t-input-number.t-is-controls-right .t-input-number__increase{top:1px;border-top-right-radius:calc(var(--td-radius-default) - 1px)}.t-input-number.t-is-controls-right .t-input-number__decrease{top:calc(calc(calc(var(--td-comp-size-m) / 2) - 2px) + 3px);border-bottom-right-radius:calc(var(--td-radius-default) - 1px)}.t-input-number.t-is-controls-right.t-size-l{width:120px}.t-input-number.t-is-controls-right.t-size-l .t-input-number__increase,.t-input-number.t-is-controls-right.t-size-l .t-input-number__decrease{height:calc(calc(var(--td-comp-size-xl) / 2) - 2px)}.t-input-number.t-is-controls-right.t-size-l .t-input-number__decrease{top:calc(calc(calc(var(--td-comp-size-xl) / 2) - 2px) + 3px)}.t-input-number.t-is-controls-right.t-size-s{width:88px}.t-input-number.t-is-controls-right.t-size-s .t-input-number__increase,.t-input-number.t-is-controls-right.t-size-s .t-input-number__decrease{height:calc(calc(var(--td-comp-size-xs) / 2) - 2px)}.t-input-number.t-is-controls-right.t-size-s .t-input-number__decrease{top:calc(calc(calc(var(--td-comp-size-xs) / 2) - 2px) + 3px)}.t-input-number--row .t-input__wrap{width:initial;margin-right:var(--td-comp-margin-xs)}.t-input-number--row .t-input-number__increase{right:0}.t-select-input{font:var(--td-font-body-medium);color:var(--td-text-color-primary);box-sizing:border-box;margin:0;padding:0;list-style:none;width:100%;display:inline-block;vertical-align:middle}.t-select-input--multiple .t-input--auto-width.t-tag-input__with-suffix-icon.t-tag-input--with-tag .t-input{padding-right:var(--td-comp-paddingLR-xl)}.t-select-input--multiple .t-input--auto-width.t-tag-input__with-suffix-icon.t-tag-input--with-tag .t-input.t-size-l{padding-right:calc(var(--td-comp-paddingLR-xl) + var(--td-comp-paddingLR-s))}.t-select-input--multiple .t-input--auto-width.t-tag-input__with-suffix-icon.t-is-empty .t-input{padding-right:var(--td-comp-paddingLR-s)}.t-select-input--multiple .t-input--auto-width.t-tag-input__with-suffix-icon.t-is-empty .t-input.t-size-l{padding-right:var(--td-comp-paddingLR-m)}.t-select-input--borderless .t-input{box-shadow:none;border:1px solid transparent;background:transparent;transition:all .2s linear}.t-select-input--borderless .t-input:hover:not(.t-input--focused){border-color:var(--td-component-border);background-color:var(--td-bg-color-container-hover);border-radius:var(--td-radius-default)}.t-select-input--borderless .t-input--focused{border-color:var(--td-brand-color);box-shadow:0 0 0 2px var(--td-brand-color-focus);background-color:var(--td-bg-color-specialcomponent)}.t-select-input--borderless.t-select-input--multiple:not(.t-select-input--empty).t-select-input--popup-visible input{display:inline-block}.t-select-input--borderless.t-select-input--multiple:not(.t-select-input--empty).t-select-input--popup-visible .t-input{background-color:var(--td-bg-color-container-hover)}.t-select-input--borderless.t-tag-input{border:0;box-shadow:none;background:transparent;transition:background-color .2s linear}.t-select-input--borderless.t-tag-input:hover{background-color:var(--td-bg-color-container-hover);border-radius:var(--td-radius-default)}.t-tag{font:var(--td-font-body-medium);color:var(--td-text-color-primary);box-sizing:border-box;margin:0;padding:0;list-style:none;display:inline-flex;align-items:center;flex-direction:row;padding:0px var(--td-comp-paddingLR-s);height:var(--td-comp-size-xs);font:var(--td-font-body-small);color:var(--td-text-color-anti);border-radius:var(--td-radius-default);border:1px solid transparent;white-space:nowrap}.t-tag .t-icon{margin-right:var(--td-comp-margin-xs);width:calc(var(--td-font-size-body-medium) + 2px);height:calc(var(--td-font-size-body-medium) + 2px);flex-shrink:0}.t-tag .t-tag__icon-close{margin-right:0;margin-left:var(--td-comp-margin-s);font:var(--td-font-body-medium);cursor:pointer;transition:color .2s cubic-bezier(.38,0,.24,1)}.t-tag--default{color:var(--td-text-color-primary);background-color:var(--td-bg-color-component)}.t-tag--default .t-tag__icon-close{color:var(--td-text-color-placeholder)}.t-tag--default .t-tag__icon-close:hover{color:var(--td-text-color-primary)}.t-tag--default:active{cursor:default}.t-tag--default.t-tag--disabled{color:var(--td-text-color-disabled);background-color:var(--td-bg-color-component-disabled);border-color:var(--td-component-border);cursor:not-allowed}.t-tag--default.t-tag--disabled:hover{cursor:not-allowed}.t-tag--default.t-tag--disabled .t-icon:hover{cursor:pointer}.t-tag--default.t-tag--outline{border-color:var(--td-component-border)}.t-tag--default.t-tag--light{background-color:var(--td-bg-color-secondarycontainer)}.t-tag--default.t-tag--light-outline{border-color:var(--td-component-border);background-color:var(--td-bg-color-secondarycontainer)}.t-tag--primary{background-color:var(--td-brand-color)}.t-tag--primary.t-tag--outline{border-color:var(--td-brand-color)}.t-tag--primary.t-tag--light{background-color:var(--td-brand-color-light)}.t-tag--primary.t-tag--light-outline{border-color:var(--td-brand-color);background-color:var(--td-brand-color-light)}.t-tag--primary.t-tag--light,.t-tag--primary.t-tag--outline,.t-tag--primary.t-tag--light-outline{color:var(--td-brand-color)}.t-tag--primary.t-tag--light .t-tag__icon-close:hover,.t-tag--primary.t-tag--outline .t-tag__icon-close:hover,.t-tag--primary.t-tag--light-outline .t-tag__icon-close:hover{color:var(--td-brand-color-hover)}.t-tag--success{background-color:var(--td-success-color)}.t-tag--success.t-tag--outline{border-color:var(--td-success-color)}.t-tag--success.t-tag--light{background-color:var(--td-success-color-light)}.t-tag--success.t-tag--light-outline{border-color:var(--td-success-color);background-color:var(--td-success-color-light)}.t-tag--success.t-tag--light,.t-tag--success.t-tag--outline,.t-tag--success.t-tag--light-outline{color:var(--td-success-color)}.t-tag--success.t-tag--light .t-tag__icon-close:hover,.t-tag--success.t-tag--outline .t-tag__icon-close:hover,.t-tag--success.t-tag--light-outline .t-tag__icon-close:hover{color:var(--td-success-color-hover)}.t-tag--warning{background-color:var(--td-warning-color)}.t-tag--warning.t-tag--outline{border-color:var(--td-warning-color)}.t-tag--warning.t-tag--light{background-color:var(--td-warning-color-light)}.t-tag--warning.t-tag--light-outline{border-color:var(--td-warning-color);background-color:var(--td-warning-color-light)}.t-tag--warning.t-tag--light,.t-tag--warning.t-tag--outline,.t-tag--warning.t-tag--light-outline{color:var(--td-warning-color)}.t-tag--warning.t-tag--light .t-tag__icon-close:hover,.t-tag--warning.t-tag--outline .t-tag__icon-close:hover,.t-tag--warning.t-tag--light-outline .t-tag__icon-close:hover{color:var(--td-warning-color-hover)}.t-tag--danger{background-color:var(--td-error-color)}.t-tag--danger.t-tag--outline{border-color:var(--td-error-color)}.t-tag--danger.t-tag--light{background-color:var(--td-error-color-light)}.t-tag--danger.t-tag--light-outline{border-color:var(--td-error-color);background-color:var(--td-error-color-light)}.t-tag--danger .t-tag__icon-close{fill:var(--td-error-color)}.t-tag--danger .t-tag__icon-close:hover{fill:var(--td-error-color-hover)}.t-tag--danger.t-tag--light,.t-tag--danger.t-tag--outline,.t-tag--danger.t-tag--light-outline{color:var(--td-error-color)}.t-tag--danger.t-tag--light .t-tag__icon-close:hover,.t-tag--danger.t-tag--outline .t-tag__icon-close:hover,.t-tag--danger.t-tag--light-outline .t-tag__icon-close:hover{color:var(--td-error-color-hover)}.t-tag--dark.t-tag:not(.t-tag--default) .t-tag__icon-close{color:var(--td-font-white-2)}.t-tag--dark.t-tag:not(.t-tag--default) .t-tag__icon-close:hover{color:var(--td-font-white-1)}.t-tag.t-tag--outline{background:transparent}.t-tag.t-size-s{padding:0px var(--td-comp-paddingLR-xs);height:var(--td-comp-size-xxs);font:var(--td-font-body-small)}.t-tag.t-size-s .t-icon{font-size:var(--td-font-body-small)}.t-tag.t-size-l{padding:0px var(--td-comp-paddingLR-m);height:var(--td-comp-size-m);font:var(--td-font-body-medium)}.t-tag.t-size-l .t-icon{font:var(--td-font-body-medium)}.t-tag.t-tag--round{border-radius:var(--td-radius-extraLarge)}.t-tag.t-tag--mark{border-radius:0 var(--td-radius-extraLarge) var(--td-radius-extraLarge) 0}.t-tag.t-tag--ellipsis .t-tag--text{display:inline-block;white-space:nowrap;word-wrap:normal;overflow:hidden;text-overflow:ellipsis}.t-tag.t-tag--check:not(.t-tag--disabled){transition:background-color .2s cubic-bezier(.38,0,.24,1);cursor:pointer}.t-tag.t-tag--check:not(.t-tag--disabled).t-tag--default.t-tag--dark:not(.t-tag--checked):hover{background-color:var(--td-bg-color-component-hover)}.t-tag.t-tag--check:not(.t-tag--disabled).t-tag--primary.t-tag--dark.t-tag--checked:hover{background-color:var(--td-brand-color-hover)}.t-tag.t-tag--check:not(.t-tag--disabled).t-tag--default.t-tag--outline:not(.t-tag--checked):hover{color:var(--td-brand-color-hover)}.t-tag--check.t-tag--disabled.t-tag--primary.t-tag--dark{background-color:var(--td-brand-color-disabled);cursor:not-allowed}.t-tag--check.t-tag--disabled.t-tag--primary.t-tag--outline{color:var(--td-text-color-disabled);background-color:var(--td-bg-color-component-disabled);border-color:var(--td-text-color-disabled);cursor:not-allowed}.t-check-tag-group .t-tag:not(:last-child){margin-right:var(--td-comp-margin-s)}a .t-tag{cursor:pointer;transition:all .2s linear}a .t-tag:hover{color:var(--td-brand-color);background-color:var(--td-bg-color-component-hover)}a .t-tag:active{color:var(--td-brand-color-active);background-color:var(--td-bg-color-component-active)}@keyframes t-fade-in{0%{opacity:0}to{opacity:1}}@keyframes t-fade-out{0%{opacity:1}to{opacity:0}}@keyframes t-spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.t-icon-loading{animation:t-spin 1s linear infinite}@keyframes t-zoom-out{0%{transform:scale(.2)}to{transform:scale(1)}}.t-tag-input{font:var(--td-font-body-medium);color:var(--td-text-color-primary);box-sizing:border-box;margin:0;padding:0;list-style:none}.t-tag-input .t-tag{vertical-align:middle;animation:t-fade-in .2s ease-in-out;margin:3px var(--td-comp-margin-xs) 3px 0}.t-tag-input .t-tag-input__drag_wrapper+.t-tag-input__drag_wrapper{margin-left:var(--td-comp-margin-xs)}.t-tag-input .t-input{overflow:hidden;min-height:var(--td-comp-size-m);height:fit-content;padding:0 var(--td-comp-paddingLR-s) 0 var(--td-comp-margin-xs)}.t-tag-input .t-input .t-input__suffix-icon{right:var(--td-comp-margin-s)}.t-tag-input .t-input.t-size-s{padding:0 var(--td-comp-paddingLR-s) 0 var(--td-comp-margin-xs);min-height:var(--td-comp-size-xs)}.t-tag-input .t-input.t-size-s .t-tag{margin:1px var(--td-comp-margin-xs) 1px 0}.t-tag-input .t-input.t-size-l{min-height:var(--td-comp-size-xl);padding:0 var(--td-comp-paddingLR-m) 0 var(--td-comp-margin-s)}.t-tag-input .t-input.t-size-l .t-input__suffix-icon{right:var(--td-comp-margin-m)}.t-tag-input.t-is-empty .t-input__inner{margin-left:var(--td-comp-margin-xs)}.t-tag-input:hover .t-input__inner:not(.t-input--soft-hidden),.t-tag-input .t-input--focused .t-input__inner:not(.t-input--soft-hidden){min-width:20px}.t-tag-input .t-tag-input__prefix{margin-left:var(--td-comp-margin-xs);line-height:1}.t-tag-input .t-tag-input__prefix>.t-icon{color:var(--td-text-color-placeholder)}.t-tag-input .t-input .t-input__prefix:not(:empty){margin-right:0}.t-tag-input.t-input--auto-width .t-input.t-input--focused{padding-right:calc(var(--td-comp-paddingLR-xxl) + var(--td-comp-paddingLR-xxs))}.t-tag-input.t-input--auto-width .t-input__prefix{white-space:nowrap}.t-tag-input .t-input__prefix--scrollable{overflow-y:hidden;overflow-x:auto}@-moz-document url-prefix(){.t-tag-input .t-input__prefix--scrollable{scrollbar-color:var(--td-scrollbar-color) transparent;scrollbar-width:thin}}.t-tag-input .t-input__prefix--scrollable::-webkit-scrollbar{width:6px;height:6px}.t-tag-input .t-input__prefix--scrollable::-webkit-scrollbar-thumb{border:0px solid transparent;background-clip:content-box;background-color:var(--td-scrollbar-color);border-radius:11px}.t-tag-input .t-input__prefix--scrollable::-webkit-scrollbar-thumb:vertical:hover,.t-tag-input .t-input__prefix--scrollable::-webkit-scrollbar-thumb:horizontal:hover{background-color:var(--td-scrollbar-hover-color)}.t-tag-input__suffix-clear{cursor:pointer}.t-tag-input--break-line:not(.t-is-empty) .t-input{display:block}.t-tag-input--break-line:not(.t-is-empty) .t-input.t-input--prefix>.t-input__prefix{display:inline;text-align:left}.t-tag-input--break-line:not(.t-is-empty) .t-input .t-input__suffix-icon{position:absolute;bottom:0}.t-tag-input--break-line:not(.t-is-empty) .t-tag-input__prefix{vertical-align:middle}.t-tag-input__prefix{width:max-content;display:inline-block;margin-right:var(--td-comp-margin-s)}.t-tag-input--break-line.t-tag-input--with-tag:not(.t-input--auto-width) .t-input,.t-tag-input.t-input--auto-width:hover .t-input{padding-right:calc(var(--td-comp-paddingLR-xxl) + var(--td-comp-paddingLR-xxs))}.t-tag-input--break-line.t-tag-input--with-tag:not(.t-input--auto-width) .t-size-l .t-input,.t-tag-input.t-input--auto-width:hover .t-size-l .t-input{padding-right:calc(var(--td-comp-paddingLR-xxl) + var(--td-comp-paddingLR-xs))}.t-tag-input.t-input--auto-width .t-input{padding-right:0}.t-checkbox-group{font:var(--td-font-body-medium);color:var(--td-text-color-primary);box-sizing:border-box;margin:0;padding:0;list-style:none;display:inline-flex;flex-wrap:wrap;gap:16px}.t-checkbox{font:var(--td-font-body-medium);box-sizing:border-box;margin:0;padding:0;list-style:none;display:inline-flex;align-items:center;position:relative;cursor:pointer;color:var(--td-text-color-primary)}.t-checkbox+.t-checkbox{margin-left:inherit}.t-checkbox__former{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;outline:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}.t-checkbox__input{position:relative;display:inline-block;width:16px;height:16px;vertical-align:middle;border:1px solid var(--td-border-level-2-color);border-radius:var(--td-radius-default);background-color:var(--td-bg-color-container);box-sizing:border-box}.t-checkbox__input:after{content:"";position:absolute;opacity:0;box-sizing:border-box}.t-checkbox__label{display:inline-block;margin-left:8px;vertical-align:middle;font:var(--td-font-body-medium)}.t-checkbox:hover .t-checkbox__input{border-color:var(--td-brand-color);transition:border-color .2s linear}.t-checkbox.t-is-checked .t-checkbox__input{border-color:var(--td-brand-color);background-color:var(--td-brand-color);transition:background-color .2s cubic-bezier(.82,0,1,.9)}.t-checkbox.t-is-checked .t-checkbox__input:after{opacity:1;top:6px;left:3px;width:5px;height:9px;border:2px solid var(--td-text-color-anti);border-radius:0 0 1px;border-top:0;border-left:0;transform:rotate(45deg) scale(1) translate(-50%,-50%);background:transparent}.t-checkbox.t-is-indeterminate .t-checkbox__input{border-color:var(--td-brand-color);background-color:var(--td-brand-color);transition:background-color .2s cubic-bezier(.82,0,1,.9)}.t-checkbox.t-is-indeterminate .t-checkbox__input:after{opacity:1;width:16px;height:4px;left:-1px;right:0;top:5px;border:unset;transform:scale(.5);background-color:var(--td-font-white-1)}.t-checkbox.t-is-disabled{cursor:not-allowed}.t-checkbox.t-is-disabled .t-checkbox__label{color:var(--td-text-color-disabled)}.t-checkbox.t-is-disabled .t-checkbox__input{background-color:var(--td-bg-color-component-disabled)}.t-checkbox.t-is-disabled:hover .t-checkbox__input,.t-checkbox.t-is-disabled.t-is-checked .t-checkbox__input{border-color:var(--td-border-level-2-color)}.t-checkbox.t-is-disabled.t-is-checked .t-checkbox__input:after{border-color:var(--td-text-color-disabled)}.t-checkbox.t-is-disabled.t-is-indeterminate .t-checkbox__input{border-color:var(--td-border-level-2-color)}.t-checkbox.t-is-disabled.t-is-indeterminate .t-checkbox__input:after{background-color:var(--td-text-color-disabled)}.t-checkbox:focus-visible:focus-visible{outline:2px solid var(--td-brand-color);outline-offset:var(--td-comp-paddingTB-xs);border-radius:0}.t-select__wrap{width:100%}.t-select__dropdown .t-popup__content{margin:var(--td-comp-paddingTB-s) 0;padding:0;max-height:300px;overflow-y:auto;overscroll-behavior:contain;box-shadow:var(--td-shadow-2)}@-moz-document url-prefix(){.t-select__dropdown .t-popup__content{scrollbar-color:var(--td-scrollbar-color) transparent;scrollbar-width:thin}}.t-select__dropdown .t-popup__content::-webkit-scrollbar{width:8px;height:8px}.t-select__dropdown .t-popup__content::-webkit-scrollbar-thumb{border:2px solid transparent;background-clip:content-box;background-color:var(--td-scrollbar-color);border-radius:15px}.t-select__dropdown .t-popup__content::-webkit-scrollbar-thumb:vertical:hover,.t-select__dropdown .t-popup__content::-webkit-scrollbar-thumb:horizontal:hover{background-color:var(--td-scrollbar-hover-color)}.t-select__dropdown-inner .t-select__list .t-select__list{padding:0}.t-select__dropdown-inner .t-select__list,.t-select__dropdown-inner .t-tree{padding:var(--td-pop-padding-m)}.t-select__dropdown-inner--size-s .t-select__list,.t-select__dropdown-inner--size-s .t-tree{padding:var(--td-pop-padding-s)}.t-select__dropdown-inner--size-l .t-select__list,.t-select__dropdown-inner--size-l .t-tree{padding:var(--td-pop-padding-l)}.t-select__list{margin:0;padding:0;list-style:none}.t-select__dropdown.t-popup{padding:0}.t-select__empty.t-size-s{line-height:var(--td-comp-size-xs)}.t-select__empty{text-align:center;color:var(--td-text-color-disabled);line-height:var(--td-comp-size-m);padding:0 var(--td-comp-paddingLR-s)}.t-select__empty.t-size-l{line-height:var(--td-comp-size-xl)}.t-select__loading-tips.t-size-s{line-height:var(--td-comp-size-xs)}.t-select__loading-tips{text-align:center;line-height:var(--td-comp-size-m);color:var(--td-text-color-disabled)}.t-select__loading-tips.t-size-l{line-height:var(--td-comp-size-xl)}.t-select-option-group+.t-select-option-group{padding-top:var(--td-comp-margin-xs);margin-top:var(--td-comp-margin-xs)}.t-select-option-group__divider+.t-select-option-group__divider{position:relative}.t-select-option-group__divider+.t-select-option-group__divider:before{content:"";width:100%;height:1px;padding:0 var(--td-comp-paddingLR-s);position:absolute;top:0;left:0;box-sizing:border-box;background-color:var(--td-border-level-1-color);background-clip:content-box}ul.t-select-option-group__header,.t-select-option-group__header{color:var(--td-text-color-placeholder);display:block;height:var(--td-comp-size-s);line-height:var(--td-comp-size-s);padding:0 var(--td-comp-paddingLR-s);box-sizing:border-box;white-space:nowrap;word-wrap:normal;overflow:hidden;text-overflow:ellipsis}.t-select-option-group__header.t-size-l{height:var(--td-comp-size-l);line-height:var(--td-comp-size-l);padding:0 var(--td-comp-paddingLR-m)}.t-select-option-group__header.t-size-s{height:var(--td-comp-size-xxs);line-height:var(--td-comp-size-xxs);padding:0 var(--td-comp-paddingLR-s)}.t-select-option{display:flex;align-items:center;border-radius:var(--td-radius-default);height:var(--td-comp-size-s);font:var(--td-font-body-medium);cursor:pointer;padding:0 var(--td-comp-paddingLR-s);color:var(--td-text-color-primary);transition:background-color .2s cubic-bezier(.38,0,.24,1);box-sizing:border-box;--ripple-color: var(--td-bg-color-container-active)}.t-select-option span{position:relative;white-space:nowrap;word-wrap:normal;overflow:hidden;text-overflow:ellipsis}.t-select-option:not(.t-is-disabled):not(.t-is-selected):hover{background-color:var(--td-bg-color-container-hover)}.t-select-option:not(.t-is-disabled):not(.t-is-selected):hover .t-checkbox__label{color:inherit}.t-select-option:not(.t-is-disabled):not(.t-is-selected):hover .t-checkbox__input{border-color:var(--td-brand-color)}.t-select-option .t-checkbox__label{color:var(--td-text-color-primary);flex:1;white-space:nowrap;word-wrap:normal;overflow:hidden;text-overflow:ellipsis}.t-select-option .t-checkbox{width:100%}.t-select-option.t-is-disabled{cursor:not-allowed;color:var(--td-text-color-disabled);background:var(--td-bg-color-specialcomponent)}.t-select-option.t-is-disabled:hover,.t-select-option.t-is-disabled :active{background:var(--td-bg-color-specialcomponent)}.t-select-option.t-size-l{height:var(--td-comp-size-l);padding:0 var(--td-comp-paddingLR-m);font:var(--td-font-body-large)}.t-select-option.t-size-m{font:var(--td-font-body-medium)}.t-select-option.t-size-s{height:var(--td-comp-size-xxs);padding:0 var(--td-comp-paddingLR-s);font:var(--td-font-body-small)}.t-select-option.t-is-selected:not(.t-is-disabled){color:var(--td-brand-color);background-color:var(--td-brand-color-light);transition:all .2s linear}.t-select-option.t-is-selected:not(.t-is-disabled) .t-checkbox__label{color:var(--td-brand-color)}.t-select-option.t-is-selected:not(.t-is-disabled):hover{background-color:var(--td-brand-color-light)}.t-select-option.t-select-option__hover:not(.t-is-disabled).t-select-option.t-select-option__hover:not(.t-is-selected),.t-select-option.t-select-option__hover:not(.t-is-disabled).t-select-option.t-select-option--hover:not(.t-is-selected),.t-select-option.t-select-option--hover:not(.t-is-disabled).t-select-option.t-select-option__hover:not(.t-is-selected),.t-select-option.t-select-option--hover:not(.t-is-disabled).t-select-option.t-select-option--hover:not(.t-is-selected){background-color:var(--td-bg-color-container-hover)}.t-select-option.t-select-option__hover:not(.t-is-disabled).t-select-option.t-select-option__hover:not(.t-is-selected) .t-checkbox__input,.t-select-option.t-select-option__hover:not(.t-is-disabled).t-select-option.t-select-option--hover:not(.t-is-selected) .t-checkbox__input,.t-select-option.t-select-option--hover:not(.t-is-disabled).t-select-option.t-select-option__hover:not(.t-is-selected) .t-checkbox__input,.t-select-option.t-select-option--hover:not(.t-is-disabled).t-select-option.t-select-option--hover:not(.t-is-selected) .t-checkbox__input{border-color:var(--td-brand-color)}.t-select-option.t-select-option__hover .t-checkbox__label,.t-select-option.t-select-option--hover .t-checkbox__label{color:inherit}.t-select-option+.t-select-option{margin-top:var(--td-comp-paddingTB-xxs)}.t-select.t-select-input--borderless .t-select__right-icon{position:relative;margin:0}.t-select .t-fake-arrow{color:var(--td-text-color-placeholder)}.t-select .t-fake-arrow--active{color:var(--td-brand-color)}.t-is-selected.t-select-option__hover{background-color:var(--td-brand-color-light-hover)}.t-is-selected.t-select-option__hover .t-checkbox__label{color:var(--td-brand-color)}:root{--td-screen-xs: 320px;--td-screen-sm: 768px;--td-screen-md: 992px;--td-screen-lg: 1200px;--td-screen-xl: 1400px;--td-screen-xxl: 1880px}@-moz-document url-prefix(){.narrow-scrollbar{scrollbar-color:var(--td-scrollbar-color) transparent;scrollbar-width:thin}}.narrow-scrollbar::-webkit-scrollbar{width:8px;height:8px}.narrow-scrollbar::-webkit-scrollbar-thumb{border:2px solid transparent;background-clip:content-box;background-color:var(--td-scrollbar-color);border-radius:15px}.narrow-scrollbar::-webkit-scrollbar-thumb:vertical:hover,.narrow-scrollbar::-webkit-scrollbar-thumb:horizontal:hover{background-color:var(--td-scrollbar-hover-color)}.t-fake-arrow path{transition:d .2s;stroke:currentcolor}.t-fake-arrow--active path{d:path("M3.75 10.2002L7.99274 5.7998L12.2361 10.0425")}.t-slide-down-enter-active,.t-slide-down-leave-active{transition:height .2s cubic-bezier(.38,0,.24,1)}:root,:root[theme-mode=light]{--td-brand-color-1: #f2f3ff;--td-brand-color-2: #d9e1ff;--td-brand-color-3: #b5c7ff;--td-brand-color-4: #8eabff;--td-brand-color-5: #618dff;--td-brand-color-6: #366ef4;--td-brand-color-7: #0052d9;--td-brand-color-8: #003cab;--td-brand-color-9: #002a7c;--td-brand-color-10: #001a57;--td-warning-color-1: #fff1e9;--td-warning-color-2: #ffd9c2;--td-warning-color-3: #ffb98c;--td-warning-color-4: #fa9550;--td-warning-color-5: #e37318;--td-warning-color-6: #be5a00;--td-warning-color-7: #954500;--td-warning-color-8: #713300;--td-warning-color-9: #532300;--td-warning-color-10: #3b1700;--td-error-color-1: #fff0ed;--td-error-color-2: #ffd8d2;--td-error-color-3: #ffb9b0;--td-error-color-4: #ff9285;--td-error-color-5: #f6685d;--td-error-color-6: #d54941;--td-error-color-7: #ad352f;--td-error-color-8: #881f1c;--td-error-color-9: #68070a;--td-error-color-10: #490002;--td-success-color-1: #e3f9e9;--td-success-color-2: #c6f3d7;--td-success-color-3: #92dab2;--td-success-color-4: #56c08d;--td-success-color-5: #2ba471;--td-success-color-6: #008858;--td-success-color-7: #006c45;--td-success-color-8: #005334;--td-success-color-9: #003b23;--td-success-color-10: #002515;--td-gray-color-1: #f3f3f3;--td-gray-color-2: #eee;--td-gray-color-3: #e8e8e8;--td-gray-color-4: #ddd;--td-gray-color-5: #c6c6c6;--td-gray-color-6: #a6a6a6;--td-gray-color-7: #8b8b8b;--td-gray-color-8: #777;--td-gray-color-9: #5e5e5e;--td-gray-color-10: #4b4b4b;--td-gray-color-11: #393939;--td-gray-color-12: #2c2c2c;--td-gray-color-13: #242424;--td-gray-color-14: #181818;--td-font-white-1: #ffffff;--td-font-white-2: rgba(255, 255, 255, .55);--td-font-white-3: rgba(255, 255, 255, .35);--td-font-white-4: rgba(255, 255, 255, .22);--td-font-gray-1: rgba(0, 0, 0, .9);--td-font-gray-2: rgba(0, 0, 0, .6);--td-font-gray-3: rgba(0, 0, 0, .4);--td-font-gray-4: rgba(0, 0, 0, .26);--td-brand-color: var(--td-brand-color-7);--td-warning-color: var(--td-warning-color-5);--td-error-color: var(--td-error-color-6);--td-success-color: var(--td-success-color-5);--td-brand-color-hover: var(--td-brand-color-6);--td-brand-color-focus: var(--td-brand-color-2);--td-brand-color-active: var(--td-brand-color-8);--td-brand-color-disabled: var(--td-brand-color-3);--td-brand-color-light: var(--td-brand-color-1);--td-brand-color-light-hover: var(--td-brand-color-2);--td-warning-color-hover: var(--td-warning-color-4);--td-warning-color-focus: var(--td-warning-color-2);--td-warning-color-active: var(--td-warning-color-6);--td-warning-color-disabled: var(--td-warning-color-3);--td-warning-color-light: var(--td-warning-color-1);--td-warning-color-light-hover: var(--td-warning-color-2);--td-error-color-hover: var(--td-error-color-5);--td-error-color-focus: var(--td-error-color-2);--td-error-color-active: var(--td-error-color-7);--td-error-color-disabled: var(--td-error-color-3);--td-error-color-light: var(--td-error-color-1);--td-error-color-light-hover: var(--td-error-color-2);--td-success-color-hover: var(--td-success-color-4);--td-success-color-focus: var(--td-success-color-2);--td-success-color-active: var(--td-success-color-6);--td-success-color-disabled: var(--td-success-color-3);--td-success-color-light: var(--td-success-color-1);--td-success-color-light-hover: var(--td-success-color-2);--td-mask-active: rgba(0, 0, 0, .6);--td-mask-disabled: rgba(255, 255, 255, .6);--td-bg-color-page: var(--td-gray-color-2);--td-bg-color-container: #fff;--td-bg-color-container-hover: var(--td-gray-color-1);--td-bg-color-container-active: var(--td-gray-color-3);--td-bg-color-container-select: #fff;--td-bg-color-secondarycontainer: var(--td-gray-color-1);--td-bg-color-secondarycontainer-hover: var(--td-gray-color-2);--td-bg-color-secondarycontainer-active: var(--td-gray-color-4);--td-bg-color-component: var(--td-gray-color-3);--td-bg-color-component-hover: var(--td-gray-color-4);--td-bg-color-component-active: var(--td-gray-color-6);--td-bg-color-secondarycomponent: var(--td-gray-color-4);--td-bg-color-secondarycomponent-hover: var(--td-gray-color-5);--td-bg-color-secondarycomponent-active: var(--td-gray-color-6);--td-bg-color-component-disabled: var(--td-gray-color-2);--td-bg-color-specialcomponent: #fff;--td-text-color-primary: var(--td-font-gray-1);--td-text-color-secondary: var(--td-font-gray-2);--td-text-color-placeholder: var(--td-font-gray-3);--td-text-color-disabled: var(--td-font-gray-4);--td-text-color-anti: #fff;--td-text-color-brand: var(--td-brand-color-7);--td-text-color-link: var(--td-brand-color-8);--td-border-level-1-color: var(--td-gray-color-3);--td-component-stroke: var(--td-gray-color-3);--td-border-level-2-color: var(--td-gray-color-4);--td-component-border: var(--td-gray-color-4);--td-shadow-1: 0 1px 10px rgba(0, 0, 0, .05), 0 4px 5px rgba(0, 0, 0, 8%), 0 2px 4px -1px rgba(0, 0, 0, 12%);--td-shadow-2: 0 3px 14px 2px rgba(0, 0, 0, .05), 0 8px 10px 1px rgba(0, 0, 0, 6%), 0 5px 5px -3px rgba(0, 0, 0, 10%);--td-shadow-3: 0 6px 30px 5px rgba(0, 0, 0, .05), 0 16px 24px 2px rgba(0, 0, 0, 4%), 0 8px 10px -5px rgba(0, 0, 0, 8%);--td-shadow-inset-top: inset 0 .5px 0 #dcdcdc;--td-shadow-inset-right: inset .5px 0 0 #dcdcdc;--td-shadow-inset-bottom: inset 0 -.5px 0 #dcdcdc;--td-shadow-inset-left: inset -.5px 0 0 #dcdcdc;--td-table-shadow-color: rgba(0, 0, 0, .08);--td-scrollbar-color: rgba(0, 0, 0, .1);--td-scrollbar-hover-color: rgba(0, 0, 0, .3);--td-scroll-track-color: #fff}:root[theme-mode=dark]{--td-brand-color-1: #1b2f51;--td-brand-color-2: #173463;--td-brand-color-3: #143975;--td-brand-color-4: #103d88;--td-brand-color-5: #0d429a;--td-brand-color-6: #054bbe;--td-brand-color-7: #2667d4;--td-brand-color-8: #4582e6;--td-brand-color-9: #699ef5;--td-brand-color-10: #96bbf8;--td-warning-color-1: #4f2a1d;--td-warning-color-2: #582f21;--td-warning-color-3: #733c23;--td-warning-color-4: #a75d2b;--td-warning-color-5: #cf6e2d;--td-warning-color-6: #dc7633;--td-warning-color-7: #e8935c;--td-warning-color-8: #ecbf91;--td-warning-color-9: #eed7bf;--td-warning-color-10: #f3e9dc;--td-error-color-1: #472324;--td-error-color-2: #5e2a2d;--td-error-color-3: #703439;--td-error-color-4: #83383e;--td-error-color-5: #a03f46;--td-error-color-6: #c64751;--td-error-color-7: #de6670;--td-error-color-8: #ec888e;--td-error-color-9: #edb1b6;--td-error-color-10: #eeced0;--td-success-color-1: #193a2a;--td-success-color-2: #1a4230;--td-success-color-3: #17533d;--td-success-color-4: #0d7a55;--td-success-color-5: #059465;--td-success-color-6: #43af8a;--td-success-color-7: #46bf96;--td-success-color-8: #80d2b6;--td-success-color-9: #b4e1d3;--td-success-color-10: #deede8;--td-gray-color-1: #f3f3f3;--td-gray-color-2: #eee;--td-gray-color-3: #e8e8e8;--td-gray-color-4: #ddd;--td-gray-color-5: #c6c6c6;--td-gray-color-6: #a6a6a6;--td-gray-color-7: #8b8b8b;--td-gray-color-8: #777;--td-gray-color-9: #5e5e5e;--td-gray-color-10: #4b4b4b;--td-gray-color-11: #393939;--td-gray-color-12: #2c2c2c;--td-gray-color-13: #242424;--td-gray-color-14: #181818;--td-font-white-1: rgba(255, 255, 255, .9);--td-font-white-2: rgba(255, 255, 255, .55);--td-font-white-3: rgba(255, 255, 255, .35);--td-font-white-4: rgba(255, 255, 255, .22);--td-font-gray-1: rgba(0, 0, 0, .9);--td-font-gray-2: rgba(0, 0, 0, .6);--td-font-gray-3: rgba(0, 0, 0, .4);--td-font-gray-4: rgba(0, 0, 0, .26);--td-brand-color: var(--td-brand-color-8);--td-warning-color: var(--td-warning-color-5);--td-error-color: var(--td-error-color-6);--td-success-color: var(--td-success-color-5);--td-brand-color-hover: var(--td-brand-color-7);--td-brand-color-focus: var(--td-brand-color-2);--td-brand-color-active: var(--td-brand-color-9);--td-brand-color-disabled: var(--td-brand-color-3);--td-brand-color-light: var(--td-brand-color-1);--td-brand-color-light-hover: var(--td-brand-color-2);--td-warning-color-hover: var(--td-warning-color-4);--td-warning-color-focus: var(--td-warning-color-2);--td-warning-color-active: var(--td-warning-color-6);--td-warning-color-disabled: var(--td-warning-color-3);--td-warning-color-light: var(--td-warning-color-1);--td-warning-color-light-hover: var(--td-warning-color-2);--td-error-color-hover: var(--td-error-color-5);--td-error-color-focus: var(--td-error-color-2);--td-error-color-active: var(--td-error-color-7);--td-error-color-disabled: var(--td-error-color-3);--td-error-color-light: var(--td-error-color-1);--td-error-color-light-hover: var(--td-error-color-2);--td-success-color-hover: var(--td-success-color-4);--td-success-color-focus: var(--td-success-color-2);--td-success-color-active: var(--td-success-color-6);--td-success-color-disabled: var(--td-success-color-3);--td-success-color-light: var(--td-success-color-1);--td-success-color-light-hover: var(--td-success-color-2);--td-mask-active: rgba(0, 0, 0, .4);--td-mask-disabled: rgba(0, 0, 0, .6);--td-bg-color-page: var(--td-gray-color-14);--td-bg-color-container: var(--td-gray-color-13);--td-bg-color-container-hover: var(--td-gray-color-12);--td-bg-color-container-active: var(--td-gray-color-10);--td-bg-color-container-select: var(--td-gray-color-9);--td-bg-color-secondarycontainer: var(--td-gray-color-12);--td-bg-color-secondarycontainer-hover: var(--td-gray-color-11);--td-bg-color-secondarycontainer-active: var(--td-gray-color-9);--td-bg-color-component: var(--td-gray-color-11);--td-bg-color-component-hover: var(--td-gray-color-10);--td-bg-color-component-active: var(--td-gray-color-9);--td-bg-color-secondarycomponent: var(--td-gray-color-10);--td-bg-color-secondarycomponent-hover: var(--td-gray-color-9);--td-bg-color-secondarycomponent-active: var(--td-gray-color-8);--td-bg-color-component-disabled: var(--td-gray-color-12);--td-bg-color-specialcomponent: transparent;--td-text-color-primary: var(--td-font-white-1);--td-text-color-secondary: var(--td-font-white-2);--td-text-color-placeholder: var(--td-font-white-3);--td-text-color-disabled: var(--td-font-white-4);--td-text-color-anti: #fff;--td-text-color-brand: var(--td-brand-color-8);--td-text-color-link: var(--td-brand-color-8);--td-border-level-1-color: var(--td-gray-color-11);--td-component-stroke: var(--td-gray-color-11);--td-border-level-2-color: var(--td-gray-color-9);--td-component-border: var(--td-gray-color-9);--td-shadow-1: 0 4px 6px rgba(0, 0, 0, .06), 0 1px 10px rgba(0, 0, 0, 8%), 0 2px 4px rgba(0, 0, 0, 12%);--td-shadow-2: 0 8px 10px rgba(0, 0, 0, .12), 0 3px 14px rgba(0, 0, 0, 10%), 0 5px 5px rgba(0, 0, 0, 16%);--td-shadow-3: 0 16px 24px rgba(0, 0, 0, .14), 0 6px 30px rgba(0, 0, 0, 12%), 0 8px 10px rgba(0, 0, 0, 20%);--td-shadow-inset-top: inset 0 .5px 0 #5e5e5e;--td-shadow-inset-right: inset .5px 0 0 #5e5e5e;--td-shadow-inset-bottom: inset 0 -.5px 0 #5e5e5e;--td-shadow-inset-left: inset -.5px 0 0 #5e5e5e;--td-table-shadow-color: rgba(0, 0, 0, .55);--td-scrollbar-color: rgba(255, 255, 255, .1);--td-scrollbar-hover-color: rgba(255, 255, 255, .3);--td-scroll-track-color: #333}:root{--td-radius-small: 2px;--td-radius-default: 3px;--td-radius-medium: 6px;--td-radius-large: 9px;--td-radius-extraLarge: 12px;--td-radius-round: 999px;--td-radius-circle: 50%}:root{--td-font-family: PingFang SC, Microsoft YaHei, Arial Regular;--td-font-family-medium: PingFang SC, Microsoft YaHei, Arial Medium;--td-font-size-link-small: 12px;--td-font-size-link-medium: 14px;--td-font-size-link-large: 16px;--td-font-size-mark-small: 12px;--td-font-size-mark-medium: 14px;--td-font-size-body-small: 12px;--td-font-size-body-medium: 14px;--td-font-size-body-large: 16px;--td-font-size-title-small: 14px;--td-font-size-title-medium: 16px;--td-font-size-title-large: 20px;--td-font-size-headline-small: 24px;--td-font-size-headline-medium: 28px;--td-font-size-headline-large: 36px;--td-font-size-display-medium: 48px;--td-font-size-display-large: 64px;--td-line-height-link-small: 20px;--td-line-height-link-medium: 22px;--td-line-height-link-large: 24px;--td-line-height-mark-small: 20px;--td-line-height-mark-medium: 22px;--td-line-height-body-small: 20px;--td-line-height-body-medium: 22px;--td-line-height-body-large: 24px;--td-line-height-title-small: 22px;--td-line-height-title-medium: 24px;--td-line-height-title-large: 28px;--td-line-height-headline-small: 32px;--td-line-height-headline-medium: 36px;--td-line-height-headline-large: 44px;--td-line-height-display-medium: 56px;--td-line-height-display-large: 72px;--td-font-link-small: var(--td-font-size-link-small) / var(--td-line-height-link-small) var(--td-font-family);--td-font-link-medium: var(--td-font-size-link-medium) / var(--td-line-height-link-medium) var(--td-font-family);--td-font-link-large: var(--td-font-size-link-large) / var(--td-line-height-link-large) var(--td-font-family);--td-font-mark-small: 600 var(--td-font-size-mark-small) / var(--td-line-height-mark-small) var(--td-font-family);--td-font-mark-medium: 600 var(--td-font-size-mark-medium) / var(--td-line-height-mark-medium) var(--td-font-family);--td-font-body-small: var(--td-font-size-body-small) / var(--td-line-height-body-small) var(--td-font-family);--td-font-body-medium: var(--td-font-size-body-medium) / var(--td-line-height-body-medium) var(--td-font-family);--td-font-body-large: var(--td-font-size-body-large) / var(--td-line-height-body-large) var(--td-font-family);--td-font-title-small: 600 var(--td-font-size-title-small) / var(--td-line-height-title-small) var(--td-font-family);--td-font-title-medium: 600 var(--td-font-size-title-medium) / var(--td-line-height-title-medium) var(--td-font-family);--td-font-title-large: 600 var(--td-font-size-title-large) / var(--td-line-height-title-large) var(--td-font-family);--td-font-headline-small: 600 var(--td-font-size-headline-small) / var(--td-line-height-headline-small) var(--td-font-family);--td-font-headline-medium: 600 var(--td-font-size-headline-medium) / var(--td-line-height-headline-medium) var(--td-font-family);--td-font-headline-large: 600 var(--td-font-size-headline-large) / var(--td-line-height-headline-large) var(--td-font-family);--td-font-display-medium: 600 var(--td-font-size-display-medium) / var(--td-line-height-display-medium) var(--td-font-family);--td-font-display-large: 600 var(--td-font-size-display-large) / var(--td-line-height-display-large) var(--td-font-family)}:root{--td-size-1: 2px;--td-size-2: 4px;--td-size-3: 6px;--td-size-4: 8px;--td-size-5: 12px;--td-size-6: 16px;--td-size-7: 20px;--td-size-8: 24px;--td-size-9: 28px;--td-size-10: 32px;--td-size-11: 36px;--td-size-12: 40px;--td-size-13: 48px;--td-size-14: 56px;--td-size-15: 64px;--td-size-16: 72px;--td-comp-size-xxxs: var(--td-size-6);--td-comp-size-xxs: var(--td-size-7);--td-comp-size-xs: var(--td-size-8);--td-comp-size-s: var(--td-size-9);--td-comp-size-m: var(--td-size-10);--td-comp-size-l: var(--td-size-11);--td-comp-size-xl: var(--td-size-12);--td-comp-size-xxl: var(--td-size-13);--td-comp-size-xxxl: var(--td-size-14);--td-comp-size-xxxxl: var(--td-size-15);--td-comp-size-xxxxxl: var(--td-size-16);--td-pop-padding-s: var(--td-size-2);--td-pop-padding-m: var(--td-size-3);--td-pop-padding-l: var(--td-size-4);--td-pop-padding-xl: var(--td-size-5);--td-pop-padding-xxl: var(--td-size-6);--td-comp-paddingLR-xxs: var(--td-size-1);--td-comp-paddingLR-xs: var(--td-size-2);--td-comp-paddingLR-s: var(--td-size-4);--td-comp-paddingLR-m: var(--td-size-5);--td-comp-paddingLR-l: var(--td-size-6);--td-comp-paddingLR-xl: var(--td-size-8);--td-comp-paddingLR-xxl: var(--td-size-10);--td-comp-paddingTB-xxs: var(--td-size-1);--td-comp-paddingTB-xs: var(--td-size-2);--td-comp-paddingTB-s: var(--td-size-4);--td-comp-paddingTB-m: var(--td-size-5);--td-comp-paddingTB-l: var(--td-size-6);--td-comp-paddingTB-xl: var(--td-size-8);--td-comp-paddingTB-xxl: var(--td-size-10);--td-comp-margin-xxs: var(--td-size-1);--td-comp-margin-xs: var(--td-size-2);--td-comp-margin-s: var(--td-size-4);--td-comp-margin-m: var(--td-size-5);--td-comp-margin-l: var(--td-size-6);--td-comp-margin-xl: var(--td-size-7);--td-comp-margin-xxl: var(--td-size-8);--td-comp-margin-xxxl: var(--td-size-10);--td-comp-margin-xxxxl: var(--td-size-12)}.setting-content[data-v-bb379384]{padding:10px}.setting-content .label[data-v-bb379384]{white-space:nowrap;display:flex;justify-content:center;height:100%;align-items:center} ');

(function (vue) {
  'use strict';

  var _documentCurrentScript = typeof document !== 'undefined' ? document.currentScript : null;
  const findRef = (node, name) => {
    let keys2 = Object.keys(node.$refs);
    if (keys2.includes(name)) {
      return node.$refs[name];
    } else {
      let ref2;
      node.$children.some((item) => {
        ref2 = findRef(item, name);
        return !_.isEmpty(ref2);
      });
      return ref2;
    }
  };
  function waitForElementById(id, callback) {
    const observer = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        Array.from(mutation.addedNodes).forEach((addedNode) => {
          if (addedNode.id === id) {
            observer.disconnect();
            callback(addedNode);
          }
        });
      });
    });
    observer.observe(document.body, { childList: true, subtree: true });
  }
  const __vite_glob_0_0 = "data:application/json;base64,";
  const __vite_glob_0_1 = "data:application/json;base64,";
  const __vite_glob_0_2 = "data:application/json;base64,";
  const __vite_glob_0_3 = "data:application/json;base64,";
  const __vite_glob_0_4 = "data:application/json;base64,";
  const __vite_glob_0_5 = "data:application/json;base64,";
  const __vite_glob_0_6 = "data:application/json;base64,ewogICAgImluaGVyaXQiOiBmYWxzZSwKICAgICJiYXNlIjogInZzLWRhcmsiLAogICAgImNvbG9ycyI6IHsKICAgICAgICAiYWN0aXZpdHlCYXIuYmFja2dyb3VuZCI6ICIjYzNjN2NkIiwKICAgICAgICAiYWN0aXZpdHlCYXIuZm9yZWdyb3VuZCI6ICIjMDAwMDAwIiwKICAgICAgICAiZWRpdG9yLmJhY2tncm91bmQiOiAiI2Y4ZjhmOCIsCiAgICAgICAgImVkaXRvci5mb3JlZ3JvdW5kIjogIiMzNTM1MzUiLAogICAgICAgICJlZGl0b3IubGluZUhpZ2hsaWdodEJhY2tncm91bmQiOiAiI2Y4ZjhmOCIsCiAgICAgICAgImVkaXRvci5zZWxlY3Rpb25CYWNrZ3JvdW5kIjogIiNhYmRmZmEiLAogICAgICAgICJlZGl0b3JDdXJzb3IuZm9yZWdyb3VuZCI6ICIjMDAwMDAwIiwKICAgICAgICAiZWRpdG9ySW5kZW50R3VpZGUuYmFja2dyb3VuZCI6ICIjZWFlYWVhIiwKICAgICAgICAiZWRpdG9yTGluZU51bWJlci5mb3JlZ3JvdW5kIjogIiNiYmJiYmIiLAogICAgICAgICJlZGl0b3JTdWdnZXN0V2lkZ2V0LnNlbGVjdGVkQmFja2dyb3VuZCI6ICIjZGJkZGUwIiwKICAgICAgICAiZWRpdG9yU3VnZ2VzdFdpZGdldC5zZWxlY3RlZEZvcmVncm91bmQiOiAiIzEwMWMzMiIsCiAgICAgICAgImxpc3QuaG92ZXJCYWNrZ3JvdW5kIjogIiNkYmRkZTAiLAogICAgICAgICJsaXN0LmluYWN0aXZlU2VsZWN0aW9uQmFja2dyb3VuZCI6ICIjYzdjYmQxIiwKICAgICAgICAicXVpY2tJbnB1dExpc3QuZm9jdXNCYWNrZ3JvdW5kIjogIiNkYmRkZTAiLAogICAgICAgICJxdWlja0lucHV0TGlzdC5mb2N1c0ZvcmVncm91bmQiOiAiIzEwMWMzMiIsCiAgICAgICAgInNpZGVCYXIuYmFja2dyb3VuZCI6ICIjZWJlZGVmIiwKICAgICAgICAic3RhdHVzQmFyLmJhY2tncm91bmQiOiAiI2E0YTliMiIsCiAgICAgICAgInN0YXR1c0Jhci5mb3JlZ3JvdW5kIjogIiMwMDAwMDAiLAogICAgICAgICJzdGF0dXNCYXIubm9Gb2xkZXJCYWNrZ3JvdW5kIjogIiNhNGE5YjIiLAogICAgICAgICJzdGF0dXNCYXJJdGVtLmhvdmVyQmFja2dyb3VuZCI6ICIjY2NjY2NjIiwKICAgICAgICAidGl0bGVCYXIuYWN0aXZlQmFja2dyb3VuZCI6ICIjZGZlNGU3IiwKICAgICAgICAidGl0bGVCYXIuYWN0aXZlRm9yZWdyb3VuZCI6ICIjMDAwMDAwIgogICAgfSwKICAgICJydWxlcyI6IFsKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMxMEE1NjciLAogICAgICAgICAgICAidG9rZW4iOiAiY29tbWVudCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0U4ODUwMSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzM4NkFDMyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm9wZXJhdG9yIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzg2QUMzIiwKICAgICAgICAgICAgInRva2VuIjogInN0b3JhZ2UiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MzUzNTMiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS5tb2RpZmllci5pbXBvcnQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MzUzNTMiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS5tb2RpZmllci5wYWNrYWdlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzg2QUMzIiwKICAgICAgICAgICAgInRva2VuIjogInN1cHBvcnQuZnVuY3Rpb24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNFMDZDNzUiLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUucGFyYW1ldGVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNkQ4NjAwIiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50Lm51bWVyaWMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNFODg1MDEiLAogICAgICAgICAgICAidG9rZW4iOiAiY29uc3RhbnQubGFuZ3VhZ2UiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNFODg1MDEiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb25zdGFudC5vdGhlciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzUzNTM1MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0ZXh0Lmh0bWwuYmFzaWMgbWV0YS50YWcuc2dtbC5odG1sIHB1bmN0dWF0aW9uLmRlZmluaXRpb24udGFnLmh0bWwiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MzUzNTMiLAogICAgICAgICAgICAidG9rZW4iOiAidGV4dC5odG1sLmJhc2ljIG1ldGEudGFnLnNnbWwuaHRtbCBtZXRhLnRhZy5zZ21sLmRvY3R5cGUuaHRtbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzUzNTM1MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0ZXh0Lmh0bWwuYmFzaWMgbWV0YS50YWcuc2dtbC5odG1sIG1ldGEudGFnLnNnbWwuZG9jdHlwZS5odG1sIHN0cmluZy5xdW90ZWQuZG91YmxlLmRvY3R5cGUuaWRlbnRpZmllcnMtYW5kLURURHMuaHRtbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0U4ODUwMSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0ZXh0Lmh0bWwuYmFzaWMgY29uc3RhbnQuY2hhcmFjdGVyLmVudGl0eS5odG1sIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRTg4NTAxIiwKICAgICAgICAgICAgInRva2VuIjogInRleHQueG1sIGNvbnN0YW50LmNoYXJhY3Rlci5lbnRpdHkueG1sIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzg2QUMzIiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLnRhZyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzM4NkFDMyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZy5iZWdpbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzM4NkFDMyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZy5lbmQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50YWcuaHRtbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzZEODYwMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5zZWxlY3Rvci5jc3MgZW50aXR5Lm5hbWUudGFnLmNzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzM4NkFDMyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnNlbGVjdG9yLmNzcyBlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUuY2xhc3MuY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzg2QUMzIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuc2VsZWN0b3IuY3NzIGVudGl0eS5vdGhlci5hdHRyaWJ1dGUtbmFtZS5pZC5jc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5zZWxlY3Rvci5jc3MgbWV0YS5hdHRyaWJ1dGUtc2VsZWN0b3IuY3NzIGVudGl0eS5vdGhlci5hdHRyaWJ1dGUtbmFtZS5hdHRyaWJ1dGUuY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzg2QUMzIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuc2VsZWN0b3IuY3NzIG1ldGEuYXR0cmlidXRlLXNlbGVjdG9yLmNzcyBzdHJpbmcudW5xdW90ZWQuYXR0cmlidXRlLXZhbHVlLmNzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzUzNTM1MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnNlbGVjdG9yLmNzcyBtZXRhLmF0dHJpYnV0ZS1zZWxlY3Rvci5jc3MgcHVuY3R1YXRpb24uc2VwYXJhdG9yLm9wZXJhdG9yLmNzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzUzNTM1MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnNlbGVjdG9yLmNzcyBlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUucHNldWRvLWNsYXNzLmNzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzUzNTM1MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnNlbGVjdG9yLmNzcyBlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUucHNldWRvLWVsZW1lbnQuY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjODQzMUM1IiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQuY29udHJvbC5hdC1ydWxlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjODQzMUM1IiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuYXQtcnVsZSBzdXBwb3J0LnR5cGUucHJvcGVydHktbmFtZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzZEODYwMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLmF0LXJ1bGUgc3VwcG9ydC5jb25zdGFudCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzM4NkFDMyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLmF0LXJ1bGUga2V5d29yZC5vcGVyYXRvciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzg0MzFDNSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnByb3BlcnR5LW5hbWUuY3NzIHN1cHBvcnQudHlwZS5wcm9wZXJ0eS1uYW1lLmNzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzUzNTM1MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnByb3BlcnR5LXZhbHVlLmNzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0U4ODUwMSIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEucHJvcGVydHktdmFsdWUuY3NzIHN1cHBvcnQuY29uc3RhbnQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNFODg1MDEiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnByb3BlcnR5LXZhbHVlLmNzcyBzdXBwb3J0LmZ1bmN0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRTg4NTAxIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICIiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5wcm9wZXJ0eS12YWx1ZS5jc3MgdmFyaWFibGUucGFyYW1ldGVyLm1pc2MuY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRTg4NTAxIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICIiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5wcm9wZXJ0eS12YWx1ZS5jc3MgY29uc3RhbnQub3RoZXIuY29sb3IucmdiLXZhbHVlLmNzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzZEODYwMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnByb3BlcnR5LXZhbHVlLmNzcyBjb25zdGFudC5udW1lcmljLmNzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzZEODYwMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnByb3BlcnR5LXZhbHVlLmNzcyBjb25zdGFudC5udW1lcmljLmNzcyBrZXl3b3JkLm90aGVyLnVuaXQuY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNkQ4NjAwIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuYXQtcnVsZSBjb25zdGFudC5udW1lcmljLmNzcyBrZXl3b3JkLm90aGVyLnVuaXQuY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzg2QUMzIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEucHJvcGVydHktdmFsdWUuY3NzIHN1cHBvcnQuY29uc3RhbnQuY29sb3IudzNjLXN0YW5kYXJkLWNvbG9yLW5hbWUuY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNTM1MzUzIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLnNlcGFyYXRvci5rZXktdmFsdWUuY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNTM1MzUzIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLnRlcm1pbmF0b3IucnVsZS5jc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MzUzNTMiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uc2VjdGlvbi5wcm9wZXJ0eS1saXN0LmNzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzM4NkFDMyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5sYW5ndWFnZS5qcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzM4NkFDMyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdG9yYWdlLnR5cGUuanMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS50eXBlLmZ1bmN0aW9uLmpzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzg2QUMzIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuZnVuY3Rpb24uanNvbi5qcyBzdG9yYWdlLnR5cGUuZnVuY3Rpb24uanMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5jbGFzcy5pbnN0YW5jZS5jb25zdHJ1Y3RvciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzM4NkFDMyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm9wZXJhdG9yLm5ldyBrZXl3b3JkLm9wZXJhdG9yLm5ldy5qcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzg0MzFDNSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdXBwb3J0LmZ1bmN0aW9uLmpzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjODQzMUM1IiwKICAgICAgICAgICAgInRva2VuIjogInN1cHBvcnQuZnVuY3Rpb24udHMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4NDMxQzUiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC5mdW5jdGlvbi5kb20uanMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4NDMxQzUiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC5jb25zdGFudC5qcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzg0MzFDNSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5mdW5jdGlvbi5qcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzg0MzFDNSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5mdW5jdGlvbi50cyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzg0MzFDNSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLmZ1bmN0aW9uLmpzb24uanMgdmFyaWFibGUucGFyYW1ldGVyLmZ1bmN0aW9uLmpzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNTM1MzUzIiwKICAgICAgICAgICAgInRva2VuIjogInRleHQueG1sIG1ldGEudGFnLnByZXByb2Nlc3Nvci54bWwgcHVuY3R1YXRpb24uZGVmaW5pdGlvbi50YWcuYmVnaW4ueG1sIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNTM1MzUzIiwKICAgICAgICAgICAgInRva2VuIjogInRleHQueG1sIG1ldGEudGFnLnByZXByb2Nlc3Nvci54bWwgZW50aXR5Lm5hbWUudGFnLnhtbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzUzNTM1MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0ZXh0LnhtbCBtZXRhLnRhZy5wcmVwcm9jZXNzb3IueG1sIGVudGl0eS5vdGhlci5hdHRyaWJ1dGUtbmFtZS54bWwiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MzUzNTMiLAogICAgICAgICAgICAidG9rZW4iOiAidGV4dC54bWwgbWV0YS50YWcucHJlcHJvY2Vzc29yLnhtbCBzdHJpbmcucXVvdGVkLmRvdWJsZS54bWwiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MzUzNTMiLAogICAgICAgICAgICAidG9rZW4iOiAidGV4dC54bWwgbWV0YS50YWcuc2dtbC5kb2N0eXBlLnhtbCBwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZy5iZWdpbi54bWwiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MzUzNTMiLAogICAgICAgICAgICAidG9rZW4iOiAidGV4dC54bWwgbWV0YS50YWcuc2dtbC5kb2N0eXBlLnhtbCBrZXl3b3JkLmRvY3R5cGUueG1sIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzg2QUMzIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICIiLAogICAgICAgICAgICAidG9rZW4iOiAidGV4dC50ZXgubGF0ZXggY29uc3RhbnQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0ZXh0LnRleC5sYXRleCBjb25zdGFudC5vdGhlciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzZEODYwMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0ZXh0LnRleC5sYXRleCBzdHJpbmcub3RoZXIubWF0aCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzUzNTM1MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0ZXh0LnRleC5sYXRleCBzdHJpbmcub3RoZXIubWF0aCBwdW5jdHVhdGlvbi5zZWN0aW9uLmdyb3VwLnRleCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzUzNTM1MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0ZXh0LnRleC5sYXRleCBzdHJpbmcub3RoZXIubWF0aCBwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmFyZ3VtZW50cyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzg0MzFDNSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0ZXh0LnRleC5sYXRleCBtZXRhLmZ1bmN0aW9uLnNlY3Rpb24ubGF0ZXggZW50aXR5Lm5hbWUuc2VjdGlvbi5sYXRleCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0U4ODUwMSIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInRleHQudGV4LmxhdGV4IHZhcmlhYmxlLnBhcmFtZXRlci5mdW5jdGlvbi5sYXRleCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0U4ODUwMSIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiIiwKICAgICAgICAgICAgInRva2VuIjogInRleHQudGV4LmxhdGV4IGNvbnN0YW50Lm90aGVyLnJlZmVyZW5jZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzZEODYwMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0ZXh0LnRleC5sYXRleCBtZXRhLnByZWFtYmxlLmxhdGV4IHN1cHBvcnQuY2xhc3MubGF0ZXgiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmMrKyBtZXRhLnByZXByb2Nlc3NvciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0QwMjAwMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdWJsaW1lbGludGVyLm1hcmsuZXJyb3IiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkZGRkYiLAogICAgICAgICAgICAidG9rZW4iOiAic3VibGltZWxpbnRlci5ndXR0ZXItbWFyayIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0REQjcwMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdWJsaW1lbGludGVyLm1hcmsud2FybmluZyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y5MjY3MiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAuZGVsZXRlZC5naXRfZ3V0dGVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQTZFMjJFIiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC5pbnNlcnRlZC5naXRfZ3V0dGVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOTY3RUZCIiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC5jaGFuZ2VkLmdpdF9ndXR0ZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1NjU2NTYiLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLmlnbm9yZWQuZ2l0X2d1dHRlciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzU2NTY1NiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAudW50cmFja2VkLmdpdF9ndXR0ZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50ZW1wbGF0ZS1leHByZXNzaW9uLmJlZ2luLmpzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzg2QUMzIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGVtcGxhdGUtZXhwcmVzc2lvbi5lbmQuanMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50ZW1wbGF0ZS1leHByZXNzaW9uLmJlZ2luLnRzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzg2QUMzIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGVtcGxhdGUtZXhwcmVzc2lvbi5lbmQudHMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50ZW1wbGF0ZS1leHByZXNzaW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMDAwMDAwIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEudGVtcGxhdGUuZXhwcmVzc2lvbi5qcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzAwMDAwMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnRlbXBsYXRlLmV4cHJlc3Npb24udHMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMwMDAwMDAiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS50ZW1wbGF0ZS5leHByZXNzaW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMDAwMDAwIiwKICAgICAgICAgICAgInRva2VuIjogInN1cHBvcnQubW9kdWxlLm5vZGUuanMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMwMDAwMDAiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC50eXBlLm9iamVjdC5tb2R1bGUuanMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMwMDAwMDAiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC5tb2R1bGUubm9kZS5qcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzQ2NzFCQiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXIudGhpcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzQ2NzFCQiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5sYW5ndWFnZS50aGlzLmpzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNDY3MUJCIiwKICAgICAgICAgICAgInRva2VuIjogInZhcmlhYmxlLmxhbmd1YWdlLnRoaXMudHMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM0NjcxQkIiLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUubGFuZ3VhZ2UudGhpcy5qc3giCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM0NjcxQkIiLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUubGFuZ3VhZ2UudGhpcy50c3giCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNFMDZDNzUiLAogICAgICAgICAgICAidG9rZW4iOiAiZnVuY3Rpb24ucGFyYW1ldGVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRTA2Qzc1IiwKICAgICAgICAgICAgInRva2VuIjogImZ1bmN0aW9uLnBhcmFtZXRlciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0UwNkM3NSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm9wZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZC5vcGVyYXRvci5leHByZXNzaW9uLmRlbGV0ZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzM4NkFDMyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm9wZXJhdG9yLmV4cHJlc3Npb24uaW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZC5vcGVyYXRvci5leHByZXNzaW9uLm9mIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzg2QUMzIiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQub3BlcmF0b3IuZXhwcmVzc2lvbi5pbnN0YW5jZW9mIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzg2QUMzIiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQub3BlcmF0b3IubmV3IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzg2QUMzIiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQub3BlcmF0b3IuZXhwcmVzc2lvbi50eXBlb2YiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZC5vcGVyYXRvci5leHByZXNzaW9uLnZvaWQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiMzODZBQzMiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC50eXBlLnByb3BlcnR5LW5hbWUuanNvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzM4NkFDMyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm9wZXJhdG9yLmV4cHJlc3Npb24uaW1wb3J0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjODQzMUM1IiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzU5NzhGMyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS50eXBlLm5hbWVzcGFjZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzE2M0ZFNCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS50eXBlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNDI1NjdCIiwKICAgICAgICAgICAgInRva2VuIjogInN1cHBvcnQudHlwZS5wcmltaXRpdmUudHMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM0MjU2N0IiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC50eXBlLmJ1aWx0aW4udHMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM0MjU2N0IiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC50eXBlLnByaW1pdGl2ZS50c3giCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM0MjU2N0IiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC50eXBlLmJ1aWx0aW4udHN4IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzUzNTM1IiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZyB2YXJpYWJsZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzMxNkJDRCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0b2tlbi5pbmZvLXRva2VuIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQ0Q5NzMxIiwKICAgICAgICAgICAgInRva2VuIjogInRva2VuLndhcm4tdG9rZW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNDRDMxMzEiLAogICAgICAgICAgICAidG9rZW4iOiAidG9rZW4uZXJyb3ItdG9rZW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4MDAwODAiLAogICAgICAgICAgICAidG9rZW4iOiAidG9rZW4uZGVidWctdG9rZW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJ0b2tlbiI6ICIiLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzUzNTM1IgogICAgICAgIH0KICAgIF0sCiAgICAiZW5jb2RlZFRva2Vuc0NvbG9ycyI6IFtdCn0=";
  const __vite_glob_0_7 = "data:application/json;base64,";
  const __vite_glob_0_8 = "data:application/json;base64,";
  const __vite_glob_0_9 = "data:application/json;base64,ewogICAgImluaGVyaXQiOiBmYWxzZSwKICAgICJiYXNlIjogInZzLWRhcmsiLAogICAgImNvbG9ycyI6IHsKICAgICAgICAiZWRpdG9yLmJhY2tncm91bmQiOiAiIzI4MjgyOCIsCiAgICAgICAgImVkaXRvci5mb3JlZ3JvdW5kIjogIiNmZGY0YzEiLAogICAgICAgICJlZGl0b3IubGluZUhpZ2hsaWdodEJhY2tncm91bmQiOiAiIzJiM2M0NCIsCiAgICAgICAgImVkaXRvci5zZWxlY3Rpb25CYWNrZ3JvdW5kIjogIiMzMDQzNGMiLAogICAgICAgICJlZGl0b3JDdXJzb3IuZm9yZWdyb3VuZCI6ICIjZmRmNGMxIiwKICAgICAgICAiZWRpdG9yV2hpdGVzcGFjZS5mb3JlZ3JvdW5kIjogIiM1MDQ5NDUiCiAgICB9LAogICAgInJ1bGVzIjogWwogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzdDNkY2NCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb21tZW50IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNTI4QjhCIiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0QzODY5QiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb25zdGFudC5udW1lcmljIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQkJBQTk3IiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50Lmxhbmd1YWdlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQkJBQTk3IiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50LmNoYXJhY3RlciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0JCQUE5NyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICIgY29uc3RhbnQub3RoZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4M0E1OTgiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0RENkY0OCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjREQ2RjQ4IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICIiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzY2OTk5RCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdG9yYWdlLnR5cGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBODk5ODQiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogInVuZGVybGluZSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5jbGFzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0E4OTk4NCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIHVuZGVybGluZSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkub3RoZXIuaW5oZXJpdGVkLWNsYXNzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQTg5OTg0IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICIiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUuZnVuY3Rpb24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4M0E1OTgiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5wYXJhbWV0ZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBODk5ODQiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS50YWciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4M0E1OTgiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRTgwMTkiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdXBwb3J0LmZ1bmN0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkU4MDE5IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICIiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC5jb25zdGFudCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZFODAxOSIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInN1cHBvcnQudHlwZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZFODAxOSIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogIiBzdXBwb3J0LmNsYXNzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9udFN0eWxlIjogIiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdXBwb3J0Lm90aGVyLnZhcmlhYmxlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZGRkZGIiwKICAgICAgICAgICAgImJhY2tncm91bmQiOiAiI0ZCNDkzMyIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiIGJvbGQiLAogICAgICAgICAgICAidG9rZW4iOiAiaW52YWxpZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGRkZGRiIsCiAgICAgICAgICAgICJiYWNrZ3JvdW5kIjogIiNEMzg2OUIiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIiBib2xkIiwKICAgICAgICAgICAgInRva2VuIjogImludmFsaWQuZGVwcmVjYXRlZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzY3OTZFNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0b2tlbi5pbmZvLXRva2VuIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQ0Q5NzMxIiwKICAgICAgICAgICAgInRva2VuIjogInRva2VuLndhcm4tdG9rZW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGNDQ3NDciLAogICAgICAgICAgICAidG9rZW4iOiAidG9rZW4uZXJyb3ItdG9rZW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNCMjY3RTYiLAogICAgICAgICAgICAidG9rZW4iOiAidG9rZW4uZGVidWctdG9rZW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJ0b2tlbiI6ICIiLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjZmRmNGMxIgogICAgICAgIH0KICAgIF0sCiAgICAiZW5jb2RlZFRva2Vuc0NvbG9ycyI6IFtdCn0=";
  const __vite_glob_0_10 = "data:application/json;base64,ewogICAgImluaGVyaXQiOiBmYWxzZSwKICAgICJiYXNlIjogInZzLWRhcmsiLAogICAgImNvbG9ycyI6IHsKICAgICAgICAiYWN0aXZpdHlCYXIuYWN0aXZlQmFja2dyb3VuZCI6ICIjYmQ5M2Y5MTAiLAogICAgICAgICJhY3Rpdml0eUJhci5hY3RpdmVCb3JkZXIiOiAiI2ZmNzljNjgwIiwKICAgICAgICAiYWN0aXZpdHlCYXIuYmFja2dyb3VuZCI6ICIjMzQzNzQ2IiwKICAgICAgICAiYWN0aXZpdHlCYXIuZm9yZWdyb3VuZCI6ICIjZjhmOGYyIiwKICAgICAgICAiYWN0aXZpdHlCYXIuaW5hY3RpdmVGb3JlZ3JvdW5kIjogIiM2MjcyYTQiLAogICAgICAgICJhY3Rpdml0eUJhckJhZGdlLmJhY2tncm91bmQiOiAiI2ZmNzljNiIsCiAgICAgICAgImFjdGl2aXR5QmFyQmFkZ2UuZm9yZWdyb3VuZCI6ICIjZjhmOGYyIiwKICAgICAgICAiYmFkZ2UuYmFja2dyb3VuZCI6ICIjNDQ0NzVhIiwKICAgICAgICAiYmFkZ2UuZm9yZWdyb3VuZCI6ICIjZjhmOGYyIiwKICAgICAgICAiYnJlYWRjcnVtYi5hY3RpdmVTZWxlY3Rpb25Gb3JlZ3JvdW5kIjogIiNmOGY4ZjIiLAogICAgICAgICJicmVhZGNydW1iLmJhY2tncm91bmQiOiAiIzI4MmEzNiIsCiAgICAgICAgImJyZWFkY3J1bWIuZm9jdXNGb3JlZ3JvdW5kIjogIiNmOGY4ZjIiLAogICAgICAgICJicmVhZGNydW1iLmZvcmVncm91bmQiOiAiIzYyNzJhNCIsCiAgICAgICAgImJyZWFkY3J1bWJQaWNrZXIuYmFja2dyb3VuZCI6ICIjMTkxYTIxIiwKICAgICAgICAiYnV0dG9uLmJhY2tncm91bmQiOiAiIzQ0NDc1YSIsCiAgICAgICAgImJ1dHRvbi5mb3JlZ3JvdW5kIjogIiNmOGY4ZjIiLAogICAgICAgICJidXR0b24uc2Vjb25kYXJ5QmFja2dyb3VuZCI6ICIjMjgyYTM2IiwKICAgICAgICAiYnV0dG9uLnNlY29uZGFyeUZvcmVncm91bmQiOiAiI2Y4ZjhmMiIsCiAgICAgICAgImJ1dHRvbi5zZWNvbmRhcnlIb3ZlckJhY2tncm91bmQiOiAiIzM0Mzc0NiIsCiAgICAgICAgImRlYnVnVG9vbEJhci5iYWNrZ3JvdW5kIjogIiMyMTIyMmMiLAogICAgICAgICJkaWZmRWRpdG9yLmluc2VydGVkVGV4dEJhY2tncm91bmQiOiAiIzUwZmE3YjIwIiwKICAgICAgICAiZGlmZkVkaXRvci5yZW1vdmVkVGV4dEJhY2tncm91bmQiOiAiI2ZmNTU1NTUwIiwKICAgICAgICAiZHJvcGRvd24uYmFja2dyb3VuZCI6ICIjMzQzNzQ2IiwKICAgICAgICAiZHJvcGRvd24uYm9yZGVyIjogIiMxOTFhMjEiLAogICAgICAgICJkcm9wZG93bi5mb3JlZ3JvdW5kIjogIiNmOGY4ZjIiLAogICAgICAgICJlZGl0b3IuYmFja2dyb3VuZCI6ICIjMjgyYTM2IiwKICAgICAgICAiZWRpdG9yLmZpbmRNYXRjaEJhY2tncm91bmQiOiAiI2ZmYjg2YzgwIiwKICAgICAgICAiZWRpdG9yLmZpbmRNYXRjaEhpZ2hsaWdodEJhY2tncm91bmQiOiAiI2ZmZmZmZjQwIiwKICAgICAgICAiZWRpdG9yLmZpbmRSYW5nZUhpZ2hsaWdodEJhY2tncm91bmQiOiAiIzQ0NDc1YTc1IiwKICAgICAgICAiZWRpdG9yLmZvbGRCYWNrZ3JvdW5kIjogIiMyMTIyMmMiLAogICAgICAgICJlZGl0b3IuZm9yZWdyb3VuZCI6ICIjZjhmOGYyIiwKICAgICAgICAiZWRpdG9yLmhvdmVySGlnaGxpZ2h0QmFja2dyb3VuZCI6ICIjOGJlOWZkNTAiLAogICAgICAgICJlZGl0b3IubGluZUhpZ2hsaWdodEJvcmRlciI6ICIjNDQ0NzVhIiwKICAgICAgICAiZWRpdG9yLnJhbmdlSGlnaGxpZ2h0QmFja2dyb3VuZCI6ICIjYmQ5M2Y5MTUiLAogICAgICAgICJlZGl0b3Iuc2VsZWN0aW9uQmFja2dyb3VuZCI6ICIjNDQ0NzVhIiwKICAgICAgICAiZWRpdG9yLnNlbGVjdGlvbkhpZ2hsaWdodEJhY2tncm91bmQiOiAiIzQyNDQ1MCIsCiAgICAgICAgImVkaXRvci5zbmlwcGV0RmluYWxUYWJzdG9wSGlnaGxpZ2h0QmFja2dyb3VuZCI6ICIjMjgyYTM2IiwKICAgICAgICAiZWRpdG9yLnNuaXBwZXRGaW5hbFRhYnN0b3BIaWdobGlnaHRCb3JkZXIiOiAiIzUwZmE3YiIsCiAgICAgICAgImVkaXRvci5zbmlwcGV0VGFic3RvcEhpZ2hsaWdodEJhY2tncm91bmQiOiAiIzI4MmEzNiIsCiAgICAgICAgImVkaXRvci5zbmlwcGV0VGFic3RvcEhpZ2hsaWdodEJvcmRlciI6ICIjNjI3MmE0IiwKICAgICAgICAiZWRpdG9yLndvcmRIaWdobGlnaHRCYWNrZ3JvdW5kIjogIiM4YmU5ZmQ1MCIsCiAgICAgICAgImVkaXRvci53b3JkSGlnaGxpZ2h0U3Ryb25nQmFja2dyb3VuZCI6ICIjNTBmYTdiNTAiLAogICAgICAgICJlZGl0b3JCcmFja2V0SGlnaGxpZ2h0LmZvcmVncm91bmQxIjogIiNmOGY4ZjIiLAogICAgICAgICJlZGl0b3JCcmFja2V0SGlnaGxpZ2h0LmZvcmVncm91bmQyIjogIiNmZjc5YzYiLAogICAgICAgICJlZGl0b3JCcmFja2V0SGlnaGxpZ2h0LmZvcmVncm91bmQzIjogIiM4YmU5ZmQiLAogICAgICAgICJlZGl0b3JCcmFja2V0SGlnaGxpZ2h0LmZvcmVncm91bmQ0IjogIiM1MGZhN2IiLAogICAgICAgICJlZGl0b3JCcmFja2V0SGlnaGxpZ2h0LmZvcmVncm91bmQ1IjogIiNiZDkzZjkiLAogICAgICAgICJlZGl0b3JCcmFja2V0SGlnaGxpZ2h0LmZvcmVncm91bmQ2IjogIiNmZmI4NmMiLAogICAgICAgICJlZGl0b3JCcmFja2V0SGlnaGxpZ2h0LnVuZXhwZWN0ZWRCcmFja2V0LmZvcmVncm91bmQiOiAiI2ZmNTU1NSIsCiAgICAgICAgImVkaXRvckNvZGVMZW5zLmZvcmVncm91bmQiOiAiIzYyNzJhNCIsCiAgICAgICAgImVkaXRvckVycm9yLmZvcmVncm91bmQiOiAiI2ZmNTU1NSIsCiAgICAgICAgImVkaXRvckdyb3VwLmJvcmRlciI6ICIjYmQ5M2Y5IiwKICAgICAgICAiZWRpdG9yR3JvdXAuZHJvcEJhY2tncm91bmQiOiAiIzQ0NDc1YTcwIiwKICAgICAgICAiZWRpdG9yR3JvdXBIZWFkZXIudGFic0JhY2tncm91bmQiOiAiIzE5MWEyMSIsCiAgICAgICAgImVkaXRvckd1dHRlci5hZGRlZEJhY2tncm91bmQiOiAiIzUwZmE3YjgwIiwKICAgICAgICAiZWRpdG9yR3V0dGVyLmRlbGV0ZWRCYWNrZ3JvdW5kIjogIiNmZjU1NTU4MCIsCiAgICAgICAgImVkaXRvckd1dHRlci5tb2RpZmllZEJhY2tncm91bmQiOiAiIzhiZTlmZDgwIiwKICAgICAgICAiZWRpdG9ySG92ZXJXaWRnZXQuYmFja2dyb3VuZCI6ICIjMjgyYTM2IiwKICAgICAgICAiZWRpdG9ySG92ZXJXaWRnZXQuYm9yZGVyIjogIiM2MjcyYTQiLAogICAgICAgICJlZGl0b3JJbmRlbnRHdWlkZS5hY3RpdmVCYWNrZ3JvdW5kIjogIiNmZmZmZmY0NSIsCiAgICAgICAgImVkaXRvckluZGVudEd1aWRlLmJhY2tncm91bmQiOiAiI2ZmZmZmZjFhIiwKICAgICAgICAiZWRpdG9yTGluZU51bWJlci5mb3JlZ3JvdW5kIjogIiM2MjcyYTQiLAogICAgICAgICJlZGl0b3JMaW5rLmFjdGl2ZUZvcmVncm91bmQiOiAiIzhiZTlmZCIsCiAgICAgICAgImVkaXRvck1hcmtlck5hdmlnYXRpb24uYmFja2dyb3VuZCI6ICIjMjEyMjJjIiwKICAgICAgICAiZWRpdG9yT3ZlcnZpZXdSdWxlci5hZGRlZEZvcmVncm91bmQiOiAiIzUwZmE3YjgwIiwKICAgICAgICAiZWRpdG9yT3ZlcnZpZXdSdWxlci5ib3JkZXIiOiAiIzE5MWEyMSIsCiAgICAgICAgImVkaXRvck92ZXJ2aWV3UnVsZXIuY3VycmVudENvbnRlbnRGb3JlZ3JvdW5kIjogIiM1MGZhN2IiLAogICAgICAgICJlZGl0b3JPdmVydmlld1J1bGVyLmRlbGV0ZWRGb3JlZ3JvdW5kIjogIiNmZjU1NTU4MCIsCiAgICAgICAgImVkaXRvck92ZXJ2aWV3UnVsZXIuZXJyb3JGb3JlZ3JvdW5kIjogIiNmZjU1NTU4MCIsCiAgICAgICAgImVkaXRvck92ZXJ2aWV3UnVsZXIuaW5jb21pbmdDb250ZW50Rm9yZWdyb3VuZCI6ICIjYmQ5M2Y5IiwKICAgICAgICAiZWRpdG9yT3ZlcnZpZXdSdWxlci5pbmZvRm9yZWdyb3VuZCI6ICIjOGJlOWZkODAiLAogICAgICAgICJlZGl0b3JPdmVydmlld1J1bGVyLm1vZGlmaWVkRm9yZWdyb3VuZCI6ICIjOGJlOWZkODAiLAogICAgICAgICJlZGl0b3JPdmVydmlld1J1bGVyLnNlbGVjdGlvbkhpZ2hsaWdodEZvcmVncm91bmQiOiAiI2ZmYjg2YyIsCiAgICAgICAgImVkaXRvck92ZXJ2aWV3UnVsZXIud2FybmluZ0ZvcmVncm91bmQiOiAiI2ZmYjg2YzgwIiwKICAgICAgICAiZWRpdG9yT3ZlcnZpZXdSdWxlci53b3JkSGlnaGxpZ2h0Rm9yZWdyb3VuZCI6ICIjOGJlOWZkIiwKICAgICAgICAiZWRpdG9yT3ZlcnZpZXdSdWxlci53b3JkSGlnaGxpZ2h0U3Ryb25nRm9yZWdyb3VuZCI6ICIjNTBmYTdiIiwKICAgICAgICAiZWRpdG9yUnVsZXIuZm9yZWdyb3VuZCI6ICIjZmZmZmZmMWEiLAogICAgICAgICJlZGl0b3JTdWdnZXN0V2lkZ2V0LmJhY2tncm91bmQiOiAiIzIxMjIyYyIsCiAgICAgICAgImVkaXRvclN1Z2dlc3RXaWRnZXQuZm9yZWdyb3VuZCI6ICIjZjhmOGYyIiwKICAgICAgICAiZWRpdG9yU3VnZ2VzdFdpZGdldC5zZWxlY3RlZEJhY2tncm91bmQiOiAiIzQ0NDc1YSIsCiAgICAgICAgImVkaXRvcldhcm5pbmcuZm9yZWdyb3VuZCI6ICIjOGJlOWZkIiwKICAgICAgICAiZWRpdG9yV2hpdGVzcGFjZS5mb3JlZ3JvdW5kIjogIiNmZmZmZmYxYSIsCiAgICAgICAgImVkaXRvcldpZGdldC5iYWNrZ3JvdW5kIjogIiMyMTIyMmMiLAogICAgICAgICJlcnJvckZvcmVncm91bmQiOiAiI2ZmNTU1NSIsCiAgICAgICAgImV4dGVuc2lvbkJ1dHRvbi5wcm9taW5lbnRCYWNrZ3JvdW5kIjogIiM1MGZhN2I5MCIsCiAgICAgICAgImV4dGVuc2lvbkJ1dHRvbi5wcm9taW5lbnRGb3JlZ3JvdW5kIjogIiNmOGY4ZjIiLAogICAgICAgICJleHRlbnNpb25CdXR0b24ucHJvbWluZW50SG92ZXJCYWNrZ3JvdW5kIjogIiM1MGZhN2I2MCIsCiAgICAgICAgImZvY3VzQm9yZGVyIjogIiM2MjcyYTQiLAogICAgICAgICJmb3JlZ3JvdW5kIjogIiNmOGY4ZjIiLAogICAgICAgICJnaXREZWNvcmF0aW9uLmNvbmZsaWN0aW5nUmVzb3VyY2VGb3JlZ3JvdW5kIjogIiNmZmI4NmMiLAogICAgICAgICJnaXREZWNvcmF0aW9uLmRlbGV0ZWRSZXNvdXJjZUZvcmVncm91bmQiOiAiI2ZmNTU1NSIsCiAgICAgICAgImdpdERlY29yYXRpb24uaWdub3JlZFJlc291cmNlRm9yZWdyb3VuZCI6ICIjNjI3MmE0IiwKICAgICAgICAiZ2l0RGVjb3JhdGlvbi5tb2RpZmllZFJlc291cmNlRm9yZWdyb3VuZCI6ICIjOGJlOWZkIiwKICAgICAgICAiZ2l0RGVjb3JhdGlvbi51bnRyYWNrZWRSZXNvdXJjZUZvcmVncm91bmQiOiAiIzUwZmE3YiIsCiAgICAgICAgImlucHV0LmJhY2tncm91bmQiOiAiIzI4MmEzNiIsCiAgICAgICAgImlucHV0LmJvcmRlciI6ICIjMTkxYTIxIiwKICAgICAgICAiaW5wdXQuZm9yZWdyb3VuZCI6ICIjZjhmOGYyIiwKICAgICAgICAiaW5wdXQucGxhY2Vob2xkZXJGb3JlZ3JvdW5kIjogIiM2MjcyYTQiLAogICAgICAgICJpbnB1dE9wdGlvbi5hY3RpdmVCb3JkZXIiOiAiI2JkOTNmOSIsCiAgICAgICAgImlucHV0VmFsaWRhdGlvbi5lcnJvckJvcmRlciI6ICIjZmY1NTU1IiwKICAgICAgICAiaW5wdXRWYWxpZGF0aW9uLmluZm9Cb3JkZXIiOiAiI2ZmNzljNiIsCiAgICAgICAgImlucHV0VmFsaWRhdGlvbi53YXJuaW5nQm9yZGVyIjogIiNmZmI4NmMiLAogICAgICAgICJsaXN0LmFjdGl2ZVNlbGVjdGlvbkJhY2tncm91bmQiOiAiIzQ0NDc1YSIsCiAgICAgICAgImxpc3QuYWN0aXZlU2VsZWN0aW9uRm9yZWdyb3VuZCI6ICIjZjhmOGYyIiwKICAgICAgICAibGlzdC5kcm9wQmFja2dyb3VuZCI6ICIjNDQ0NzVhIiwKICAgICAgICAibGlzdC5lcnJvckZvcmVncm91bmQiOiAiI2ZmNTU1NSIsCiAgICAgICAgImxpc3QuZm9jdXNCYWNrZ3JvdW5kIjogIiM0NDQ3NWE3NSIsCiAgICAgICAgImxpc3QuaGlnaGxpZ2h0Rm9yZWdyb3VuZCI6ICIjOGJlOWZkIiwKICAgICAgICAibGlzdC5ob3ZlckJhY2tncm91bmQiOiAiIzQ0NDc1YTc1IiwKICAgICAgICAibGlzdC5pbmFjdGl2ZVNlbGVjdGlvbkJhY2tncm91bmQiOiAiIzQ0NDc1YTc1IiwKICAgICAgICAibGlzdC53YXJuaW5nRm9yZWdyb3VuZCI6ICIjZmZiODZjIiwKICAgICAgICAibGlzdEZpbHRlcldpZGdldC5iYWNrZ3JvdW5kIjogIiMzNDM3NDYiLAogICAgICAgICJsaXN0RmlsdGVyV2lkZ2V0Lm5vTWF0Y2hlc091dGxpbmUiOiAiI2ZmNTU1NSIsCiAgICAgICAgImxpc3RGaWx0ZXJXaWRnZXQub3V0bGluZSI6ICIjNDI0NDUwIiwKICAgICAgICAibWVyZ2UuY3VycmVudEhlYWRlckJhY2tncm91bmQiOiAiIzUwZmE3YjkwIiwKICAgICAgICAibWVyZ2UuaW5jb21pbmdIZWFkZXJCYWNrZ3JvdW5kIjogIiNiZDkzZjk5MCIsCiAgICAgICAgInBhbmVsLmJhY2tncm91bmQiOiAiIzI4MmEzNiIsCiAgICAgICAgInBhbmVsLmJvcmRlciI6ICIjYmQ5M2Y5IiwKICAgICAgICAicGFuZWxUaXRsZS5hY3RpdmVCb3JkZXIiOiAiI2ZmNzljNiIsCiAgICAgICAgInBhbmVsVGl0bGUuYWN0aXZlRm9yZWdyb3VuZCI6ICIjZjhmOGYyIiwKICAgICAgICAicGFuZWxUaXRsZS5pbmFjdGl2ZUZvcmVncm91bmQiOiAiIzYyNzJhNCIsCiAgICAgICAgInBlZWtWaWV3LmJvcmRlciI6ICIjNDQ0NzVhIiwKICAgICAgICAicGVla1ZpZXdFZGl0b3IuYmFja2dyb3VuZCI6ICIjMjgyYTM2IiwKICAgICAgICAicGVla1ZpZXdFZGl0b3IubWF0Y2hIaWdobGlnaHRCYWNrZ3JvdW5kIjogIiNmMWZhOGM4MCIsCiAgICAgICAgInBlZWtWaWV3UmVzdWx0LmJhY2tncm91bmQiOiAiIzIxMjIyYyIsCiAgICAgICAgInBlZWtWaWV3UmVzdWx0LmZpbGVGb3JlZ3JvdW5kIjogIiNmOGY4ZjIiLAogICAgICAgICJwZWVrVmlld1Jlc3VsdC5saW5lRm9yZWdyb3VuZCI6ICIjZjhmOGYyIiwKICAgICAgICAicGVla1ZpZXdSZXN1bHQubWF0Y2hIaWdobGlnaHRCYWNrZ3JvdW5kIjogIiNmMWZhOGM4MCIsCiAgICAgICAgInBlZWtWaWV3UmVzdWx0LnNlbGVjdGlvbkJhY2tncm91bmQiOiAiIzQ0NDc1YSIsCiAgICAgICAgInBlZWtWaWV3UmVzdWx0LnNlbGVjdGlvbkZvcmVncm91bmQiOiAiI2Y4ZjhmMiIsCiAgICAgICAgInBlZWtWaWV3VGl0bGUuYmFja2dyb3VuZCI6ICIjMTkxYTIxIiwKICAgICAgICAicGVla1ZpZXdUaXRsZURlc2NyaXB0aW9uLmZvcmVncm91bmQiOiAiIzYyNzJhNCIsCiAgICAgICAgInBlZWtWaWV3VGl0bGVMYWJlbC5mb3JlZ3JvdW5kIjogIiNmOGY4ZjIiLAogICAgICAgICJwaWNrZXJHcm91cC5ib3JkZXIiOiAiI2JkOTNmOSIsCiAgICAgICAgInBpY2tlckdyb3VwLmZvcmVncm91bmQiOiAiIzhiZTlmZCIsCiAgICAgICAgInByb2dyZXNzQmFyLmJhY2tncm91bmQiOiAiI2ZmNzljNiIsCiAgICAgICAgInNlbGVjdGlvbi5iYWNrZ3JvdW5kIjogIiNiZDkzZjkiLAogICAgICAgICJzZXR0aW5ncy5jaGVja2JveEJhY2tncm91bmQiOiAiIzIxMjIyYyIsCiAgICAgICAgInNldHRpbmdzLmNoZWNrYm94Qm9yZGVyIjogIiMxOTFhMjEiLAogICAgICAgICJzZXR0aW5ncy5jaGVja2JveEZvcmVncm91bmQiOiAiI2Y4ZjhmMiIsCiAgICAgICAgInNldHRpbmdzLmRyb3Bkb3duQmFja2dyb3VuZCI6ICIjMjEyMjJjIiwKICAgICAgICAic2V0dGluZ3MuZHJvcGRvd25Cb3JkZXIiOiAiIzE5MWEyMSIsCiAgICAgICAgInNldHRpbmdzLmRyb3Bkb3duRm9yZWdyb3VuZCI6ICIjZjhmOGYyIiwKICAgICAgICAic2V0dGluZ3MuaGVhZGVyRm9yZWdyb3VuZCI6ICIjZjhmOGYyIiwKICAgICAgICAic2V0dGluZ3MubW9kaWZpZWRJdGVtSW5kaWNhdG9yIjogIiNmZmI4NmMiLAogICAgICAgICJzZXR0aW5ncy5udW1iZXJJbnB1dEJhY2tncm91bmQiOiAiIzIxMjIyYyIsCiAgICAgICAgInNldHRpbmdzLm51bWJlcklucHV0Qm9yZGVyIjogIiMxOTFhMjEiLAogICAgICAgICJzZXR0aW5ncy5udW1iZXJJbnB1dEZvcmVncm91bmQiOiAiI2Y4ZjhmMiIsCiAgICAgICAgInNldHRpbmdzLnRleHRJbnB1dEJhY2tncm91bmQiOiAiIzIxMjIyYyIsCiAgICAgICAgInNldHRpbmdzLnRleHRJbnB1dEJvcmRlciI6ICIjMTkxYTIxIiwKICAgICAgICAic2V0dGluZ3MudGV4dElucHV0Rm9yZWdyb3VuZCI6ICIjZjhmOGYyIiwKICAgICAgICAic2lkZUJhci5iYWNrZ3JvdW5kIjogIiMyMTIyMmMiLAogICAgICAgICJzaWRlQmFyU2VjdGlvbkhlYWRlci5iYWNrZ3JvdW5kIjogIiMyODJhMzYiLAogICAgICAgICJzaWRlQmFyU2VjdGlvbkhlYWRlci5ib3JkZXIiOiAiIzE5MWEyMSIsCiAgICAgICAgInNpZGVCYXJUaXRsZS5mb3JlZ3JvdW5kIjogIiNmOGY4ZjIiLAogICAgICAgICJzdGF0dXNCYXIuYmFja2dyb3VuZCI6ICIjMTkxYTIxIiwKICAgICAgICAic3RhdHVzQmFyLmRlYnVnZ2luZ0JhY2tncm91bmQiOiAiI2ZmNTU1NSIsCiAgICAgICAgInN0YXR1c0Jhci5kZWJ1Z2dpbmdGb3JlZ3JvdW5kIjogIiMxOTFhMjEiLAogICAgICAgICJzdGF0dXNCYXIuZm9yZWdyb3VuZCI6ICIjZjhmOGYyIiwKICAgICAgICAic3RhdHVzQmFyLm5vRm9sZGVyQmFja2dyb3VuZCI6ICIjMTkxYTIxIiwKICAgICAgICAic3RhdHVzQmFyLm5vRm9sZGVyRm9yZWdyb3VuZCI6ICIjZjhmOGYyIiwKICAgICAgICAic3RhdHVzQmFySXRlbS5wcm9taW5lbnRCYWNrZ3JvdW5kIjogIiNmZjU1NTUiLAogICAgICAgICJzdGF0dXNCYXJJdGVtLnByb21pbmVudEhvdmVyQmFja2dyb3VuZCI6ICIjZmZiODZjIiwKICAgICAgICAic3RhdHVzQmFySXRlbS5yZW1vdGVCYWNrZ3JvdW5kIjogIiNiZDkzZjkiLAogICAgICAgICJzdGF0dXNCYXJJdGVtLnJlbW90ZUZvcmVncm91bmQiOiAiIzI4MmEzNiIsCiAgICAgICAgInRhYi5hY3RpdmVCYWNrZ3JvdW5kIjogIiMyODJhMzYiLAogICAgICAgICJ0YWIuYWN0aXZlQm9yZGVyVG9wIjogIiNmZjc5YzY4MCIsCiAgICAgICAgInRhYi5hY3RpdmVGb3JlZ3JvdW5kIjogIiNmOGY4ZjIiLAogICAgICAgICJ0YWIuYm9yZGVyIjogIiMxOTFhMjEiLAogICAgICAgICJ0YWIuaW5hY3RpdmVCYWNrZ3JvdW5kIjogIiMyMTIyMmMiLAogICAgICAgICJ0YWIuaW5hY3RpdmVGb3JlZ3JvdW5kIjogIiM2MjcyYTQiLAogICAgICAgICJ0ZXJtaW5hbC5hbnNpQmxhY2siOiAiIzIxMjIyYyIsCiAgICAgICAgInRlcm1pbmFsLmFuc2lCbHVlIjogIiNiZDkzZjkiLAogICAgICAgICJ0ZXJtaW5hbC5hbnNpQnJpZ2h0QmxhY2siOiAiIzYyNzJhNCIsCiAgICAgICAgInRlcm1pbmFsLmFuc2lCcmlnaHRCbHVlIjogIiNkNmFjZmYiLAogICAgICAgICJ0ZXJtaW5hbC5hbnNpQnJpZ2h0Q3lhbiI6ICIjYTRmZmZmIiwKICAgICAgICAidGVybWluYWwuYW5zaUJyaWdodEdyZWVuIjogIiM2OWZmOTQiLAogICAgICAgICJ0ZXJtaW5hbC5hbnNpQnJpZ2h0TWFnZW50YSI6ICIjZmY5MmRmIiwKICAgICAgICAidGVybWluYWwuYW5zaUJyaWdodFJlZCI6ICIjZmY2ZTZlIiwKICAgICAgICAidGVybWluYWwuYW5zaUJyaWdodFdoaXRlIjogIiNmZmZmZmYiLAogICAgICAgICJ0ZXJtaW5hbC5hbnNpQnJpZ2h0WWVsbG93IjogIiNmZmZmYTUiLAogICAgICAgICJ0ZXJtaW5hbC5hbnNpQ3lhbiI6ICIjOGJlOWZkIiwKICAgICAgICAidGVybWluYWwuYW5zaUdyZWVuIjogIiM1MGZhN2IiLAogICAgICAgICJ0ZXJtaW5hbC5hbnNpTWFnZW50YSI6ICIjZmY3OWM2IiwKICAgICAgICAidGVybWluYWwuYW5zaVJlZCI6ICIjZmY1NTU1IiwKICAgICAgICAidGVybWluYWwuYW5zaVdoaXRlIjogIiNmOGY4ZjIiLAogICAgICAgICJ0ZXJtaW5hbC5hbnNpWWVsbG93IjogIiNmMWZhOGMiLAogICAgICAgICJ0ZXJtaW5hbC5iYWNrZ3JvdW5kIjogIiMyODJhMzYiLAogICAgICAgICJ0ZXJtaW5hbC5mb3JlZ3JvdW5kIjogIiNmOGY4ZjIiLAogICAgICAgICJ0aXRsZUJhci5hY3RpdmVCYWNrZ3JvdW5kIjogIiMyMTIyMmMiLAogICAgICAgICJ0aXRsZUJhci5hY3RpdmVGb3JlZ3JvdW5kIjogIiNmOGY4ZjIiLAogICAgICAgICJ0aXRsZUJhci5pbmFjdGl2ZUJhY2tncm91bmQiOiAiIzE5MWEyMSIsCiAgICAgICAgInRpdGxlQmFyLmluYWN0aXZlRm9yZWdyb3VuZCI6ICIjNjI3MmE0IiwKICAgICAgICAid2Fsa1Rocm91Z2guZW1iZWRkZWRFZGl0b3JCYWNrZ3JvdW5kIjogIiMyMTIyMmMiCiAgICB9LAogICAgInJ1bGVzIjogWwogICAgICAgIHsKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAiZW1waGFzaXMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb250U3R5bGUiOiAiYm9sZCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdHJvbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNCRDkzRjkiLAogICAgICAgICAgICAidG9rZW4iOiAiaGVhZGVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNjI3MkE0IiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuZGlmZiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzYyNzJBNCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLmRpZmYuaGVhZGVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNTBGQTdCIiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC5pbnNlcnRlZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNTU1NSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAuZGVsZXRlZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGQjg2QyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAuY2hhbmdlZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNTU1NSIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAidW5kZXJsaW5lIGl0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJpbnZhbGlkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJ1bmRlcmxpbmUgaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogImludmFsaWQuZGVwcmVjYXRlZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0YxRkE4QyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5maWxlbmFtZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNTU1NSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAuZXJyb3IiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb250U3R5bGUiOiAidW5kZXJsaW5lIiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC51bmRlcmxpbmUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkI4NkMiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogImJvbGQiLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLmJvbGQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNCRDkzRjkiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogImJvbGQiLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLmhlYWRpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGMUZBOEMiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAuaXRhbGljIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOEJFOUZEIiwKICAgICAgICAgICAgInRva2VuIjogImJlZ2lubmluZy5wdW5jdHVhdGlvbi5kZWZpbml0aW9uLmxpc3QubWFya2Rvd24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4QkU5RkQiLAogICAgICAgICAgICAidG9rZW4iOiAiYmVnaW5uaW5nLnB1bmN0dWF0aW9uLmRlZmluaXRpb24ucXVvdGUubWFya2Rvd24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4QkU5RkQiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5saW5rLnJlc3RydWN0dXJlZHRleHQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MEZBN0IiLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLmlubGluZS5yYXciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MEZBN0IiLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLnJhdy5yZXN0cnVjdHVyZWR0ZXh0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOEJFOUZEIiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC51bmRlcmxpbmUubGluayIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAudW5kZXJsaW5lLmxpbmsuaW1hZ2UiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5saW5rLnJlZmVyZW5jZS5kZWYucmVzdHJ1Y3R1cmVkdGV4dCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmRpcmVjdGl2ZS5yZXN0cnVjdHVyZWR0ZXh0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZy5vdGhlci5saW5rLmRlc2NyaXB0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZy5vdGhlci5saW5rLnRpdGxlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjFGQThDIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUuZGlyZWN0aXZlLnJlc3RydWN0dXJlZHRleHQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGMUZBOEMiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAucXVvdGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM2MjcyQTQiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5zZXBhcmF0b3IubWFya2Rvd24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MEZBN0IiLAogICAgICAgICAgICAidG9rZW4iOiAiZmVuY2VkX2NvZGUuYmxvY2subGFuZ3VhZ2UiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MEZBN0IiLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLnJhdy5pbm5lci5yZXN0cnVjdHVyZWR0ZXh0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNTBGQTdCIiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC5mZW5jZWRfY29kZS5ibG9jay5tYXJrZG93biBwdW5jdHVhdGlvbi5kZWZpbml0aW9uLm1hcmtkb3duIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQkQ5M0Y5IiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24uY29uc3RhbnQucmVzdHJ1Y3R1cmVkdGV4dCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0JEOTNGOSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAuaGVhZGluZy5tYXJrZG93biBwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnN0cmluZy5iZWdpbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0JEOTNGOSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAuaGVhZGluZy5tYXJrZG93biBwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnN0cmluZy5lbmQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5wYXJhZ3JhcGgubWFya2Rvd24gcHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmcuYmVnaW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5wYXJhZ3JhcGgubWFya2Rvd24gcHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmcuZW5kIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjFGQThDIiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC5xdW90ZS5tYXJrZG93biBtZXRhLnBhcmFncmFwaC5tYXJrZG93biBwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnN0cmluZy5iZWdpbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0YxRkE4QyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAucXVvdGUubWFya2Rvd24gbWV0YS5wYXJhZ3JhcGgubWFya2Rvd24gcHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmcuZW5kIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOEJFOUZEIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJub3JtYWwiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUudHlwZS5jbGFzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAibm9ybWFsIiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLmNsYXNzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQkQ5M0Y5IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZC5leHByZXNzaW9ucy1hbmQtdHlwZXMuc3dpZnQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNCRDkzRjkiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm90aGVyLnRoaXMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNCRDkzRjkiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5sYW5ndWFnZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0JEOTNGOSIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInZhcmlhYmxlLmxhbmd1YWdlIHB1bmN0dWF0aW9uLmRlZmluaXRpb24udmFyaWFibGUucGhwIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQkQ5M0Y5IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUub3RoZXIucmVhZHdyaXRlLmluc3RhbmNlLnJ1YnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNCRDkzRjkiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5wYXJhbWV0ZXIuZnVuY3Rpb24ubGFuZ3VhZ2Uuc3BlY2lhbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5vdGhlci5pbmhlcml0ZWQtY2xhc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM2MjcyQTQiLAogICAgICAgICAgICAidG9rZW4iOiAiY29tbWVudCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzYyNzJBNCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmNvbW1lbnQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM2MjcyQTQiLAogICAgICAgICAgICAidG9rZW4iOiAidW51c2VkLmNvbW1lbnQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM2MjcyQTQiLAogICAgICAgICAgICAidG9rZW4iOiAid2lsZGNhcmQuY29tbWVudCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb21tZW50IGtleXdvcmQuY29kZXRhZy5ub3RhdGlvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb21tZW50LmJsb2NrLmRvY3VtZW50YXRpb24ga2V5d29yZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb21tZW50LmJsb2NrLmRvY3VtZW50YXRpb24gc3RvcmFnZS50eXBlLmNsYXNzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOEJFOUZEIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAiY29tbWVudC5ibG9jay5kb2N1bWVudGF0aW9uIGVudGl0eS5uYW1lLnR5cGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4QkU5RkQiLAogICAgICAgICAgICAidG9rZW4iOiAiY29tbWVudC5ibG9jay5kb2N1bWVudGF0aW9uIGVudGl0eS5uYW1lLnR5cGUgcHVuY3R1YXRpb24uZGVmaW5pdGlvbi5icmFja2V0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZCODZDIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAiY29tbWVudC5ibG9jay5kb2N1bWVudGF0aW9uIHZhcmlhYmxlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQkQ5M0Y5IiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQkQ5M0Y5IiwKICAgICAgICAgICAgInRva2VuIjogInZhcmlhYmxlLm90aGVyLmNvbnN0YW50IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50LmNoYXJhY3Rlci5lc2NhcGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAiY29uc3RhbnQuY2hhcmFjdGVyLnN0cmluZy5lc2NhcGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAiY29uc3RhbnQucmVnZXhwIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLnRhZyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUucGFyZW50LXNlbGVjdG9yIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNTBGQTdCIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNTBGQTdCIiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLmZ1bmN0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNTBGQTdCIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuZnVuY3Rpb24tY2FsbC5vYmplY3QiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MEZBN0IiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5mdW5jdGlvbi1jYWxsLnBocCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzUwRkE3QiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLmZ1bmN0aW9uLWNhbGwuc3RhdGljIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNTBGQTdCIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEubWV0aG9kLWNhbGwuamF2YSBtZXRhLm1ldGhvZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzUwRkE3QiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLm1ldGhvZC5ncm9vdnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MEZBN0IiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC5mdW5jdGlvbi5hbnktbWV0aG9kLmx1YSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzUwRkE3QiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm9wZXJhdG9yLmZ1bmN0aW9uLmluZml4IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZCODZDIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUudmFyaWFibGUucGFyYW1ldGVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZCODZDIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5hdC1ydWxlLmZ1bmN0aW9uIHZhcmlhYmxlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZCODZDIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5hdC1ydWxlLm1peGluIHZhcmlhYmxlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZCODZDIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5mdW5jdGlvbi5hcmd1bWVudHMgdmFyaWFibGUub3RoZXIucGhwIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZCODZDIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5zZWxlY3Rpb25zZXQuZ3JhcGhxbCBtZXRhLmFyZ3VtZW50cy5ncmFwaHFsIHZhcmlhYmxlLmFyZ3VtZW50cy5ncmFwaHFsIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZCODZDIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUucGFyYW1ldGVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNTBGQTdCIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5kZWNvcmF0b3IgdmFyaWFibGUub3RoZXIucmVhZHdyaXRlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNTBGQTdCIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5kZWNvcmF0b3IgdmFyaWFibGUub3RoZXIucHJvcGVydHkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MEZBN0IiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5kZWNvcmF0b3IgdmFyaWFibGUub3RoZXIub2JqZWN0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5rZXl3b3JkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9udFN0eWxlIjogImJvbGQiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZC5jb250cm9sLm5ldyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJib2xkIiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQub3BlcmF0b3IubmV3IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuc2VsZWN0b3IiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4QkU5RkQiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdXBwb3J0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQkQ5M0Y5IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJyZWd1bGFyIiwKICAgICAgICAgICAgInRva2VuIjogInN1cHBvcnQuZnVuY3Rpb24ubWFnaWMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNCRDkzRjkiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogInJlZ3VsYXIiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC52YXJpYWJsZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0JEOTNGOSIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAicmVndWxhciIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5vdGhlci5wcmVkZWZpbmVkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9udFN0eWxlIjogInJlZ3VsYXIiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC5mdW5jdGlvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJyZWd1bGFyIiwKICAgICAgICAgICAgInRva2VuIjogInN1cHBvcnQudHlwZS5wcm9wZXJ0eS1uYW1lIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50Lm90aGVyLnN5bWJvbC5oYXNoa2V5IHB1bmN0dWF0aW9uLmRlZmluaXRpb24uY29uc3RhbnQucnVieSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUucGxhY2Vob2xkZXIgcHVuY3R1YXRpb24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lLnBzZXVkby1jbGFzcyBwdW5jdHVhdGlvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUucHNldWRvLWVsZW1lbnQgcHVuY3R1YXRpb24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5ncm91cC5kb3VibGUudG9tbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLmdyb3VwLnRvbWwiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5vYmplY3QtYmluZGluZy1wYXR0ZXJuLXZhcmlhYmxlIHB1bmN0dWF0aW9uLmRlc3RydWN0dXJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uY29sb24uZ3JhcGhxbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmJsb2NrLnNjYWxhci5mb2xkZWQueWFtbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmJsb2NrLnNjYWxhci5saXRlcmFsLnlhbWwiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5ibG9jay5zZXF1ZW5jZS5pdGVtLnlhbWwiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5lbnRpdHkub3RoZXIuaW5oZXJpdGVkLWNsYXNzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmZ1bmN0aW9uLnN3aWZ0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLnNlcGFyYXRvci5kaWN0aW9uYXJ5LmtleS12YWx1ZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5zZXBhcmF0b3IuaGFzaCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5zZXBhcmF0b3IuaW5oZXJpdGFuY2UiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uc2VwYXJhdG9yLmtleS12YWx1ZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5zZXBhcmF0b3Iua2V5LXZhbHVlLm1hcHBpbmcueWFtbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5zZXBhcmF0b3IubmFtZXNwYWNlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLnNlcGFyYXRvci5wb2ludGVyLWFjY2VzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5zZXBhcmF0b3Iuc2xpY2UiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nLnVucXVvdGVkLmhlcmVkb2MgcHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC5vdGhlci5jaG9tcGluZy1pbmRpY2F0b3IueWFtbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5zZXBhcmF0b3IuYW5ub3RhdGlvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm9wZXJhdG9yLm90aGVyLnBvd2Vyc2hlbGwiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZC5vdGhlci5zdGF0ZW1lbnQtc2VwYXJhdG9yLnBvd2Vyc2hlbGwiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5icmFjZS5yb3VuZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLmZ1bmN0aW9uLWNhbGwgcHVuY3R1YXRpb24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5hcmd1bWVudHMuYmVnaW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5hcmd1bWVudHMuZW5kIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24uZW50aXR5LmJlZ2luIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24uZW50aXR5LmVuZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZy5jcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnR5cGUuYmVnaW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50eXBlLmVuZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5zZWN0aW9uLnNjb3BlLmJlZ2luIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLnNlY3Rpb24uc2NvcGUuZW5kIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgInRva2VuIjogInN0b3JhZ2UudHlwZS5nZW5lcmljLmphdmEiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nLnRlbXBsYXRlIG1ldGEuYnJhY2UiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nLnRlbXBsYXRlIHB1bmN0dWF0aW9uLmFjY2Vzc29yIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuc3RyaW5nLWNvbnRlbnRzLnF1b3RlZC5kb3VibGUgcHVuY3R1YXRpb24uZGVmaW5pdGlvbi52YXJpYWJsZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmludGVycG9sYXRpb24uYmVnaW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5pbnRlcnBvbGF0aW9uLmVuZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRlbXBsYXRlLWV4cHJlc3Npb24uYmVnaW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50ZW1wbGF0ZS1leHByZXNzaW9uLmVuZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5zZWN0aW9uLmVtYmVkZGVkLmJlZ2luIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLnNlY3Rpb24uZW1iZWRkZWQuY29mZmVlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLnNlY3Rpb24uZW1iZWRkZWQuZW5kIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLnNlY3Rpb24uZW1iZWRkZWQuZW5kIHNvdXJjZS5waHAiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uc2VjdGlvbi5lbWJlZGRlZC5lbmQgc291cmNlLnJ1YnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi52YXJpYWJsZS5tYWtlZmlsZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5mdW5jdGlvbi50YXJnZXQubWFrZWZpbGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4QkU5RkQiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUuc2VjdGlvbi50b21sIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOEJFOUZEIiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLnRhZy55YW1sIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOEJFOUZEIiwKICAgICAgICAgICAgInRva2VuIjogInZhcmlhYmxlLm90aGVyLmtleS50b21sIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZCODZDIiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50Lm90aGVyLmRhdGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkI4NkMiLAogICAgICAgICAgICAidG9rZW4iOiAiY29uc3RhbnQub3RoZXIudGltZXN0YW1wIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNTBGQTdCIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMgdW5kZXJsaW5lIiwKICAgICAgICAgICAgInRva2VuIjogInZhcmlhYmxlLm90aGVyLmFsaWFzLnlhbWwiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogInJlZ3VsYXIiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNzlDNiIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAicmVndWxhciIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLmltcGxlbWVudGF0aW9uIHN0b3JhZ2UudHlwZS5vYmpjIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJyZWd1bGFyIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuaW50ZXJmYWNlLW9yLXByb3RvY29sIHN0b3JhZ2UudHlwZS5vYmpjIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJyZWd1bGFyIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5ncm9vdnkgc3RvcmFnZS50eXBlLmRlZiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLnR5cGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4QkU5RkQiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLnByaW1pdGl2ZS1kYXRhdHlwZXMuc3dpZnQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4QkU5RkQiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLnR5cGUuY3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4QkU5RkQiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnByb3RvY29sLWxpc3Qub2JqYyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEucmV0dXJuLXR5cGUub2JqYyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5nbyBzdG9yYWdlLnR5cGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4QkU5RkQiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzb3VyY2UuZ3Jvb3Z5IHN0b3JhZ2UudHlwZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qYXZhIHN0b3JhZ2UudHlwZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5wb3dlcnNoZWxsIGVudGl0eS5vdGhlci5hdHRyaWJ1dGUtbmFtZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInN0b3JhZ2UuY2xhc3Muc3RkLnJ1c3QiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4QkU5RkQiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdG9yYWdlLnR5cGUuYXR0cmlidXRlLnN3aWZ0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOEJFOUZEIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS50eXBlLmMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM4QkU5RkQiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdG9yYWdlLnR5cGUuY29yZS5ydXN0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOEJFOUZEIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS50eXBlLmNzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOEJFOUZEIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS50eXBlLmdyb292eSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInN0b3JhZ2UudHlwZS5vYmpjIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOEJFOUZEIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS50eXBlLnBocCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInN0b3JhZ2UudHlwZS5oYXNrZWxsIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOEJFOUZEIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS50eXBlLm9jYW1sIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZCODZDIiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLnR5cGUudHlwZS1wYXJhbWV0ZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkI4NkMiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5pbmRleGVyLm1hcHBlZHR5cGUuZGVjbGFyYXRpb24gZW50aXR5Lm5hbWUudHlwZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGQjg2QyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnR5cGUucGFyYW1ldGVycyBlbnRpdHkubmFtZS50eXBlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3OUM2IiwKICAgICAgICAgICAgInRva2VuIjogInN0b3JhZ2UubW9kaWZpZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGMUZBOEMiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nLnJlZ2V4cCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0YxRkE4QyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb25zdGFudC5vdGhlci5jaGFyYWN0ZXItY2xhc3Muc2V0LnJlZ2V4cCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0YxRkE4QyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb25zdGFudC5jaGFyYWN0ZXIuZXNjYXBlLmJhY2tzbGFzaC5yZWdleHAiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjc5QzYiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5ncm91cC5jYXB0dXJlLnJlZ2V4cCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNTU1NSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdHJpbmcucmVnZXhwIHB1bmN0dWF0aW9uLmRlZmluaXRpb24uc3RyaW5nLmJlZ2luIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY1NTU1IiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZy5yZWdleHAgcHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmcuZW5kIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOEJFOUZEIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24uY2hhcmFjdGVyLWNsYXNzLnJlZ2V4cCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGQjg2QyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmdyb3VwLnJlZ2V4cCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNTU1NSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmdyb3VwLmFzc2VydGlvbi5yZWdleHAiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjU1NTUiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZC5vcGVyYXRvci5uZWdhdGlvbi5yZWdleHAiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1MEZBN0IiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5hc3NlcnRpb24ubG9vay1haGVhZC5yZWdleHAiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGMUZBOEMiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRTlGMjg0IiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24uc3RyaW5nLmJlZ2luIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRTlGMjg0IiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24uc3RyaW5nLmVuZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5zdXBwb3J0LnR5cGUucHJvcGVydHktbmFtZS5iZWdpbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5zdXBwb3J0LnR5cGUucHJvcGVydHktbmFtZS5lbmQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM2MjcyQTQiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nLnF1b3RlZC5kb2NzdHJpbmcubXVsdGkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM2MjcyQTQiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nLnF1b3RlZC5kb2NzdHJpbmcubXVsdGkucHl0aG9uIHB1bmN0dWF0aW9uLmRlZmluaXRpb24uc3RyaW5nLmJlZ2luIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNjI3MkE0IiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZy5xdW90ZWQuZG9jc3RyaW5nLm11bHRpLnB5dGhvbiBwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnN0cmluZy5lbmQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM2MjcyQTQiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nLnF1b3RlZC5kb2NzdHJpbmcubXVsdGkucHl0aG9uIGNvbnN0YW50LmNoYXJhY3Rlci5lc2NhcGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAiY29uc3RhbnQub3RoZXIua2V5LnBlcmwiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC52YXJpYWJsZS5wcm9wZXJ0eSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5vdGhlci5jb25zdGFudC5qcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5vdGhlci5jb25zdGFudC50cyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5vdGhlci5jb25zdGFudC50c3giCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkI4NkMiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLmltcG9ydCB2YXJpYWJsZS5vdGhlci5yZWFkd3JpdGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkI4NkMiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLm9iamVjdC1iaW5kaW5nLXBhdHRlcm4tdmFyaWFibGUgdmFyaWFibGUub2JqZWN0LnByb3BlcnR5IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZCODZDIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS52YXJpYWJsZS5hc3NpZ25tZW50LmRlc3RydWN0dXJlZC5vYmplY3QuY29mZmVlIHZhcmlhYmxlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJub3JtYWwiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5pbXBvcnQgdmFyaWFibGUub3RoZXIucmVhZHdyaXRlLmFsaWFzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJub3JtYWwiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5leHBvcnQgdmFyaWFibGUub3RoZXIucmVhZHdyaXRlLmFsaWFzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJub3JtYWwiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS52YXJpYWJsZS5hc3NpZ25tZW50LmRlc3RydWN0dXJlZC5vYmplY3QuY29mZmVlIHZhcmlhYmxlIHZhcmlhYmxlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjFGQThDIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuc2VsZWN0aW9uc2V0LmdyYXBocWwgdmFyaWFibGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5zZWxlY3Rpb25zZXQuZ3JhcGhxbCBtZXRhLmFyZ3VtZW50cyB2YXJpYWJsZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzhCRTlGRCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5mcmFnbWVudC5ncmFwaHFsIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOEJFOUZEIiwKICAgICAgICAgICAgInRva2VuIjogInZhcmlhYmxlLmZyYWdtZW50LmdyYXBocWwiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAiY29uc3RhbnQub3RoZXIuc3ltYm9sLmhhc2hrZXkucnVieSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm9wZXJhdG9yLmRlcmVmZXJlbmNlLmphdmEiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZC5vcGVyYXRvci5uYXZpZ2F0aW9uLmdyb292eSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnNjb3BlLmZvci1sb29wLnNoZWxsIHB1bmN0dWF0aW9uLmRlZmluaXRpb24uc3RyaW5nLmJlZ2luIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuc2NvcGUuZm9yLWxvb3Auc2hlbGwgcHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmcuZW5kIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuc2NvcGUuZm9yLWxvb3Auc2hlbGwgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgInRva2VuIjogInN0b3JhZ2UubW9kaWZpZXIuaW1wb3J0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLnNlY3Rpb24uZW1iZWRkZWQuYmVnaW4udHN4IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLnNlY3Rpb24uZW1iZWRkZWQuZW5kLnRzeCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5zZWN0aW9uLmVtYmVkZGVkLmJlZ2luLmpzeCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5zZWN0aW9uLmVtYmVkZGVkLmVuZC5qc3giCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjIiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uc2VwYXJhdG9yLmxpc3QuY29tbWEuY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50Lmxhbmd1YWdlLmVtcHR5LWxpc3QuaGFza2VsbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0JEOTNGOSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzb3VyY2Uuc2hlbGwgdmFyaWFibGUub3RoZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNCRDkzRjkiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIm5vcm1hbCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdXBwb3J0LmNvbnN0YW50IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjFGQThDIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuc2NvcGUucHJlcmVxdWlzaXRlcy5tYWtlZmlsZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0YxRkE4QyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLmF0dHJpYnV0ZS1zZWxlY3Rvci5zY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24uYXR0cmlidXRlLXNlbGVjdG9yLmVuZC5icmFja2V0LnNxdWFyZS5zY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEYyIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24uYXR0cmlidXRlLXNlbGVjdG9yLmJlZ2luLmJyYWNrZXQuc3F1YXJlLnNjc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM2MjcyQTQiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5wcmVwcm9jZXNzb3IuaGFza2VsbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzY3OTZFNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0b2tlbi5pbmZvLXRva2VuIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQ0Q5NzMxIiwKICAgICAgICAgICAgInRva2VuIjogInRva2VuLndhcm4tdG9rZW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGNDQ3NDciLAogICAgICAgICAgICAidG9rZW4iOiAidG9rZW4uZXJyb3ItdG9rZW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNCMjY3RTYiLAogICAgICAgICAgICAidG9rZW4iOiAidG9rZW4uZGVidWctdG9rZW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJ0b2tlbiI6ICIiLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjZjhmOGYyIgogICAgICAgIH0KICAgIF0sCiAgICAiZW5jb2RlZFRva2Vuc0NvbG9ycyI6IFtdCn0=";
  const __vite_glob_0_11 = "data:application/json;base64,";
  const __vite_glob_0_12 = "data:application/json;base64,";
  const __vite_glob_0_13 = "data:application/json;base64,";
  const __vite_glob_0_14 = "data:application/json;base64,";
  const __vite_glob_0_15 = "data:application/json;base64,";
  const __vite_glob_0_16 = "data:application/json;base64,";
  const __vite_glob_0_17 = "data:application/json;base64,";
  const __vite_glob_0_18 = "data:application/json;base64,";
  const __vite_glob_0_19 = "data:application/json;base64,ewogICAgImluaGVyaXQiOiBmYWxzZSwKICAgICJiYXNlIjogInZzLWRhcmsiLAogICAgImNvbG9ycyI6IHsKICAgICAgICAiYWN0aXZpdHlCYXIuYmFja2dyb3VuZCI6ICIjMWExYTFhIiwKICAgICAgICAiYWN0aXZpdHlCYXIuZm9yZWdyb3VuZCI6ICIjN2Q3ZDdkIiwKICAgICAgICAiYWN0aXZpdHlCYXJCYWRnZS5iYWNrZ3JvdW5kIjogIiMzODM4MzgiLAogICAgICAgICJiYWRnZS5iYWNrZ3JvdW5kIjogIiMzODM4MzgiLAogICAgICAgICJiYWRnZS5mb3JlZ3JvdW5kIjogIiNjMWMxYzEiLAogICAgICAgICJidXR0b24uYmFja2dyb3VuZCI6ICIjMzMzMzMzIiwKICAgICAgICAiZGVidWdJY29uLmJyZWFrcG9pbnRDdXJyZW50U3RhY2tmcmFtZUZvcmVncm91bmQiOiAiIzc5YjhmZiIsCiAgICAgICAgImRlYnVnSWNvbi5icmVha3BvaW50RGlzYWJsZWRGb3JlZ3JvdW5kIjogIiM4NDg0ODQiLAogICAgICAgICJkZWJ1Z0ljb24uYnJlYWtwb2ludEZvcmVncm91bmQiOiAiI2ZmN2E4NCIsCiAgICAgICAgImRlYnVnSWNvbi5icmVha3BvaW50U3RhY2tmcmFtZUZvcmVncm91bmQiOiAiIzc5YjhmZiIsCiAgICAgICAgImRlYnVnSWNvbi5icmVha3BvaW50VW52ZXJpZmllZEZvcmVncm91bmQiOiAiIzg0ODQ4NCIsCiAgICAgICAgImRlYnVnSWNvbi5jb250aW51ZUZvcmVncm91bmQiOiAiI2ZmN2E4NCIsCiAgICAgICAgImRlYnVnSWNvbi5kaXNjb25uZWN0Rm9yZWdyb3VuZCI6ICIjZmY3YTg0IiwKICAgICAgICAiZGVidWdJY29uLnBhdXNlRm9yZWdyb3VuZCI6ICIjZmY3YTg0IiwKICAgICAgICAiZGVidWdJY29uLnJlc3RhcnRGb3JlZ3JvdW5kIjogIiM3OWI4ZmYiLAogICAgICAgICJkZWJ1Z0ljb24uc3RhcnRGb3JlZ3JvdW5kIjogIiM3OWI4ZmYiLAogICAgICAgICJkZWJ1Z0ljb24uc3RlcEJhY2tGb3JlZ3JvdW5kIjogIiNmZjdhODQiLAogICAgICAgICJkZWJ1Z0ljb24uc3RlcEludG9Gb3JlZ3JvdW5kIjogIiNmZjdhODQiLAogICAgICAgICJkZWJ1Z0ljb24uc3RlcE91dEZvcmVncm91bmQiOiAiI2ZmN2E4NCIsCiAgICAgICAgImRlYnVnSWNvbi5zdGVwT3ZlckZvcmVncm91bmQiOiAiI2ZmN2E4NCIsCiAgICAgICAgImRlYnVnSWNvbi5zdG9wRm9yZWdyb3VuZCI6ICIjNzliOGZmIiwKICAgICAgICAiZGlmZkVkaXRvci5pbnNlcnRlZFRleHRCYWNrZ3JvdW5kIjogIiMzYTYzMmE0YiIsCiAgICAgICAgImRpZmZFZGl0b3IucmVtb3ZlZFRleHRCYWNrZ3JvdW5kIjogIiM4ODA2Mzg1MiIsCiAgICAgICAgImVkaXRvci5iYWNrZ3JvdW5kIjogIiMxZjFmMWYiLAogICAgICAgICJlZGl0b3IubGluZUhpZ2hsaWdodEJvcmRlciI6ICIjMzAzMDMwIiwKICAgICAgICAiZWRpdG9yR3JvdXBIZWFkZXIudGFic0JhY2tncm91bmQiOiAiIzFhMWExYSIsCiAgICAgICAgImVkaXRvckdyb3VwSGVhZGVyLnRhYnNCb3JkZXIiOiAiIzFhMWExYSIsCiAgICAgICAgImVkaXRvckluZGVudEd1aWRlLmFjdGl2ZUJhY2tncm91bmQiOiAiIzM4MzgzOCIsCiAgICAgICAgImVkaXRvckluZGVudEd1aWRlLmJhY2tncm91bmQiOiAiIzJhMmEyYSIsCiAgICAgICAgImVkaXRvckxpbmVOdW1iZXIuZm9yZWdyb3VuZCI6ICIjNzI3MjcyIiwKICAgICAgICAiZWRpdG9yUnVsZXIuZm9yZWdyb3VuZCI6ICIjMmEyYTJhIiwKICAgICAgICAiZWRpdG9yU3VnZ2VzdFdpZGdldC5iYWNrZ3JvdW5kIjogIiMxYTFhMWEiLAogICAgICAgICJmb2N1c0JvcmRlciI6ICIjNDQ0NDQ0IiwKICAgICAgICAiZm9yZWdyb3VuZCI6ICIjODg4ODg4IiwKICAgICAgICAiZ2l0RGVjb3JhdGlvbi5pZ25vcmVkUmVzb3VyY2VGb3JlZ3JvdW5kIjogIiM0NDQ0NDQiLAogICAgICAgICJpbnB1dC5iYWNrZ3JvdW5kIjogIiMyYTJhMmEiLAogICAgICAgICJpbnB1dC5mb3JlZ3JvdW5kIjogIiNlMGUwZTAiLAogICAgICAgICJpbnB1dE9wdGlvbi5hY3RpdmVCYWNrZ3JvdW5kIjogIiMzYTNhM2EiLAogICAgICAgICJsaXN0LmFjdGl2ZVNlbGVjdGlvbkJhY2tncm91bmQiOiAiIzIxMjEyMSIsCiAgICAgICAgImxpc3QuYWN0aXZlU2VsZWN0aW9uRm9yZWdyb3VuZCI6ICIjZjVmNWY1IiwKICAgICAgICAibGlzdC5mb2N1c0JhY2tncm91bmQiOiAiIzI5MjkyOSIsCiAgICAgICAgImxpc3QuaGlnaGxpZ2h0Rm9yZWdyb3VuZCI6ICIjZWFlYWVhIiwKICAgICAgICAibGlzdC5ob3ZlckJhY2tncm91bmQiOiAiIzI2MjYyNiIsCiAgICAgICAgImxpc3QuaG92ZXJGb3JlZ3JvdW5kIjogIiM5ZTllOWUiLAogICAgICAgICJsaXN0LmluYWN0aXZlU2VsZWN0aW9uQmFja2dyb3VuZCI6ICIjMjEyMTIxIiwKICAgICAgICAibGlzdC5pbmFjdGl2ZVNlbGVjdGlvbkZvcmVncm91bmQiOiAiI2Y1ZjVmNSIsCiAgICAgICAgInBhbmVsVGl0bGUuYWN0aXZlQm9yZGVyIjogIiMxZjFmMWYiLAogICAgICAgICJwYW5lbFRpdGxlLmFjdGl2ZUZvcmVncm91bmQiOiAiI2ZhZmFmYSIsCiAgICAgICAgInBhbmVsVGl0bGUuaW5hY3RpdmVGb3JlZ3JvdW5kIjogIiM0ODQ4NDgiLAogICAgICAgICJwZWVrVmlldy5ib3JkZXIiOiAiIzQ0NDQ0NCIsCiAgICAgICAgInBlZWtWaWV3RWRpdG9yLmJhY2tncm91bmQiOiAiIzI0MjQyNCIsCiAgICAgICAgInBpY2tlckdyb3VwLmJvcmRlciI6ICIjMzYzNjM2IiwKICAgICAgICAicGlja2VyR3JvdXAuZm9yZWdyb3VuZCI6ICIjZWFlYWVhIiwKICAgICAgICAicHJvZ3Jlc3NCYXIuYmFja2dyb3VuZCI6ICIjZmFmYWZhIiwKICAgICAgICAic2Nyb2xsYmFyLnNoYWRvdyI6ICIjMWYxZjFmIiwKICAgICAgICAic2lkZUJhci5iYWNrZ3JvdW5kIjogIiMxYTFhMWEiLAogICAgICAgICJzaWRlQmFyU2VjdGlvbkhlYWRlci5iYWNrZ3JvdW5kIjogIiMyMDIwMjAiLAogICAgICAgICJzdGF0dXNCYXIuYmFja2dyb3VuZCI6ICIjMWExYTFhIiwKICAgICAgICAic3RhdHVzQmFyLmRlYnVnZ2luZ0JhY2tncm91bmQiOiAiIzFhMWExYSIsCiAgICAgICAgInN0YXR1c0Jhci5mb3JlZ3JvdW5kIjogIiM3ZTdlN2UiLAogICAgICAgICJzdGF0dXNCYXIubm9Gb2xkZXJCYWNrZ3JvdW5kIjogIiMxYTFhMWEiLAogICAgICAgICJzdGF0dXNCYXJJdGVtLnByb21pbmVudEJhY2tncm91bmQiOiAiI2ZhZmFmYTFhIiwKICAgICAgICAic3RhdHVzQmFySXRlbS5yZW1vdGVCYWNrZ3JvdW5kIjogIiMxYTFhMWEwMCIsCiAgICAgICAgInN0YXR1c0Jhckl0ZW0ucmVtb3RlRm9yZWdyb3VuZCI6ICIjN2U3ZTdlIiwKICAgICAgICAic3ltYm9sSWNvbi5jbGFzc0ZvcmVncm91bmQiOiAiI2ZmOTgwMCIsCiAgICAgICAgInN5bWJvbEljb24uY29uc3RydWN0b3JGb3JlZ3JvdW5kIjogIiNiMzkyZjAiLAogICAgICAgICJzeW1ib2xJY29uLmVudW1lcmF0b3JGb3JlZ3JvdW5kIjogIiNmZjk4MDAiLAogICAgICAgICJzeW1ib2xJY29uLmVudW1lcmF0b3JNZW1iZXJGb3JlZ3JvdW5kIjogIiM3OWI4ZmYiLAogICAgICAgICJzeW1ib2xJY29uLmV2ZW50Rm9yZWdyb3VuZCI6ICIjZmY5ODAwIiwKICAgICAgICAic3ltYm9sSWNvbi5maWVsZEZvcmVncm91bmQiOiAiIzc5YjhmZiIsCiAgICAgICAgInN5bWJvbEljb24uZnVuY3Rpb25Gb3JlZ3JvdW5kIjogIiNiMzkyZjAiLAogICAgICAgICJzeW1ib2xJY29uLmludGVyZmFjZUZvcmVncm91bmQiOiAiIzc5YjhmZiIsCiAgICAgICAgInN5bWJvbEljb24ubWV0aG9kRm9yZWdyb3VuZCI6ICIjYjM5MmYwIiwKICAgICAgICAic3ltYm9sSWNvbi52YXJpYWJsZUZvcmVncm91bmQiOiAiIzc5YjhmZiIsCiAgICAgICAgInRhYi5hY3RpdmVCb3JkZXIiOiAiIzFlMWUxZSIsCiAgICAgICAgInRhYi5hY3RpdmVGb3JlZ3JvdW5kIjogIiNmYWZhZmEiLAogICAgICAgICJ0YWIuYm9yZGVyIjogIiMxYTFhMWEiLAogICAgICAgICJ0YWIuaW5hY3RpdmVCYWNrZ3JvdW5kIjogIiMxYTFhMWEiLAogICAgICAgICJ0YWIuaW5hY3RpdmVGb3JlZ3JvdW5kIjogIiM3MjcyNzIiLAogICAgICAgICJ0ZXJtaW5hbC5hbnNpQnJpZ2h0QmxhY2siOiAiIzVjNWM1YyIsCiAgICAgICAgInRleHRMaW5rLmFjdGl2ZUZvcmVncm91bmQiOiAiI2ZhZmFmYSIsCiAgICAgICAgInRleHRMaW5rLmZvcmVncm91bmQiOiAiI2NjY2NjYyIsCiAgICAgICAgInRpdGxlQmFyLmFjdGl2ZUJhY2tncm91bmQiOiAiIzFhMWExYSIsCiAgICAgICAgInRpdGxlQmFyLmJvcmRlciI6ICIjMDAwMDAwMDAiCiAgICB9LAogICAgInJ1bGVzIjogWwogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0IzOTJGMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdXBwb3J0LmZ1bmN0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQjM5MkYwIiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQub3BlcmF0b3IuYWNjZXNzb3IiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNCMzkyRjAiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5ncm91cC5icmFjZXMucm91bmQuZnVuY3Rpb24uYXJndW1lbnRzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQjM5MkYwIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEudGVtcGxhdGUuZXhwcmVzc2lvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0IzOTJGMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAuZmVuY2VkX2NvZGUgbWV0YS5lbWJlZGRlZC5ibG9jayIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAiZW1waGFzaXMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjdBODQiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogImJvbGQiLAogICAgICAgICAgICAidG9rZW4iOiAic3Ryb25nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3QTg0IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJib2xkIiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC5oZWFkaW5nLm1hcmtkb3duIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3QTg0IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJib2xkIiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC5ib2xkLm1hcmtkb3duIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAuaXRhbGljLm1hcmtkb3duIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMTk3NkQyIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJ1bmRlcmxpbmUiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5saW5rLmlubGluZS5tYXJrZG93biIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzlEQjFDNSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5REIxQzUiLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLmZlbmNlZF9jb2RlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOURCMUM1IiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC5pbmxpbmUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM2QjczN0MiLAogICAgICAgICAgICAidG9rZW4iOiAiY29tbWVudCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzZCNzM3QyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdHJpbmcucXVvdGVkLmRvY3N0cmluZy5tdWx0aSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc5QjhGRiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb25zdGFudC5sYW5ndWFnZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc5QjhGRiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5sYW5ndWFnZS50aGlzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzlCOEZGIiwKICAgICAgICAgICAgInRva2VuIjogInZhcmlhYmxlLm90aGVyLm9iamVjdCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc5QjhGRiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5vdGhlci5jbGFzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc5QjhGRiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5vdGhlci5jb25zdGFudCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc5QjhGRiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnByb3BlcnR5LW5hbWUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM3OUI4RkYiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc5QjhGRiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdHJpbmcub3RoZXIubGluay50aXRsZS5tYXJrZG93biIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGOCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb25zdGFudC5udW1lcmljIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEY4IiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50Lm90aGVyLnBsYWNlaG9sZGVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjhGOEY4IiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50LmNoYXJhY3Rlci5mb3JtYXQucGxhY2Vob2xkZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjgiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5wcm9wZXJ0eS12YWx1ZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGOCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm90aGVyLnVuaXQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjgiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZC5vdGhlci50ZW1wbGF0ZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGOCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS50YWcueWFtbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y4RjhGOCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOEY4RjgiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC50eXBlLnByb3BlcnR5LW5hbWUuanNvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y5NzU4MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjk3NTgzIiwKICAgICAgICAgICAgInRva2VuIjogInN0b3JhZ2UubW9kaWZpZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOTc1ODMiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS50eXBlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjk3NTgzIiwKICAgICAgICAgICAgInRva2VuIjogInN0b3JhZ2UuY29udHJvbC5jbG9qdXJlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjk3NTgzIiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLmZ1bmN0aW9uLmNsb2p1cmUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOTc1ODMiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC5mdW5jdGlvbi5ub2RlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRjk3NTgzIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLnNlcGFyYXRvci5rZXktdmFsdWUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGOTc1ODMiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50ZW1wbGF0ZS1leHByZXNzaW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY5ODAwIiwKICAgICAgICAgICAgInRva2VuIjogInZhcmlhYmxlLnBhcmFtZXRlci5mdW5jdGlvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0IzOTJGMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS50eXBlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQjM5MkYwIiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5vdGhlci5pbmhlcml0ZWQtY2xhc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNCMzkyRjAiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5mdW5jdGlvbi1jYWxsIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQjM5MkYwIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuaW5zdGFuY2UuY29uc3RydWN0b3IiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNCMzkyRjAiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQjM5MkYwIiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLmZ1bmN0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQjM5MkYwIiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50LmtleXdvcmQuY2xvanVyZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGQUI3MCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS50YWciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkFCNzAiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nLnF1b3RlZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGQUI3MCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdHJpbmcucmVnZXhwIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZBQjcwIiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZy5pbnRlcnBvbGF0ZWQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkFCNzAiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nLnRlbXBsYXRlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZBQjcwIiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZy51bnF1b3RlZC5wbGFpbi5vdXQueWFtbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGQUI3MCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm90aGVyLnRlbXBsYXRlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjMzE2QkNEIiwKICAgICAgICAgICAgInRva2VuIjogInRva2VuLmluZm8tdG9rZW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNDRDk3MzEiLAogICAgICAgICAgICAidG9rZW4iOiAidG9rZW4ud2Fybi10b2tlbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0NEMzEzMSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0b2tlbi5lcnJvci10b2tlbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzgwMDA4MCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0b2tlbi5kZWJ1Zy10b2tlbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0JCQkJCQiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmFyZ3VtZW50cyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0JCQkJCQiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmRpY3QiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNCQkJCQkIiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uc2VwYXJhdG9yIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQkJCQkJCIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuZnVuY3Rpb24tY2FsbC5hcmd1bWVudHMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkFCNzAiLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLnVuZGVybGluZS5saW5rIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY3QTg0IiwKICAgICAgICAgICAgInRva2VuIjogImJlZ2lubmluZy5wdW5jdHVhdGlvbi5kZWZpbml0aW9uLmxpc3QubWFya2Rvd24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkFCNzAiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5tZXRhZGF0YS5tYXJrZG93biIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc5QjhGRiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnN0cmluZy5iZWdpbi5tYXJrZG93biIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc5QjhGRiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnN0cmluZy5lbmQubWFya2Rvd24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJ0b2tlbiI6ICIiLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjZmZmZmZmIgogICAgICAgIH0KICAgIF0sCiAgICAiZW5jb2RlZFRva2Vuc0NvbG9ycyI6IFtdCn0=";
  const __vite_glob_0_20 = "data:application/json;base64,";
  const __vite_glob_0_21 = "data:application/json;base64,ewogICAgImluaGVyaXQiOiBmYWxzZSwKICAgICJiYXNlIjogInZzLWRhcmsiLAogICAgImNvbG9ycyI6IHsKICAgICAgICAiYWN0aXZpdHlCYXIuYmFja2dyb3VuZCI6ICIjMTkxODFhIiwKICAgICAgICAiYWN0aXZpdHlCYXIuYm9yZGVyIjogIiMxOTE4MWEiLAogICAgICAgICJhY3Rpdml0eUJhci5mb3JlZ3JvdW5kIjogIiNjMWMwYzAiLAogICAgICAgICJhY3Rpdml0eUJhci5pbmFjdGl2ZUZvcmVncm91bmQiOiAiIzViNTk1YyIsCiAgICAgICAgImFjdGl2aXR5QmFyQmFkZ2UuYmFja2dyb3VuZCI6ICIjZmZkODY2IiwKICAgICAgICAiYWN0aXZpdHlCYXJCYWRnZS5mb3JlZ3JvdW5kIjogIiMyZDJhMmUiLAogICAgICAgICJiYWRnZS5iYWNrZ3JvdW5kIjogIiNmZmQ4NjYiLAogICAgICAgICJiYWRnZS5mb3JlZ3JvdW5kIjogIiMyZDJhMmUiLAogICAgICAgICJicmVhZGNydW1iLmFjdGl2ZVNlbGVjdGlvbkZvcmVncm91bmQiOiAiI2ZjZmNmYSIsCiAgICAgICAgImJyZWFkY3J1bWIuZm9jdXNGb3JlZ3JvdW5kIjogIiNjMWMwYzAiLAogICAgICAgICJicmVhZGNydW1iLmZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgImJ1dHRvbi5iYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJidXR0b24uZm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAiYnV0dG9uLmhvdmVyQmFja2dyb3VuZCI6ICIjMmQyYTJlIiwKICAgICAgICAiY2hhcnRzLmJsdWUiOiAiIzc4ZGNlOCIsCiAgICAgICAgImNoYXJ0cy5mb3JlZ3JvdW5kIjogIiNmY2ZjZmEiLAogICAgICAgICJjaGFydHMuZ3JlZW4iOiAiI2E5ZGM3NiIsCiAgICAgICAgImNoYXJ0cy5saW5lcyI6ICIjNzI3MDcyIiwKICAgICAgICAiY2hhcnRzLm9yYW5nZSI6ICIjZmM5ODY3IiwKICAgICAgICAiY2hhcnRzLnB1cnBsZSI6ICIjYWI5ZGYyIiwKICAgICAgICAiY2hhcnRzLnJlZCI6ICIjZmY2MTg4IiwKICAgICAgICAiY2hhcnRzLnllbGxvdyI6ICIjZmZkODY2IiwKICAgICAgICAiZGVidWdFeGNlcHRpb25XaWRnZXQuYmFja2dyb3VuZCI6ICIjNDAzZTQxIiwKICAgICAgICAiZGVidWdFeGNlcHRpb25XaWRnZXQuYm9yZGVyIjogIiMyZDJhMmUiLAogICAgICAgICJkZWJ1Z0ljb24uYnJlYWtwb2ludEN1cnJlbnRTdGFja2ZyYW1lRm9yZWdyb3VuZCI6ICIjZmZkODY2IiwKICAgICAgICAiZGVidWdJY29uLmJyZWFrcG9pbnREaXNhYmxlZEZvcmVncm91bmQiOiAiI2MxYzBjMCIsCiAgICAgICAgImRlYnVnSWNvbi5icmVha3BvaW50Rm9yZWdyb3VuZCI6ICIjZmY2MTg4IiwKICAgICAgICAiZGVidWdJY29uLmJyZWFrcG9pbnRTdGFja2ZyYW1lRm9yZWdyb3VuZCI6ICIjZmNmY2ZhIiwKICAgICAgICAiZGVidWdJY29uLmJyZWFrcG9pbnRVbnZlcmlmaWVkRm9yZWdyb3VuZCI6ICIjZmM5ODY3IiwKICAgICAgICAiZGVidWdJY29uLmNvbnRpbnVlRm9yZWdyb3VuZCI6ICIjZmNmY2ZhIiwKICAgICAgICAiZGVidWdJY29uLmRpc2Nvbm5lY3RGb3JlZ3JvdW5kIjogIiNmY2ZjZmEiLAogICAgICAgICJkZWJ1Z0ljb24ucGF1c2VGb3JlZ3JvdW5kIjogIiNmY2ZjZmEiLAogICAgICAgICJkZWJ1Z0ljb24ucmVzdGFydEZvcmVncm91bmQiOiAiI2E5ZGM3NiIsCiAgICAgICAgImRlYnVnSWNvbi5zdGFydEZvcmVncm91bmQiOiAiI2E5ZGM3NiIsCiAgICAgICAgImRlYnVnSWNvbi5zdGVwQmFja0ZvcmVncm91bmQiOiAiI2ZjZmNmYSIsCiAgICAgICAgImRlYnVnSWNvbi5zdGVwSW50b0ZvcmVncm91bmQiOiAiI2ZjZmNmYSIsCiAgICAgICAgImRlYnVnSWNvbi5zdGVwT3V0Rm9yZWdyb3VuZCI6ICIjZmNmY2ZhIiwKICAgICAgICAiZGVidWdJY29uLnN0ZXBPdmVyRm9yZWdyb3VuZCI6ICIjZmNmY2ZhIiwKICAgICAgICAiZGVidWdJY29uLnN0b3BGb3JlZ3JvdW5kIjogIiNmZjYxODgiLAogICAgICAgICJkZWJ1Z1Rvb2xCYXIuYmFja2dyb3VuZCI6ICIjNDAzZTQxIiwKICAgICAgICAiZGVzY3JpcHRpb25Gb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICJkaWZmRWRpdG9yLmluc2VydGVkVGV4dEJhY2tncm91bmQiOiAiI2E5ZGM3NjE5IiwKICAgICAgICAiZGlmZkVkaXRvci5yZW1vdmVkVGV4dEJhY2tncm91bmQiOiAiI2ZmNjE4ODE5IiwKICAgICAgICAiZHJvcGRvd24uYmFja2dyb3VuZCI6ICIjMmQyYTJlIiwKICAgICAgICAiZHJvcGRvd24uYm9yZGVyIjogIiMyZDJhMmUiLAogICAgICAgICJkcm9wZG93bi5mb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICJkcm9wZG93bi5saXN0QmFja2dyb3VuZCI6ICIjNDAzZTQxIiwKICAgICAgICAiZWRpdG9yLmJhY2tncm91bmQiOiAiIzJkMmEyZSIsCiAgICAgICAgImVkaXRvci5maW5kTWF0Y2hCYWNrZ3JvdW5kIjogIiNmY2ZjZmEyNiIsCiAgICAgICAgImVkaXRvci5maW5kTWF0Y2hCb3JkZXIiOiAiI2ZmZDg2NiIsCiAgICAgICAgImVkaXRvci5maW5kTWF0Y2hIaWdobGlnaHRCYWNrZ3JvdW5kIjogIiNmY2ZjZmEyNiIsCiAgICAgICAgImVkaXRvci5maW5kTWF0Y2hIaWdobGlnaHRCb3JkZXIiOiAiIzAwMDAwMDAwIiwKICAgICAgICAiZWRpdG9yLmZpbmRSYW5nZUhpZ2hsaWdodEJhY2tncm91bmQiOiAiI2ZjZmNmYTBjIiwKICAgICAgICAiZWRpdG9yLmZpbmRSYW5nZUhpZ2hsaWdodEJvcmRlciI6ICIjMDAwMDAwMDAiLAogICAgICAgICJlZGl0b3IuZm9yZWdyb3VuZCI6ICIjZmNmY2ZhIiwKICAgICAgICAiZWRpdG9yLmhvdmVySGlnaGxpZ2h0QmFja2dyb3VuZCI6ICIjZmNmY2ZhMGMiLAogICAgICAgICJlZGl0b3IuaW5hY3RpdmVTZWxlY3Rpb25CYWNrZ3JvdW5kIjogIiNmY2ZjZmEwYyIsCiAgICAgICAgImVkaXRvci5saW5lSGlnaGxpZ2h0QmFja2dyb3VuZCI6ICIjZmNmY2ZhMGMiLAogICAgICAgICJlZGl0b3IubGluZUhpZ2hsaWdodEJvcmRlciI6ICIjMDAwMDAwMDAiLAogICAgICAgICJlZGl0b3IucmFuZ2VIaWdobGlnaHRCYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJlZGl0b3IucmFuZ2VIaWdobGlnaHRCb3JkZXIiOiAiIzQwM2U0MSIsCiAgICAgICAgImVkaXRvci5zZWxlY3Rpb25CYWNrZ3JvdW5kIjogIiNjMWMwYzAyNiIsCiAgICAgICAgImVkaXRvci5zZWxlY3Rpb25IaWdobGlnaHRCYWNrZ3JvdW5kIjogIiNmY2ZjZmEyNiIsCiAgICAgICAgImVkaXRvci5zZWxlY3Rpb25IaWdobGlnaHRCb3JkZXIiOiAiIzAwMDAwMDAwIiwKICAgICAgICAiZWRpdG9yLndvcmRIaWdobGlnaHRCYWNrZ3JvdW5kIjogIiNmY2ZjZmEyNiIsCiAgICAgICAgImVkaXRvci53b3JkSGlnaGxpZ2h0Qm9yZGVyIjogIiMwMDAwMDAwMCIsCiAgICAgICAgImVkaXRvci53b3JkSGlnaGxpZ2h0U3Ryb25nQmFja2dyb3VuZCI6ICIjZmNmY2ZhMjYiLAogICAgICAgICJlZGl0b3Iud29yZEhpZ2hsaWdodFN0cm9uZ0JvcmRlciI6ICIjMDAwMDAwMDAiLAogICAgICAgICJlZGl0b3JCcmFja2V0TWF0Y2guYmFja2dyb3VuZCI6ICIjMmQyYTJlIiwKICAgICAgICAiZWRpdG9yQnJhY2tldE1hdGNoLmJvcmRlciI6ICIjNzI3MDcyIiwKICAgICAgICAiZWRpdG9yQ29kZUxlbnMuZm9yZWdyb3VuZCI6ICIjNzI3MDcyIiwKICAgICAgICAiZWRpdG9yQ3Vyc29yLmJhY2tncm91bmQiOiAiIzJkMmEyZSIsCiAgICAgICAgImVkaXRvckN1cnNvci5mb3JlZ3JvdW5kIjogIiNmY2ZjZmEiLAogICAgICAgICJlZGl0b3JFcnJvci5iYWNrZ3JvdW5kIjogIiMwMDAwMDAwMCIsCiAgICAgICAgImVkaXRvckVycm9yLmJvcmRlciI6ICIjMDAwMDAwMDAiLAogICAgICAgICJlZGl0b3JFcnJvci5mb3JlZ3JvdW5kIjogIiNmZjYxODgiLAogICAgICAgICJlZGl0b3JHcm91cC5ib3JkZXIiOiAiIzIyMWYyMiIsCiAgICAgICAgImVkaXRvckdyb3VwLmRyb3BCYWNrZ3JvdW5kIjogIiMyMjFmMjJiZiIsCiAgICAgICAgImVkaXRvckdyb3VwLmVtcHR5QmFja2dyb3VuZCI6ICIjMTkxODFhIiwKICAgICAgICAiZWRpdG9yR3JvdXAuZm9jdXNlZEVtcHR5Qm9yZGVyIjogIiMyMjFmMjIiLAogICAgICAgICJlZGl0b3JHcm91cEhlYWRlci5ub1RhYnNCYWNrZ3JvdW5kIjogIiMyZDJhMmUiLAogICAgICAgICJlZGl0b3JHcm91cEhlYWRlci50YWJzQmFja2dyb3VuZCI6ICIjMmQyYTJlIiwKICAgICAgICAiZWRpdG9yR3JvdXBIZWFkZXIudGFic0JvcmRlciI6ICIjMmQyYTJlIiwKICAgICAgICAiZWRpdG9yR3V0dGVyLmFkZGVkQmFja2dyb3VuZCI6ICIjYTlkYzc2IiwKICAgICAgICAiZWRpdG9yR3V0dGVyLmJhY2tncm91bmQiOiAiIzJkMmEyZSIsCiAgICAgICAgImVkaXRvckd1dHRlci5kZWxldGVkQmFja2dyb3VuZCI6ICIjZmY2MTg4IiwKICAgICAgICAiZWRpdG9yR3V0dGVyLm1vZGlmaWVkQmFja2dyb3VuZCI6ICIjZmM5ODY3IiwKICAgICAgICAiZWRpdG9ySGludC5ib3JkZXIiOiAiIzJkMmEyZSIsCiAgICAgICAgImVkaXRvckhpbnQuZm9yZWdyb3VuZCI6ICIjYWI5ZGYyIiwKICAgICAgICAiZWRpdG9ySG92ZXJXaWRnZXQuYmFja2dyb3VuZCI6ICIjNDAzZTQxIiwKICAgICAgICAiZWRpdG9ySG92ZXJXaWRnZXQuYm9yZGVyIjogIiMyZDJhMmUiLAogICAgICAgICJlZGl0b3JJbmRlbnRHdWlkZS5iYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJlZGl0b3JJbmZvLmJhY2tncm91bmQiOiAiIzAwMDAwMDAwIiwKICAgICAgICAiZWRpdG9ySW5mby5ib3JkZXIiOiAiIzJkMmEyZSIsCiAgICAgICAgImVkaXRvckluZm8uZm9yZWdyb3VuZCI6ICIjNzhkY2U4IiwKICAgICAgICAiZWRpdG9yTGlnaHRCdWxiLmZvcmVncm91bmQiOiAiI2ZmZDg2NiIsCiAgICAgICAgImVkaXRvckxpZ2h0QnVsYkF1dG9GaXguZm9yZWdyb3VuZCI6ICIjYTlkYzc2IiwKICAgICAgICAiZWRpdG9yTGluZU51bWJlci5hY3RpdmVGb3JlZ3JvdW5kIjogIiNjMWMwYzAiLAogICAgICAgICJlZGl0b3JMaW5lTnVtYmVyLmZvcmVncm91bmQiOiAiIzViNTk1YyIsCiAgICAgICAgImVkaXRvckxpbmsuYWN0aXZlRm9yZWdyb3VuZCI6ICIjNzhkY2U4IiwKICAgICAgICAiZWRpdG9yTWFya2VyTmF2aWdhdGlvbi5iYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJlZGl0b3JNYXJrZXJOYXZpZ2F0aW9uRXJyb3IuYmFja2dyb3VuZCI6ICIjZmY2MTg4IiwKICAgICAgICAiZWRpdG9yTWFya2VyTmF2aWdhdGlvbkluZm8uYmFja2dyb3VuZCI6ICIjNzhkY2U4IiwKICAgICAgICAiZWRpdG9yTWFya2VyTmF2aWdhdGlvbldhcm5pbmcuYmFja2dyb3VuZCI6ICIjZmM5ODY3IiwKICAgICAgICAiZWRpdG9yT3ZlcnZpZXdSdWxlci5hZGRlZEZvcmVncm91bmQiOiAiI2E5ZGM3NiIsCiAgICAgICAgImVkaXRvck92ZXJ2aWV3UnVsZXIuYm9yZGVyIjogIiMyZDJhMmUiLAogICAgICAgICJlZGl0b3JPdmVydmlld1J1bGVyLmN1cnJlbnRDb250ZW50Rm9yZWdyb3VuZCI6ICIjNDAzZTQxIiwKICAgICAgICAiZWRpdG9yT3ZlcnZpZXdSdWxlci5kZWxldGVkRm9yZWdyb3VuZCI6ICIjZmY2MTg4IiwKICAgICAgICAiZWRpdG9yT3ZlcnZpZXdSdWxlci5lcnJvckZvcmVncm91bmQiOiAiI2ZmNjE4OCIsCiAgICAgICAgImVkaXRvck92ZXJ2aWV3UnVsZXIuZmluZE1hdGNoRm9yZWdyb3VuZCI6ICIjZmNmY2ZhMjYiLAogICAgICAgICJlZGl0b3JPdmVydmlld1J1bGVyLmluY29taW5nQ29udGVudEZvcmVncm91bmQiOiAiIzQwM2U0MSIsCiAgICAgICAgImVkaXRvck92ZXJ2aWV3UnVsZXIuaW5mb0ZvcmVncm91bmQiOiAiIzc4ZGNlOCIsCiAgICAgICAgImVkaXRvck92ZXJ2aWV3UnVsZXIubW9kaWZpZWRGb3JlZ3JvdW5kIjogIiNmYzk4NjciLAogICAgICAgICJlZGl0b3JPdmVydmlld1J1bGVyLnJhbmdlSGlnaGxpZ2h0Rm9yZWdyb3VuZCI6ICIjZmNmY2ZhMjYiLAogICAgICAgICJlZGl0b3JPdmVydmlld1J1bGVyLnNlbGVjdGlvbkhpZ2hsaWdodEZvcmVncm91bmQiOiAiI2ZjZmNmYTI2IiwKICAgICAgICAiZWRpdG9yT3ZlcnZpZXdSdWxlci53YXJuaW5nRm9yZWdyb3VuZCI6ICIjZmM5ODY3IiwKICAgICAgICAiZWRpdG9yT3ZlcnZpZXdSdWxlci53b3JkSGlnaGxpZ2h0Rm9yZWdyb3VuZCI6ICIjZmNmY2ZhMjYiLAogICAgICAgICJlZGl0b3JPdmVydmlld1J1bGVyLndvcmRIaWdobGlnaHRTdHJvbmdGb3JlZ3JvdW5kIjogIiNmY2ZjZmEyNiIsCiAgICAgICAgImVkaXRvclBhbmUuYmFja2dyb3VuZCI6ICIjMmQyYTJlIiwKICAgICAgICAiZWRpdG9yUnVsZXIuZm9yZWdyb3VuZCI6ICIjNWI1OTVjIiwKICAgICAgICAiZWRpdG9yU3VnZ2VzdFdpZGdldC5iYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJlZGl0b3JTdWdnZXN0V2lkZ2V0LmJvcmRlciI6ICIjNDAzZTQxIiwKICAgICAgICAiZWRpdG9yU3VnZ2VzdFdpZGdldC5mb3JlZ3JvdW5kIjogIiNjMWMwYzAiLAogICAgICAgICJlZGl0b3JTdWdnZXN0V2lkZ2V0LmhpZ2hsaWdodEZvcmVncm91bmQiOiAiI2ZjZmNmYSIsCiAgICAgICAgImVkaXRvclN1Z2dlc3RXaWRnZXQuc2VsZWN0ZWRCYWNrZ3JvdW5kIjogIiM3MjcwNzIiLAogICAgICAgICJlZGl0b3JXYXJuaW5nLmJhY2tncm91bmQiOiAiIzAwMDAwMDAwIiwKICAgICAgICAiZWRpdG9yV2FybmluZy5ib3JkZXIiOiAiIzAwMDAwMDAwIiwKICAgICAgICAiZWRpdG9yV2FybmluZy5mb3JlZ3JvdW5kIjogIiNmYzk4NjciLAogICAgICAgICJlZGl0b3JXaGl0ZXNwYWNlLmZvcmVncm91bmQiOiAiIzViNTk1YyIsCiAgICAgICAgImVkaXRvcldpZGdldC5iYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJlZGl0b3JXaWRnZXQuYm9yZGVyIjogIiM0MDNlNDEiLAogICAgICAgICJlcnJvckZvcmVncm91bmQiOiAiI2ZmNjE4OCIsCiAgICAgICAgImV4dGVuc2lvbkJ1dHRvbi5wcm9taW5lbnRCYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJleHRlbnNpb25CdXR0b24ucHJvbWluZW50Rm9yZWdyb3VuZCI6ICIjZmNmY2ZhIiwKICAgICAgICAiZXh0ZW5zaW9uQnV0dG9uLnByb21pbmVudEhvdmVyQmFja2dyb3VuZCI6ICIjNWI1OTVjIiwKICAgICAgICAiZm9jdXNCb3JkZXIiOiAiIzcyNzA3MiIsCiAgICAgICAgImZvcmVncm91bmQiOiAiI2ZjZmNmYSIsCiAgICAgICAgImdpdERlY29yYXRpb24uYWRkZWRSZXNvdXJjZUZvcmVncm91bmQiOiAiI2E5ZGM3NiIsCiAgICAgICAgImdpdERlY29yYXRpb24uY29uZmxpY3RpbmdSZXNvdXJjZUZvcmVncm91bmQiOiAiI2ZjOTg2NyIsCiAgICAgICAgImdpdERlY29yYXRpb24uZGVsZXRlZFJlc291cmNlRm9yZWdyb3VuZCI6ICIjZmY2MTg4IiwKICAgICAgICAiZ2l0RGVjb3JhdGlvbi5pZ25vcmVkUmVzb3VyY2VGb3JlZ3JvdW5kIjogIiM1YjU5NWMiLAogICAgICAgICJnaXREZWNvcmF0aW9uLm1vZGlmaWVkUmVzb3VyY2VGb3JlZ3JvdW5kIjogIiNmZmQ4NjYiLAogICAgICAgICJnaXREZWNvcmF0aW9uLnN0YWdlRGVsZXRlZFJlc291cmNlRm9yZWdyb3VuZCI6ICIjZmY2MTg4IiwKICAgICAgICAiZ2l0RGVjb3JhdGlvbi5zdGFnZU1vZGlmaWVkUmVzb3VyY2VGb3JlZ3JvdW5kIjogIiNmZmQ4NjYiLAogICAgICAgICJnaXREZWNvcmF0aW9uLnVudHJhY2tlZFJlc291cmNlRm9yZWdyb3VuZCI6ICIjZmM5ODY3IiwKICAgICAgICAiaW5wdXQuYmFja2dyb3VuZCI6ICIjNDAzZTQxIiwKICAgICAgICAiaW5wdXQuYm9yZGVyIjogIiM0MDNlNDEiLAogICAgICAgICJpbnB1dC5mb3JlZ3JvdW5kIjogIiNmY2ZjZmEiLAogICAgICAgICJpbnB1dC5wbGFjZWhvbGRlckZvcmVncm91bmQiOiAiIzcyNzA3MiIsCiAgICAgICAgImlucHV0T3B0aW9uLmFjdGl2ZUJhY2tncm91bmQiOiAiIzViNTk1YyIsCiAgICAgICAgImlucHV0T3B0aW9uLmFjdGl2ZUJvcmRlciI6ICIjNWI1OTVjIiwKICAgICAgICAiaW5wdXRWYWxpZGF0aW9uLmVycm9yQmFja2dyb3VuZCI6ICIjNDAzZTQxIiwKICAgICAgICAiaW5wdXRWYWxpZGF0aW9uLmVycm9yQm9yZGVyIjogIiNmZjYxODgiLAogICAgICAgICJpbnB1dFZhbGlkYXRpb24uZXJyb3JGb3JlZ3JvdW5kIjogIiNmZjYxODgiLAogICAgICAgICJpbnB1dFZhbGlkYXRpb24uaW5mb0JhY2tncm91bmQiOiAiIzQwM2U0MSIsCiAgICAgICAgImlucHV0VmFsaWRhdGlvbi5pbmZvQm9yZGVyIjogIiM3OGRjZTgiLAogICAgICAgICJpbnB1dFZhbGlkYXRpb24uaW5mb0ZvcmVncm91bmQiOiAiIzc4ZGNlOCIsCiAgICAgICAgImlucHV0VmFsaWRhdGlvbi53YXJuaW5nQmFja2dyb3VuZCI6ICIjNDAzZTQxIiwKICAgICAgICAiaW5wdXRWYWxpZGF0aW9uLndhcm5pbmdCb3JkZXIiOiAiI2ZjOTg2NyIsCiAgICAgICAgImlucHV0VmFsaWRhdGlvbi53YXJuaW5nRm9yZWdyb3VuZCI6ICIjZmM5ODY3IiwKICAgICAgICAibGlzdC5hY3RpdmVTZWxlY3Rpb25CYWNrZ3JvdW5kIjogIiNmY2ZjZmEwYyIsCiAgICAgICAgImxpc3QuYWN0aXZlU2VsZWN0aW9uRm9yZWdyb3VuZCI6ICIjZmZkODY2IiwKICAgICAgICAibGlzdC5kcm9wQmFja2dyb3VuZCI6ICIjMjIxZjIyYmYiLAogICAgICAgICJsaXN0LmVycm9yRm9yZWdyb3VuZCI6ICIjZmY2MTg4IiwKICAgICAgICAibGlzdC5mb2N1c0JhY2tncm91bmQiOiAiIzJkMmEyZSIsCiAgICAgICAgImxpc3QuZm9jdXNGb3JlZ3JvdW5kIjogIiNmY2ZjZmEiLAogICAgICAgICJsaXN0LmhpZ2hsaWdodEZvcmVncm91bmQiOiAiI2ZjZmNmYSIsCiAgICAgICAgImxpc3QuaG92ZXJCYWNrZ3JvdW5kIjogIiNmY2ZjZmEwYyIsCiAgICAgICAgImxpc3QuaG92ZXJGb3JlZ3JvdW5kIjogIiNmY2ZjZmEiLAogICAgICAgICJsaXN0LmluYWN0aXZlRm9jdXNCYWNrZ3JvdW5kIjogIiMyZDJhMmUiLAogICAgICAgICJsaXN0LmluYWN0aXZlU2VsZWN0aW9uQmFja2dyb3VuZCI6ICIjYzFjMGMwMGMiLAogICAgICAgICJsaXN0LmluYWN0aXZlU2VsZWN0aW9uRm9yZWdyb3VuZCI6ICIjZmZkODY2IiwKICAgICAgICAibGlzdC5pbnZhbGlkSXRlbUZvcmVncm91bmQiOiAiI2ZmNjE4OCIsCiAgICAgICAgImxpc3Qud2FybmluZ0ZvcmVncm91bmQiOiAiI2ZjOTg2NyIsCiAgICAgICAgImxpc3RGaWx0ZXJXaWRnZXQuYmFja2dyb3VuZCI6ICIjMmQyYTJlIiwKICAgICAgICAibGlzdEZpbHRlcldpZGdldC5ub01hdGNoZXNPdXRsaW5lIjogIiNmZjYxODgiLAogICAgICAgICJsaXN0RmlsdGVyV2lkZ2V0Lm91dGxpbmUiOiAiIzJkMmEyZSIsCiAgICAgICAgIm1lcmdlLmJvcmRlciI6ICIjMmQyYTJlIiwKICAgICAgICAibWVyZ2UuY29tbW9uQ29udGVudEJhY2tncm91bmQiOiAiI2ZjZmNmYTE5IiwKICAgICAgICAibWVyZ2UuY29tbW9uSGVhZGVyQmFja2dyb3VuZCI6ICIjZmNmY2ZhMjYiLAogICAgICAgICJtZXJnZS5jdXJyZW50Q29udGVudEJhY2tncm91bmQiOiAiI2ZmNjE4ODE5IiwKICAgICAgICAibWVyZ2UuY3VycmVudEhlYWRlckJhY2tncm91bmQiOiAiI2ZmNjE4ODI2IiwKICAgICAgICAibWVyZ2UuaW5jb21pbmdDb250ZW50QmFja2dyb3VuZCI6ICIjYTlkYzc2MTkiLAogICAgICAgICJtZXJnZS5pbmNvbWluZ0hlYWRlckJhY2tncm91bmQiOiAiI2E5ZGM3NjI2IiwKICAgICAgICAibWluaW1hcC5lcnJvckhpZ2hsaWdodCI6ICIjZmY2MTg4IiwKICAgICAgICAibWluaW1hcC53YXJuaW5nSGlnaGxpZ2h0IjogIiNmYzk4NjciLAogICAgICAgICJtaW5pbWFwR3V0dGVyLmFkZGVkQmFja2dyb3VuZCI6ICIjYTlkYzc2IiwKICAgICAgICAibWluaW1hcEd1dHRlci5kZWxldGVkQmFja2dyb3VuZCI6ICIjZmY2MTg4IiwKICAgICAgICAibWluaW1hcEd1dHRlci5tb2RpZmllZEJhY2tncm91bmQiOiAiI2ZmZDg2NiIsCiAgICAgICAgIm5vdGlmaWNhdGlvbkNlbnRlci5ib3JkZXIiOiAiIzQwM2U0MSIsCiAgICAgICAgIm5vdGlmaWNhdGlvbkNlbnRlckhlYWRlci5iYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJub3RpZmljYXRpb25DZW50ZXJIZWFkZXIuZm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAibm90aWZpY2F0aW9uTGluay5mb3JlZ3JvdW5kIjogIiNmZmQ4NjYiLAogICAgICAgICJub3RpZmljYXRpb25Ub2FzdC5ib3JkZXIiOiAiIzQwM2U0MSIsCiAgICAgICAgIm5vdGlmaWNhdGlvbnMuYmFja2dyb3VuZCI6ICIjNDAzZTQxIiwKICAgICAgICAibm90aWZpY2F0aW9ucy5ib3JkZXIiOiAiIzQwM2U0MSIsCiAgICAgICAgIm5vdGlmaWNhdGlvbnMuZm9yZWdyb3VuZCI6ICIjYzFjMGMwIiwKICAgICAgICAibm90aWZpY2F0aW9uc0Vycm9ySWNvbi5mb3JlZ3JvdW5kIjogIiNmZjYxODgiLAogICAgICAgICJub3RpZmljYXRpb25zSW5mb0ljb24uZm9yZWdyb3VuZCI6ICIjNzhkY2U4IiwKICAgICAgICAibm90aWZpY2F0aW9uc1dhcm5pbmdJY29uLmZvcmVncm91bmQiOiAiI2ZjOTg2NyIsCiAgICAgICAgInBhbmVsLmJhY2tncm91bmQiOiAiIzQwM2U0MSIsCiAgICAgICAgInBhbmVsLmJvcmRlciI6ICIjMmQyYTJlIiwKICAgICAgICAicGFuZWxUaXRsZS5hY3RpdmVCb3JkZXIiOiAiI2ZmZDg2NiIsCiAgICAgICAgInBhbmVsVGl0bGUuYWN0aXZlRm9yZWdyb3VuZCI6ICIjZmZkODY2IiwKICAgICAgICAicGFuZWxUaXRsZS5pbmFjdGl2ZUZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgInBlZWtWaWV3LmJvcmRlciI6ICIjMmQyYTJlIiwKICAgICAgICAicGVla1ZpZXdFZGl0b3IuYmFja2dyb3VuZCI6ICIjNDAzZTQxIiwKICAgICAgICAicGVla1ZpZXdFZGl0b3IubWF0Y2hIaWdobGlnaHRCYWNrZ3JvdW5kIjogIiM1YjU5NWMiLAogICAgICAgICJwZWVrVmlld0VkaXRvckd1dHRlci5iYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJwZWVrVmlld1Jlc3VsdC5iYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJwZWVrVmlld1Jlc3VsdC5maWxlRm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAicGVla1ZpZXdSZXN1bHQubGluZUZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgInBlZWtWaWV3UmVzdWx0Lm1hdGNoSGlnaGxpZ2h0QmFja2dyb3VuZCI6ICIjNWI1OTVjIiwKICAgICAgICAicGVla1ZpZXdSZXN1bHQuc2VsZWN0aW9uQmFja2dyb3VuZCI6ICIjNDAzZTQxIiwKICAgICAgICAicGVla1ZpZXdSZXN1bHQuc2VsZWN0aW9uRm9yZWdyb3VuZCI6ICIjZmNmY2ZhIiwKICAgICAgICAicGVla1ZpZXdUaXRsZS5iYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJwZWVrVmlld1RpdGxlRGVzY3JpcHRpb24uZm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAicGVla1ZpZXdUaXRsZUxhYmVsLmZvcmVncm91bmQiOiAiI2ZjZmNmYSIsCiAgICAgICAgInBpY2tlckdyb3VwLmJvcmRlciI6ICIjMmQyYTJlIiwKICAgICAgICAicGlja2VyR3JvdXAuZm9yZWdyb3VuZCI6ICIjNWI1OTVjIiwKICAgICAgICAicHJvYmxlbXNFcnJvckljb24uZm9yZWdyb3VuZCI6ICIjZmY2MTg4IiwKICAgICAgICAicHJvYmxlbXNJbmZvSWNvbi5mb3JlZ3JvdW5kIjogIiM3OGRjZTgiLAogICAgICAgICJwcm9ibGVtc1dhcm5pbmdJY29uLmZvcmVncm91bmQiOiAiI2ZjOTg2NyIsCiAgICAgICAgInByb2dyZXNzQmFyLmJhY2tncm91bmQiOiAiIzQwM2U0MSIsCiAgICAgICAgInNhc2guaG92ZXJCb3JkZXIiOiAiIzcyNzA3MiIsCiAgICAgICAgInNjcm9sbGJhci5zaGFkb3ciOiAiIzJkMmEyZSIsCiAgICAgICAgInNjcm9sbGJhclNsaWRlci5hY3RpdmVCYWNrZ3JvdW5kIjogIiNmY2ZjZmExMiIsCiAgICAgICAgInNjcm9sbGJhclNsaWRlci5iYWNrZ3JvdW5kIjogIiNmY2ZjZmExMiIsCiAgICAgICAgInNjcm9sbGJhclNsaWRlci5ob3ZlckJhY2tncm91bmQiOiAiI2ZjZmNmYTEyIiwKICAgICAgICAic2VsZWN0aW9uLmJhY2tncm91bmQiOiAiI2MxYzBjMDI2IiwKICAgICAgICAic2V0dGluZ3MuY2hlY2tib3hCYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJzZXR0aW5ncy5jaGVja2JveEJvcmRlciI6ICIjNDAzZTQxIiwKICAgICAgICAic2V0dGluZ3MuY2hlY2tib3hGb3JlZ3JvdW5kIjogIiNmY2ZjZmEiLAogICAgICAgICJzZXR0aW5ncy5kcm9wZG93bkJhY2tncm91bmQiOiAiIzQwM2U0MSIsCiAgICAgICAgInNldHRpbmdzLmRyb3Bkb3duQm9yZGVyIjogIiM0MDNlNDEiLAogICAgICAgICJzZXR0aW5ncy5kcm9wZG93bkZvcmVncm91bmQiOiAiI2ZjZmNmYSIsCiAgICAgICAgInNldHRpbmdzLmRyb3Bkb3duTGlzdEJvcmRlciI6ICIjOTM5MjkzIiwKICAgICAgICAic2V0dGluZ3MuaGVhZGVyRm9yZWdyb3VuZCI6ICIjZmZkODY2IiwKICAgICAgICAic2V0dGluZ3MubW9kaWZpZWRJdGVtSW5kaWNhdG9yIjogIiNmZmQ4NjYiLAogICAgICAgICJzZXR0aW5ncy5udW1iZXJJbnB1dEJhY2tncm91bmQiOiAiIzQwM2U0MSIsCiAgICAgICAgInNldHRpbmdzLm51bWJlcklucHV0Qm9yZGVyIjogIiM0MDNlNDEiLAogICAgICAgICJzZXR0aW5ncy5udW1iZXJJbnB1dEZvcmVncm91bmQiOiAiI2ZjZmNmYSIsCiAgICAgICAgInNldHRpbmdzLnRleHRJbnB1dEJhY2tncm91bmQiOiAiIzQwM2U0MSIsCiAgICAgICAgInNldHRpbmdzLnRleHRJbnB1dEJvcmRlciI6ICIjNDAzZTQxIiwKICAgICAgICAic2V0dGluZ3MudGV4dElucHV0Rm9yZWdyb3VuZCI6ICIjZmNmY2ZhIiwKICAgICAgICAic2lkZUJhci5iYWNrZ3JvdW5kIjogIiMyMjFmMjIiLAogICAgICAgICJzaWRlQmFyLmJvcmRlciI6ICIjMTkxODFhIiwKICAgICAgICAic2lkZUJhci5kcm9wQmFja2dyb3VuZCI6ICIjMjIxZjIyYmYiLAogICAgICAgICJzaWRlQmFyLmZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgInNpZGVCYXJTZWN0aW9uSGVhZGVyLmJhY2tncm91bmQiOiAiIzIyMWYyMiIsCiAgICAgICAgInNpZGVCYXJTZWN0aW9uSGVhZGVyLmZvcmVncm91bmQiOiAiIzcyNzA3MiIsCiAgICAgICAgInNpZGVCYXJUaXRsZS5mb3JlZ3JvdW5kIjogIiM1YjU5NWMiLAogICAgICAgICJzdGF0dXNCYXIuYmFja2dyb3VuZCI6ICIjMjIxZjIyIiwKICAgICAgICAic3RhdHVzQmFyLmJvcmRlciI6ICIjMTkxODFhIiwKICAgICAgICAic3RhdHVzQmFyLmRlYnVnZ2luZ0JhY2tncm91bmQiOiAiIzcyNzA3MiIsCiAgICAgICAgInN0YXR1c0Jhci5kZWJ1Z2dpbmdCb3JkZXIiOiAiIzIyMWYyMiIsCiAgICAgICAgInN0YXR1c0Jhci5kZWJ1Z2dpbmdGb3JlZ3JvdW5kIjogIiNmY2ZjZmEiLAogICAgICAgICJzdGF0dXNCYXIuZm9yZWdyb3VuZCI6ICIjNzI3MDcyIiwKICAgICAgICAic3RhdHVzQmFyLm5vRm9sZGVyQmFja2dyb3VuZCI6ICIjMjIxZjIyIiwKICAgICAgICAic3RhdHVzQmFyLm5vRm9sZGVyQm9yZGVyIjogIiMxOTE4MWEiLAogICAgICAgICJzdGF0dXNCYXIubm9Gb2xkZXJGb3JlZ3JvdW5kIjogIiM3MjcwNzIiLAogICAgICAgICJzdGF0dXNCYXJJdGVtLmFjdGl2ZUJhY2tncm91bmQiOiAiIzJkMmEyZSIsCiAgICAgICAgInN0YXR1c0Jhckl0ZW0uZXJyb3JCYWNrZ3JvdW5kIjogIiMyZDJhMmUiLAogICAgICAgICJzdGF0dXNCYXJJdGVtLmVycm9yRm9yZWdyb3VuZCI6ICIjZmY2MTg4IiwKICAgICAgICAic3RhdHVzQmFySXRlbS5ob3ZlckJhY2tncm91bmQiOiAiI2ZjZmNmYTBjIiwKICAgICAgICAic3RhdHVzQmFySXRlbS5wcm9taW5lbnRCYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJzdGF0dXNCYXJJdGVtLnByb21pbmVudEhvdmVyQmFja2dyb3VuZCI6ICIjNDAzZTQxIiwKICAgICAgICAic3RhdHVzQmFySXRlbS5yZW1vdGVCYWNrZ3JvdW5kIjogIiMyMjFmMjIiLAogICAgICAgICJzdGF0dXNCYXJJdGVtLnJlbW90ZUZvcmVncm91bmQiOiAiI2E5ZGM3NiIsCiAgICAgICAgInN5bWJvbEljb24uYXJyYXlGb3JlZ3JvdW5kIjogIiNmZjYxODgiLAogICAgICAgICJzeW1ib2xJY29uLmJvb2xlYW5Gb3JlZ3JvdW5kIjogIiNmZjYxODgiLAogICAgICAgICJzeW1ib2xJY29uLmNsYXNzRm9yZWdyb3VuZCI6ICIjNzhkY2U4IiwKICAgICAgICAic3ltYm9sSWNvbi5jb2xvckZvcmVncm91bmQiOiAiI2FiOWRmMiIsCiAgICAgICAgInN5bWJvbEljb24uY29uc3RhbnRGb3JlZ3JvdW5kIjogIiNhYjlkZjIiLAogICAgICAgICJzeW1ib2xJY29uLmNvbnN0cnVjdG9yRm9yZWdyb3VuZCI6ICIjYTlkYzc2IiwKICAgICAgICAic3ltYm9sSWNvbi5lbnVtZXJhdG9yRm9yZWdyb3VuZCI6ICIjZmM5ODY3IiwKICAgICAgICAic3ltYm9sSWNvbi5lbnVtZXJhdG9yTWVtYmVyRm9yZWdyb3VuZCI6ICIjZmM5ODY3IiwKICAgICAgICAic3ltYm9sSWNvbi5ldmVudEZvcmVncm91bmQiOiAiI2ZjOTg2NyIsCiAgICAgICAgInN5bWJvbEljb24uZmllbGRGb3JlZ3JvdW5kIjogIiNmYzk4NjciLAogICAgICAgICJzeW1ib2xJY29uLmZpbGVGb3JlZ3JvdW5kIjogIiNjMWMwYzAiLAogICAgICAgICJzeW1ib2xJY29uLmZvbGRlckZvcmVncm91bmQiOiAiI2MxYzBjMCIsCiAgICAgICAgInN5bWJvbEljb24uZnVuY3Rpb25Gb3JlZ3JvdW5kIjogIiNhOWRjNzYiLAogICAgICAgICJzeW1ib2xJY29uLmludGVyZmFjZUZvcmVncm91bmQiOiAiIzc4ZGNlOCIsCiAgICAgICAgInN5bWJvbEljb24ua2V5Rm9yZWdyb3VuZCI6ICIjZmM5ODY3IiwKICAgICAgICAic3ltYm9sSWNvbi5rZXl3b3JkRm9yZWdyb3VuZCI6ICIjZmY2MTg4IiwKICAgICAgICAic3ltYm9sSWNvbi5tZXRob2RGb3JlZ3JvdW5kIjogIiNhOWRjNzYiLAogICAgICAgICJzeW1ib2xJY29uLm1vZHVsZUZvcmVncm91bmQiOiAiIzc4ZGNlOCIsCiAgICAgICAgInN5bWJvbEljb24ubmFtZXNwYWNlRm9yZWdyb3VuZCI6ICIjNzhkY2U4IiwKICAgICAgICAic3ltYm9sSWNvbi5udWxsRm9yZWdyb3VuZCI6ICIjYWI5ZGYyIiwKICAgICAgICAic3ltYm9sSWNvbi5udW1iZXJGb3JlZ3JvdW5kIjogIiNhYjlkZjIiLAogICAgICAgICJzeW1ib2xJY29uLm9iamVjdEZvcmVncm91bmQiOiAiIzc4ZGNlOCIsCiAgICAgICAgInN5bWJvbEljb24ub3BlcmF0b3JGb3JlZ3JvdW5kIjogIiNmZjYxODgiLAogICAgICAgICJzeW1ib2xJY29uLnBhY2thZ2VGb3JlZ3JvdW5kIjogIiNhYjlkZjIiLAogICAgICAgICJzeW1ib2xJY29uLnByb3BlcnR5Rm9yZWdyb3VuZCI6ICIjZmM5ODY3IiwKICAgICAgICAic3ltYm9sSWNvbi5yZWZlcmVuY2VGb3JlZ3JvdW5kIjogIiNhYjlkZjIiLAogICAgICAgICJzeW1ib2xJY29uLnNuaXBwZXRGb3JlZ3JvdW5kIjogIiNhOWRjNzYiLAogICAgICAgICJzeW1ib2xJY29uLnN0cmluZ0ZvcmVncm91bmQiOiAiI2ZmZDg2NiIsCiAgICAgICAgInN5bWJvbEljb24uc3RydWN0Rm9yZWdyb3VuZCI6ICIjZmY2MTg4IiwKICAgICAgICAic3ltYm9sSWNvbi50ZXh0Rm9yZWdyb3VuZCI6ICIjZmZkODY2IiwKICAgICAgICAic3ltYm9sSWNvbi50eXBlUGFyYW1ldGVyRm9yZWdyb3VuZCI6ICIjZmM5ODY3IiwKICAgICAgICAic3ltYm9sSWNvbi51bml0Rm9yZWdyb3VuZCI6ICIjYWI5ZGYyIiwKICAgICAgICAic3ltYm9sSWNvbi52YXJpYWJsZUZvcmVncm91bmQiOiAiIzc4ZGNlOCIsCiAgICAgICAgInRhYi5hY3RpdmVCYWNrZ3JvdW5kIjogIiMyZDJhMmUiLAogICAgICAgICJ0YWIuYWN0aXZlQm9yZGVyIjogIiNmZmQ4NjYiLAogICAgICAgICJ0YWIuYWN0aXZlRm9yZWdyb3VuZCI6ICIjZmZkODY2IiwKICAgICAgICAidGFiLmFjdGl2ZU1vZGlmaWVkQm9yZGVyIjogIiM1YjU5NWMiLAogICAgICAgICJ0YWIuYm9yZGVyIjogIiMyZDJhMmUiLAogICAgICAgICJ0YWIuaG92ZXJCYWNrZ3JvdW5kIjogIiMyZDJhMmUiLAogICAgICAgICJ0YWIuaG92ZXJCb3JkZXIiOiAiIzViNTk1YyIsCiAgICAgICAgInRhYi5pbmFjdGl2ZUJhY2tncm91bmQiOiAiIzJkMmEyZSIsCiAgICAgICAgInRhYi5pbmFjdGl2ZUZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgInRhYi5pbmFjdGl2ZU1vZGlmaWVkQm9yZGVyIjogIiM1YjU5NWMiLAogICAgICAgICJ0YWIubGFzdFBpbm5lZEJvcmRlciI6ICIjNWI1OTVjIiwKICAgICAgICAidGFiLnVuZm9jdXNlZEFjdGl2ZUJvcmRlciI6ICIjOTM5MjkzIiwKICAgICAgICAidGFiLnVuZm9jdXNlZEFjdGl2ZUZvcmVncm91bmQiOiAiI2MxYzBjMCIsCiAgICAgICAgInRhYi51bmZvY3VzZWRBY3RpdmVNb2RpZmllZEJvcmRlciI6ICIjNDAzZTQxIiwKICAgICAgICAidGFiLnVuZm9jdXNlZEhvdmVyQmFja2dyb3VuZCI6ICIjMmQyYTJlIiwKICAgICAgICAidGFiLnVuZm9jdXNlZEhvdmVyQm9yZGVyIjogIiMyZDJhMmUiLAogICAgICAgICJ0YWIudW5mb2N1c2VkSW5hY3RpdmVGb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICJ0YWIudW5mb2N1c2VkSW5hY3RpdmVNb2RpZmllZEJvcmRlciI6ICIjNDAzZTQxIiwKICAgICAgICAidGVybWluYWwuYW5zaUJsYWNrIjogIiM0MDNlNDEiLAogICAgICAgICJ0ZXJtaW5hbC5hbnNpQmx1ZSI6ICIjZmM5ODY3IiwKICAgICAgICAidGVybWluYWwuYW5zaUJyaWdodEJsYWNrIjogIiM3MjcwNzIiLAogICAgICAgICJ0ZXJtaW5hbC5hbnNpQnJpZ2h0Qmx1ZSI6ICIjZmM5ODY3IiwKICAgICAgICAidGVybWluYWwuYW5zaUJyaWdodEN5YW4iOiAiIzc4ZGNlOCIsCiAgICAgICAgInRlcm1pbmFsLmFuc2lCcmlnaHRHcmVlbiI6ICIjYTlkYzc2IiwKICAgICAgICAidGVybWluYWwuYW5zaUJyaWdodE1hZ2VudGEiOiAiI2FiOWRmMiIsCiAgICAgICAgInRlcm1pbmFsLmFuc2lCcmlnaHRSZWQiOiAiI2ZmNjE4OCIsCiAgICAgICAgInRlcm1pbmFsLmFuc2lCcmlnaHRXaGl0ZSI6ICIjZmNmY2ZhIiwKICAgICAgICAidGVybWluYWwuYW5zaUJyaWdodFllbGxvdyI6ICIjZmZkODY2IiwKICAgICAgICAidGVybWluYWwuYW5zaUN5YW4iOiAiIzc4ZGNlOCIsCiAgICAgICAgInRlcm1pbmFsLmFuc2lHcmVlbiI6ICIjYTlkYzc2IiwKICAgICAgICAidGVybWluYWwuYW5zaU1hZ2VudGEiOiAiI2FiOWRmMiIsCiAgICAgICAgInRlcm1pbmFsLmFuc2lSZWQiOiAiI2ZmNjE4OCIsCiAgICAgICAgInRlcm1pbmFsLmFuc2lXaGl0ZSI6ICIjZmNmY2ZhIiwKICAgICAgICAidGVybWluYWwuYW5zaVllbGxvdyI6ICIjZmZkODY2IiwKICAgICAgICAidGVybWluYWwuYmFja2dyb3VuZCI6ICIjNDAzZTQxIiwKICAgICAgICAidGVybWluYWwuZm9yZWdyb3VuZCI6ICIjZmNmY2ZhIiwKICAgICAgICAidGVybWluYWwuc2VsZWN0aW9uQmFja2dyb3VuZCI6ICIjZmNmY2ZhMjYiLAogICAgICAgICJ0ZXJtaW5hbEN1cnNvci5iYWNrZ3JvdW5kIjogIiMwMDAwMDAwMCIsCiAgICAgICAgInRlcm1pbmFsQ3Vyc29yLmZvcmVncm91bmQiOiAiI2ZjZmNmYSIsCiAgICAgICAgInRleHRCbG9ja1F1b3RlLmJhY2tncm91bmQiOiAiIzQwM2U0MSIsCiAgICAgICAgInRleHRCbG9ja1F1b3RlLmJvcmRlciI6ICIjNDAzZTQxIiwKICAgICAgICAidGV4dENvZGVCbG9jay5iYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJ0ZXh0TGluay5hY3RpdmVGb3JlZ3JvdW5kIjogIiNmY2ZjZmEiLAogICAgICAgICJ0ZXh0TGluay5mb3JlZ3JvdW5kIjogIiNmZmQ4NjYiLAogICAgICAgICJ0ZXh0UHJlZm9ybWF0LmZvcmVncm91bmQiOiAiI2ZjZmNmYSIsCiAgICAgICAgInRleHRTZXBhcmF0b3IuZm9yZWdyb3VuZCI6ICIjNzI3MDcyIiwKICAgICAgICAidGl0bGVCYXIuYWN0aXZlQmFja2dyb3VuZCI6ICIjMjIxZjIyIiwKICAgICAgICAidGl0bGVCYXIuYWN0aXZlRm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAidGl0bGVCYXIuYm9yZGVyIjogIiMxOTE4MWEiLAogICAgICAgICJ0aXRsZUJhci5pbmFjdGl2ZUJhY2tncm91bmQiOiAiIzIyMWYyMiIsCiAgICAgICAgInRpdGxlQmFyLmluYWN0aXZlRm9yZWdyb3VuZCI6ICIjNWI1OTVjIiwKICAgICAgICAid2Fsa1Rocm91Z2guZW1iZWRkZWRFZGl0b3JCYWNrZ3JvdW5kIjogIiMyMjFmMjIiLAogICAgICAgICJ3ZWxjb21lUGFnZS5idXR0b25CYWNrZ3JvdW5kIjogIiM0MDNlNDEiLAogICAgICAgICJ3ZWxjb21lUGFnZS5idXR0b25Ib3ZlckJhY2tncm91bmQiOiAiIzViNTk1YyIsCiAgICAgICAgIndpZGdldC5zaGFkb3ciOiAiIzE5MTgxYSIKICAgIH0sCiAgICAicnVsZXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzI3MDcyIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAiY29tbWVudCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzcyNzA3MiIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogImNvbW1lbnQga2V5d29yZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzcyNzA3MiIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogImNvbW1lbnQgbWFya3VwLnVuZGVybGluZS5saW5rIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzI3MDcyIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAiY29tbWVudCBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM3MjcwNzIiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb21tZW50IHB1bmN0dWF0aW9uLmRlZmluaXRpb24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM3MjcwNzIiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb21tZW50IHB1bmN0dWF0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzI3MDcyIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAiY29tbWVudCB0ZXh0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzI3MDcyIiwKICAgICAgICAgICAgInRva2VuIjogImNvbW1lbnQgc3RvcmFnZS50eXBlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQzFDMEMwIiwKICAgICAgICAgICAgInRva2VuIjogImNvbW1lbnQgZW50aXR5Lm5hbWUudHlwZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0MxQzBDMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb21tZW50IHZhcmlhYmxlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQzFDMEMwIiwKICAgICAgICAgICAgInRva2VuIjogImNvbW1lbnQgdmFyaWFibGUub3RoZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBQjlERjIiLAogICAgICAgICAgICAidG9rZW4iOiAiY29tbWVudCBrZXl3b3JkLmNvZGV0YWcubm90YXRpb24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAiY29tbWVudC5naXQtc3RhdHVzLmhlYWRlci5yZW1vdGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM3OERDRTgiLAogICAgICAgICAgICAidG9rZW4iOiAiY29tbWVudC5naXQtc3RhdHVzLmhlYWRlci5sb2NhbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDRkNGQSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb21tZW50Lm90aGVyLmdpdC1zdGF0dXMuaGVhZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0FCOURGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb25zdGFudCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDRkNGQSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb25zdGFudC5vdGhlciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0FCOURGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb25zdGFudC5vdGhlci5waHAiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBQjlERjIiLAogICAgICAgICAgICAidG9rZW4iOiAiY29uc3RhbnQub3RoZXIucHJvcGVydHkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBQjlERjIiLAogICAgICAgICAgICAidG9rZW4iOiAiY29uc3RhbnQub3RoZXIuY2l0YXRpb24ubGF0ZXgiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBQjlERjIiLAogICAgICAgICAgICAidG9rZW4iOiAiY29uc3RhbnQub3RoZXIuY29sb3IiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBQjlERjIiLAogICAgICAgICAgICAidG9rZW4iOiAiY29uc3RhbnQub3RoZXIuY2hhcmFjdGVyLWNsYXNzLmVzY2FwZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0FCOURGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb25zdGFudC5vdGhlci5rZXkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQzk4NjciLAogICAgICAgICAgICAidG9rZW4iOiAiY29uc3RhbnQub3RoZXIuc3ltYm9sIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50Lm90aGVyLmVsbSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0FCOURGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJjb25zdGFudC5udW1lcmljIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQUI5REYyIiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50Lmxhbmd1YWdlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQUI5REYyIiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50LmNoYXJhY3Rlci5lc2NhcGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM1QjU5NUMiLAogICAgICAgICAgICAidG9rZW4iOiAiY29uc3RhbnQubnVtZXJpYy5saW5lLW51bWJlci5maW5kLWluLWZpbGVzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZEODY2IiwKICAgICAgICAgICAgInRva2VuIjogImNvbnN0YW50Lm51bWVyaWMubGluZS1udW1iZXIubWF0Y2guZmluZC1pbi1maWxlcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGRDg2NiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5zZWN0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQTlEQzc2IiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLmZ1bmN0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQTlEQzc2IiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLmZ1bmN0aW9uLnRlbXBsYXRlZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDRkNGQSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5mdW5jdGlvbi5tZW1iZXIuc3RhdGljIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLnR5cGUuY2xhc3MudGVtcGxhdGVkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLnR5cGUuY2xhc3MuZ2VuZXJpYyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc4RENFOCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS50eXBlLm5hbWVzcGFjZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0FCOURGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5sYWJlbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc4RENFOCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5mdW5jdGlvbi5wcmVwcm9jZXNzb3IiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBOURDNzYiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM3OERDRTgiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUuY2xhc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBQjlERjIiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUuY29uc3RhbnQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUubmFtZXNwYWNlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm90aGVyLmluaGVyaXRlZC1jbGFzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0E5REM3NiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5mdW5jdGlvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS50YWciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUudGFnLmpzLmpzeCBzdXBwb3J0LmNsYXNzLmNvbXBvbmVudC5qcy5qc3giCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUudGFnIHN1cHBvcnQuY2xhc3MuY29tcG9uZW50IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS52dWUgc3VwcG9ydC5jbGFzcy5jb21wb25lbnQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUuZnVuY3Rpb24ub3BlcmF0b3IiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM3OERDRTgiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUudHlwZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc4RENFOCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS50eXBlLmNsYXNzLnJlZmVyZW5jZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc4RENFOCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS50eXBlLmNsYXNzLnZhbHVlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQTlEQzc2IiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5vdGhlci5hdHRyaWJ1dGUtbmFtZS5jbGFzcy5jc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBOURDNzYiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lLnBhcmVudC1zZWxlY3Rvci1zdWZmaXguY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQTlEQzc2IiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5vdGhlci5hdHRyaWJ1dGUtbmFtZS5wYXJlbnQtc2VsZWN0b3Itc3VmZml4LmNzcyBwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmVudGl0eS5jc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBOURDNzYiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lLmNzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0E5REM3NiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkub3RoZXIuYW5pbWF0aW9uLW5hbWUuY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkM5ODY3IiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5vdGhlci5hdHRyaWJ1dGUtbmFtZS5pZC5jc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM3OERDRTgiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUucHNldWRvLWNsYXNzLmNzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc4RENFOCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5vdGhlci5wc2V1ZG8tY2xhc3MuY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm90aGVyLnBzZXVkby1lbGVtZW50LmNzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0E5REM3NiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5mdW5jdGlvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0E5REM3NiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdXBwb3J0LmZ1bmN0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQUI5REYyIiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5vdGhlci5naXQtc3RhdHVzLmhleCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkub3RoZXIuamluamEyLmRlbGltaXRlciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDRkNGQSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5vcGVyYXRvci5jdXN0b20tbGl0ZXJhbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGRDg2NiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5vcGVyYXRvci5jdXN0b20tbGl0ZXJhbC5zdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBQjlERjIiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUub3BlcmF0b3IuY3VzdG9tLWxpdGVyYWwubnVtYmVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLnR5cGUucnVzdCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJlbnRpdHkubmFtZS5saWZldGltZS5ydXN0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJpbnZhbGlkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZC5jb250cm9sIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQuY29udHJvbC5kaXJlY3RpdmUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZC5vcGVyYXRvciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm9wZXJhdG9yLm1lbWJlciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm9wZXJhdG9yLm5ldyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm90aGVyLnN1YnN0aXR1dGlvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm90aGVyLnRlbXBsYXRlLmJlZ2luIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQub3RoZXIudGVtcGxhdGUuZW5kIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQub3BlcmF0b3IuaGVhZGluZy5yZXN0cnVjdHVyZWR0ZXh0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQub3BlcmF0b3IudGFibGUucm93LnJlc3RydWN0dXJlZHRleHQga2V5d29yZC5vcGVyYXRvci50YWJsZS5kYXRhLnJlc3RydWN0dXJlZHRleHQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZC5vdGhlci5wYXJlbnRoZXNpcy5lbG0iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM3OERDRTgiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZC5vdGhlci5mbi5ydXN0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQub3RoZXIucnVzdCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc4RENFOCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm90aGVyLnVuc2FmZS5ydXN0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQub3RoZXIud2hlcmUucnVzdCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLmNvbnRyb2wucnVzdCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm9wZXJhdG9yLm1pc2MucnVzdCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLmRlY2xhcmF0aW9uLmNsYXNzLnJ1YnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAia2V5d29yZC5kZWNsYXJhdGlvbi5mdW5jdGlvbi5ydWJ5IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAuaXRhbGljIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9udFN0eWxlIjogImJvbGQiLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLmJvbGQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkQ4NjYiLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLmhlYWRpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQzk4NjciLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLnJhdyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJ1bmRlcmxpbmUiLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLnVuZGVybGluZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0E5REM3NiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAudW5kZXJsaW5lLmxpbmsiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBOURDNzYiLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLmluc2VydGVkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQTlEQzc2IiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC5pbnNlcnRlZCBwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmluc2VydGVkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC5kZWxldGVkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC5kZWxldGVkIHB1bmN0dWF0aW9uLmRlZmluaXRpb24uZGVsZXRlZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGRDg2NiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAuY2hhbmdlZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGRDg2NiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtYXJrdXAuY2hhbmdlZCBwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmNoYW5nZWQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLmlnbm9yZWQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICAgICAidG9rZW4iOiAibWFya3VwLmlnbm9yZWQgcHVuY3R1YXRpb24uZGVmaW5pdGlvbi5pZ25vcmVkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC51bnRyYWNrZWQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogIm1hcmt1cC5xdW90ZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLmJyYWNlLnJvdW5kIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuYnJhY2Uuc3F1YXJlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuYnJhY2UuY3VybHkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5kZWxpbWl0ZXIuY29tbWEuanMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5mdW5jdGlvbi1jYWxsLndpdGhvdXQtYXJndW1lbnRzLmpzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuZnVuY3Rpb24tY2FsbC5tZXRob2Qud2l0aG91dC1hcmd1bWVudHMuanMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBOURDNzYiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5mdW5jdGlvbi1jYWxsLmdlbmVyaWMucHl0aG9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQTlEQzc2IiwKICAgICAgICAgICAgInRva2VuIjogInN1cHBvcnQuZnVuY3Rpb24uYnVpbHRpbi5weXRob24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5mdW5jdGlvbi1jYWxsLnB5dGhvbiBtZXRhLmZ1bmN0aW9uLWNhbGwuYXJndW1lbnRzLnB5dGhvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0E5REM3NiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLmluc3RhbmNlLmNvbnN0cnVjdG9yIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQTlEQzc2IiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuYXR0cmlidXRlLXdpdGgtdmFsdWUuY2xhc3Mgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQTlEQzc2IiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuYXR0cmlidXRlLmNsYXNzLmh0bWwgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkM5ODY3IiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuYXR0cmlidXRlLXdpdGgtdmFsdWUuaWQgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkM5ODY3IiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuYXR0cmlidXRlLmlkLmh0bWwgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkNGQ0ZBIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkNGQ0ZBIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkNGQ0ZBIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkNGQ0ZBIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkNGQ0ZBIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkNGQ0ZBIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkNGQ0ZBIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkNGQ0ZBIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkNGQ0ZBIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkNGQ0ZBIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkNGQ0ZBIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkQ4NjYiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkQ4NjYiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZEODY2IiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkQ4NjYiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkQ4NjYiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZEODY2IiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkQ4NjYiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkQ4NjYiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZEODY2IiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkQ4NjYiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkQ4NjYiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZEODY2IiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkQ4NjYiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkQ4NjYiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZEODY2IiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qc29uIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkQ4NjYiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmpzb24gbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5IG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkudmFsdWUgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeSBtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlIG1ldGEuc3RydWN0dXJlLmRpY3Rpb25hcnkgbWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS52YWx1ZSBzdHJpbmciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5vYmplY3QubWVtYmVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkM5ODY3IiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEucHJvcGVydHktbGlzdC5jc3MgdmFyaWFibGUub3RoZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBQjlERjIiLAogICAgICAgICAgICAidG9rZW4iOiAiZW50aXR5Lm5hbWUuY29uc3RhbnQucHJlcHJvY2Vzc29yIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQUI5REYyIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEucHJlcHJvY2Vzc29yIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkZEODY2IiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuZGlmZi5naXQtZGlmZi5oZWFkZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS50eXBlX3BhcmFtcy5ydXN0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQzFDMEMwIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuYXR0cmlidXRlLnJ1c3QiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNDMUMwQzAiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5hbm5vdGF0aW9uLnJ1c3QiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNDMUMwQzAiLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUubGFuZ3VhZ2UucnVzdCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0MxQzBDMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5hbm5vdGF0aW9uLnJ1c3QiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNDMUMwQzAiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5hbm5vdGF0aW9uLnJ1c3Qgc3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQzFDMEMwIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEuYW5ub3RhdGlvbi5ydXN0IGtleXdvcmQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNDMUMwQzAiLAogICAgICAgICAgICAidG9rZW4iOiAibWV0YS5hbm5vdGF0aW9uLnJ1c3Qga2V5d29yZC5vcGVyYXRvciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0MxQzBDMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLmF0dHJpYnV0ZS5ydXN0IHN0cmluZyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZyBzb3VyY2UiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5ncm91cC5iZWdpbi5ydWJ5IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24uZ3JvdXAuZW5kLnJ1YnkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5ncm91cC5iZWdpbi5jc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5ncm91cC5lbmQuY3NzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24uc3RyaW5nLmVuZC5odG1sIHNvdXJjZS5jc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5ncm91cCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzcyNzA3MiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmNvbW1lbnQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNDMUMwQzAiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi52YXJpYWJsZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0MxQzBDMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmtleXdvcmQuc2NzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0MxQzBDMCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmVudGl0eS5jc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQzk4NjciLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24uc2VjdGlvbi5lbWJlZGRlZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDOTg2NyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5zZWN0aW9uLmVtYmVkZGVkIGVudGl0eS5uYW1lLnRhZyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDOTg2NyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5zZWN0aW9uLmVtYmVkZGVkIGNvbnN0YW50Lm90aGVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkM5ODY3IiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLnNlY3Rpb24uZW1iZWRkZWQgc291cmNlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkM5ODY3IiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLnNlY3Rpb24uZW1iZWRkZWQuYmVnaW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24udGVtcGxhdGUtc3RyaW5nLmVsZW1lbnQuYmVnaW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAicHVuY3R1YXRpb24udGVtcGxhdGUtc3RyaW5nLmVsZW1lbnQuZW5kIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24uc3RyaW5nLnRlbXBsYXRlLmJlZ2luIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24uc3RyaW5nLnRlbXBsYXRlLmVuZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdHJpbmcucXVvdGVkLnRlbXBsYXRlIHB1bmN0dWF0aW9uLmRlZmluaXRpb24uc3RyaW5nLmJlZ2luIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZy5xdW90ZWQudGVtcGxhdGUgcHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmcuZW5kIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGVtcGxhdGUtZXhwcmVzc2lvbi5iZWdpbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRlbXBsYXRlLWV4cHJlc3Npb24uZW5kIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiYmFja2dyb3VuZCI6ICIjQUI5REYyIiwKICAgICAgICAgICAgInRva2VuIjogIm1ldGEucGFyYWdyYXBoLm1hcmtkb3duIG1ldGEuZHVtbXkubGluZS1icmVhayIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImJhY2tncm91bmQiOiAiI0FCOURGMiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJtZXRhLnBhcmFncmFwaC5tYXJrZG93biBtZXRhLmhhcmQtbGluZS1icmVhay5tYXJrZG93biIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJiYWNrZ3JvdW5kIjogIiNGRjYxODg1OSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJyZWdpb24ucmVkaXNoIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkM5ODY3IiwKICAgICAgICAgICAgImJhY2tncm91bmQiOiAiI0ZDOTg2NzU5IiwKICAgICAgICAgICAgInRva2VuIjogInJlZ2lvbi5vcmFuZ2lzaCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGRDg2NiIsCiAgICAgICAgICAgICJiYWNrZ3JvdW5kIjogIiNGRkQ4NjY1OSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJyZWdpb24ueWVsbG93aXNoIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQTlEQzc2IiwKICAgICAgICAgICAgImJhY2tncm91bmQiOiAiI0E5REM3NjU5IiwKICAgICAgICAgICAgInRva2VuIjogInJlZ2lvbi5ncmVlbmlzaCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc4RENFOCIsCiAgICAgICAgICAgICJiYWNrZ3JvdW5kIjogIiM3OERDRTg1OSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJyZWdpb24uYmx1aXNoIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQUI5REYyIiwKICAgICAgICAgICAgImJhY2tncm91bmQiOiAiI0FCOURGMjU5IiwKICAgICAgICAgICAgInRva2VuIjogInJlZ2lvbi5wdXJwbGlzaCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJiYWNrZ3JvdW5kIjogIiNGRjYxODg1OSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJyZWdpb24ucGlua2lzaCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGRkZGRiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJyZWdpb24ud2hpdGlzaCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDRkNGQSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzb3VyY2UiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLnNjc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLnNhc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQzk4NjciLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzb3VyY2Uuc2FzcyB2YXJpYWJsZS5vdGhlciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDOTg2NyIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5zYXNzIHZhcmlhYmxlLnNhc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQzk4NjciLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzb3VyY2Uuc2NzcyB2YXJpYWJsZS5vdGhlciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDOTg2NyIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5zY3NzIHZhcmlhYmxlLnNjc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQzk4NjciLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzb3VyY2Uuc2NzcyB2YXJpYWJsZS5zYXNzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkM5ODY3IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmNzcyB2YXJpYWJsZS5vdGhlciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDOTg2NyIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5jc3MgdmFyaWFibGUuc2NzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDOTg2NyIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5sZXNzIHZhcmlhYmxlLm90aGVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkM5ODY3IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmxlc3MgdmFyaWFibGUub3RoZXIubGVzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDOTg2NyIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5sZXNzIHZhcmlhYmxlLmRlY2xhcmF0aW9uLmxlc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBQjlERjIiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmdpdC1zaG93LmNvbW1pdC5zaGEiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmdpdC1zaG93LmF1dGhvciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzb3VyY2UuZ2l0LXNob3cuZGF0ZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzb3VyY2UuZ2l0LWRpZmYuY29tbWFuZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzb3VyY2UuZ2l0LWRpZmYuY29tbWFuZCBtZXRhLmRpZmYuZ2l0LWRpZmYuaGVhZGVyLmZyb20tZmlsZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzb3VyY2UuZ2l0LWRpZmYuY29tbWFuZCBtZXRhLmRpZmYuZ2l0LWRpZmYuaGVhZGVyLnRvLWZpbGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBQjlERjIiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmdpdC1zaG93IG1ldGEuZGlmZi5naXQtZGlmZi5oZWFkZXIuZXh0ZW5kZWQuaW5kZXguZnJvbS1zaGEiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBQjlERjIiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmdpdC1zaG93IG1ldGEuZGlmZi5naXQtZGlmZi5oZWFkZXIuZXh0ZW5kZWQuaW5kZXgudG8tc2hhIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkM5ODY3IiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5naXQtc2hvdyBtZXRhLmRpZmYucmFuZ2UudW5pZmllZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzb3VyY2UuZ2l0LXNob3cgbWV0YS5kaWZmLmhlYWRlci5mcm9tLWZpbGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICAgICAidG9rZW4iOiAic291cmNlLmdpdC1zaG93IG1ldGEuZGlmZi5oZWFkZXIudG8tZmlsZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdG9yYWdlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS50eXBlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJub3JtYWwiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS50eXBlLmV4dGVuZHMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIm5vcm1hbCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdG9yYWdlLnR5cGUuZnVuY3Rpb24uYXJyb3ciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdG9yYWdlLm1vZGlmaWVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS50eXBlLm1vZGlmaWVyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQUI5REYyIiwKICAgICAgICAgICAgInRva2VuIjogInN0b3JhZ2UuY2xhc3MucmVzdHJ1Y3R1cmVkdGV4dC5yZWYiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS5tb2RpZmllci52aXNpYmlsaXR5LnJ1c3QiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS5tb2RpZmllci5saWZldGltZS5ydXN0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgInRva2VuIjogInN0b3JhZ2UubW9kaWZpZXIuY29uc3QucnVzdCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc4RENFOCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdG9yYWdlLm1vZGlmaWVyLmR5bi5ydXN0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgInRva2VuIjogInN0b3JhZ2UubW9kaWZpZXIubXV0LnJ1c3QiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM3OERDRTgiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS5tb2RpZmllci5zdGF0aWMucnVzdCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc4RENFOCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdG9yYWdlLnR5cGUucnVzdCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc4RENFOCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdG9yYWdlLnR5cGUuY29yZS5ydXN0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgInRva2VuIjogInN0b3JhZ2UuY2xhc3Muc3RkLnJ1c3QiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS50eXBlLnJ1c3QiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS5tb2RpZmllci5jb25zdC5ydXN0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogInN0b3JhZ2UubW9kaWZpZXIuZHluLnJ1c3QiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAic3RvcmFnZS5tb2RpZmllci5tdXQucnVzdCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdG9yYWdlLm1vZGlmaWVyLnN0YXRpYy5ydXN0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogImtleXdvcmQub3RoZXIucnVzdCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZGNjE4OCIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJrZXl3b3JkLm90aGVyLndoZXJlLnJ1c3QiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRkQ4NjYiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkNGQ0ZBIiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZy51bnF1b3RlZC5sYWJlbCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDRkNGQSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdHJpbmcgc291cmNlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZyBzb3VyY2UgcHVuY3R1YXRpb24uc2VjdGlvbi5lbWJlZGRlZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzkzOTI5MyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdHJpbmcgcHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmcgc291cmNlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZy5vdGhlci5saW5rLnRpdGxlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZy5vdGhlci5saW5rLmRlc2NyaXB0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZy5vdGhlci5saW5rLmRlc2NyaXB0aW9uLnRpdGxlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkY2MTg4IiwKICAgICAgICAgICAgInRva2VuIjogInN0cmluZy5yZWdleHAgcHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmcuYmVnaW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nLnJlZ2V4cCBwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnN0cmluZy5lbmQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBOURDNzYiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nLm90aGVyLnJlZiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0E5REM3NiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdHJpbmcub3RoZXIucmVzdHJ1Y3R1cmVkdGV4dC5yZWYiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNDMUMwQzAiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nLm90aGVyLmdpdC1zdGF0dXMuaGVscC5rZXkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGRjYxODgiLAogICAgICAgICAgICAidG9rZW4iOiAic3RyaW5nLm90aGVyLmdpdC1zdGF0dXMucmVtb3RlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgInRva2VuIjogInN1cHBvcnQuY29uc3RhbnQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5MzkyOTMiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC5jb25zdGFudC5oYW5kbGViYXJzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQzFDMEMwIiwKICAgICAgICAgICAgInRva2VuIjogInN1cHBvcnQudHlwZS52ZW5kb3ItcHJlZml4LmNzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0E5REM3NiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJzdXBwb3J0LmZ1bmN0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjOTM5MjkzIiwKICAgICAgICAgICAgInRva2VuIjogInN1cHBvcnQuZnVuY3Rpb24uZGVsaW1pdGVyLmVsbSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc4RENFOCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInN1cHBvcnQudHlwZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiIzc4RENFOCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogImVudGl0eS5uYW1lLnR5cGUub2JqZWN0LmNvbnNvbGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM3OERDRTgiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC52YXJpYWJsZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDRkNGQSIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAibm9ybWFsIiwKICAgICAgICAgICAgInRva2VuIjogInN1cHBvcnQudHlwZS5wcm9wZXJ0eS1uYW1lIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgInRva2VuIjogInN1cHBvcnQuY2xhc3MiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBQjlERjIiLAogICAgICAgICAgICAidG9rZW4iOiAic3VwcG9ydC5jb25zdGFudC5jb3JlLnJ1c3QiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAidGV4dCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDRkNGQSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0ZXh0LmZpbmQtaW4tZmlsZXMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUub3RoZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQzk4NjciLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5wYXJhbWV0ZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQzk4NjciLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJwYXJhbWV0ZXJzIHZhcmlhYmxlLmZ1bmN0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQzFDMEMwIiwKICAgICAgICAgICAgImZvbnRTdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUubGFuZ3VhZ2UiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNDMUMwQzAiLAogICAgICAgICAgICAiZm9udFN0eWxlIjogIml0YWxpYyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5wYXJhbWV0ZXIuZnVuY3Rpb24ubGFuZ3VhZ2Uuc3BlY2lhbC5zZWxmLnB5dGhvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0MxQzBDMCIsCiAgICAgICAgICAgICJmb250U3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgInRva2VuIjogInZhcmlhYmxlLnBhcmFtZXRlci5mdW5jdGlvbi5sYW5ndWFnZS5zcGVjaWFsLmNscy5weXRob24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBQjlERjIiLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUubGFuZ3VhZ2UuYXJndW1lbnRzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzhEQ0U4IiwKICAgICAgICAgICAgInRva2VuIjogInZhcmlhYmxlLm90aGVyLmNsYXNzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQUI5REYyIiwKICAgICAgICAgICAgInRva2VuIjogInZhcmlhYmxlLm90aGVyLmNvbnN0YW50IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkNGQ0ZBIiwKICAgICAgICAgICAgInRva2VuIjogInZhcmlhYmxlLm90aGVyLnJlYWR3cml0ZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDRkNGQSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5vdGhlci5tZW1iZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBQjlERjIiLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUub3RoZXIuZW51bW1lbWJlciIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDRkNGQSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5vdGhlci5wcm9wZXJ0eSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0ZDRkNGQSIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ2YXJpYWJsZS5vdGhlci5wcm9wZXJ0eS5zdGF0aWMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQ0ZDRkEiLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUub3RoZXIuZXZlbnQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNBOURDNzYiLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUuZnVuY3Rpb24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNGQzk4NjciLAogICAgICAgICAgICAidG9rZW4iOiAidmFyaWFibGUub3RoZXIuc3Vic3RpdHV0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQUI5REYyIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5ydWJ5IHZhcmlhYmxlLm90aGVyLnJlYWR3cml0ZS5pbnN0YW5jZS5ydWJ5IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQUI5REYyIiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5ydWJ5IHZhcmlhYmxlLm90aGVyLnJlYWR3cml0ZS5jbGFzcy5ydWJ5IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjQTlEQzc2IiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qaW5qYTIgdmFyaWFibGUub3RoZXIuamluamEyLmJsb2NrIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjRkM5ODY3IiwKICAgICAgICAgICAgInRva2VuIjogInNvdXJjZS5qaW5qYTIgdmFyaWFibGUub3RoZXIuamluamEyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNjc5NkU2IiwKICAgICAgICAgICAgInRva2VuIjogInRva2VuLmluZm8tdG9rZW4iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNDRDk3MzEiLAogICAgICAgICAgICAidG9rZW4iOiAidG9rZW4ud2Fybi10b2tlbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0Y0NDc0NyIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0b2tlbi5lcnJvci10b2tlbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZvcmVncm91bmQiOiAiI0IyNjdFNiIsCiAgICAgICAgICAgICJ0b2tlbiI6ICJ0b2tlbi5kZWJ1Zy10b2tlbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgInRva2VuIjogIiIsCiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiNmY2ZjZmEiCiAgICAgICAgfQogICAgXSwKICAgICJlbmNvZGVkVG9rZW5zQ29sb3JzIjogW10KfQ==";
  const __vite_glob_0_22 = "data:application/json;base64,";
  const __vite_glob_0_23 = "data:application/json;base64,";
  const __vite_glob_0_24 = "data:application/json;base64,";
  const __vite_glob_0_25 = "data:application/json;base64,";
  const __vite_glob_0_26 = "data:application/json;base64,";
  const __vite_glob_0_27 = "data:application/json;base64,";
  const __vite_glob_0_28 = "data:application/json;base64,";
  const __vite_glob_0_29 = "data:application/json;base64,";
  const __vite_glob_0_30 = "data:application/json;base64,";
  const __vite_glob_0_31 = "data:application/json;base64,";
  const __vite_glob_0_32 = "data:application/json;base64,";
  const __vite_glob_0_33 = "data:application/json;base64,";
  const __vite_glob_0_34 = "data:application/json;base64,";
  const __vite_glob_0_35 = "data:application/json;base64,";
  const __vite_glob_0_36 = "data:application/json;base64,";
  const __vite_glob_0_37 = "data:application/json;base64,";
  const __vite_glob_0_38 = "data:application/json;base64,";
  const __vite_glob_0_39 = "data:application/json;base64,";
  var _unsafeWindow = /* @__PURE__ */ (() => typeof unsafeWindow != "undefined" ? unsafeWindow : void 0)();
  const fontFamilys = [
    { label: "Fira Code", value: "'Fira Code', 'Monoid', 'Consolas', 'monospace'", feature: '"liga" 0, "calt" 1' },
    { label: "Menlo", value: 'Menlo, Monaco, "Courier New", monospace;', feature: '"liga" 0, "calt" 0' }
  ];
  const codeThemeList = [
    { name: "vs", value: "vs", out: true, group: "默认" },
    { name: "vs-dark", value: "vs-dark", out: true, group: "默认" },
    { name: "hc-black", value: "hc-black", out: true, group: "默认" },
    {
      name: "Catppuccin Mocha",
      value: "CatppuccinMocha",
      group: "Catppuccin",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Atlantic Night",
      value: "AtlanticNight",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Atom One Dark",
      value: "AtomOneDark",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Aurora X",
      value: "AuroraX",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Ayu Dark",
      group: "Ayu",
      value: "AyuDark",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Ayu Light",
      group: "Ayu",
      value: "AyuLight",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Bluloco Light",
      value: "BlulocoLight",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Brackets Light Pro",
      value: "BracketsLightPro",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Code Sand Box",
      value: "CodeSandBox",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Darktooth",
      value: "Darktooth",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Dracula",
      value: "Dracula",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Eva Light",
      value: "EvaLight",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Flat UI",
      value: "FlatUI",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Hopscotch",
      value: "Hopscotch",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Horla Light Theme",
      value: "HorlaLightTheme",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Hybrid Next",
      value: "HybridNext",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Kimbie Dark",
      value: "KimbieDark",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Laser Wave",
      value: "LaserWave",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Lucario",
      value: "Lucario",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Min",
      value: "Min",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Monokai Dimmed",
      value: "MonokaiDimmed",
      group: "Monokai",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Monokai Pro",
      value: "MonokaiPro",
      group: "Monokai",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Nebula",
      value: "Nebula",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Noctis Azureus",
      value: "NoctisAzureus",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Noctis Bordo",
      value: "NoctisBordo",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Noctis Lux",
      value: "NoctisLux",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "One Dark Pro",
      value: "OneDarkPro",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "One Monokai",
      value: "OneMonokai",
      group: "Monokai",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Panda",
      value: "Panda",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Re U I",
      value: "ReUI",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Remedy Dark",
      value: "RemedyDark",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Shades Of Purple",
      value: "ShadesOfPurple",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Snazzy Light",
      value: "SnazzyLight",
      group: "Snazzy",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Snazzy Operator",
      value: "SnazzyOperator",
      group: "Snazzy",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Sublime Material Theme Dark",
      value: "SublimeMaterialThemeDark",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Synth Wave84",
      value: "SynthWave84",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Tokyo Night Storm",
      value: "TokyoNightStorm",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Tomorrow Night Blue",
      value: "TomorrowNightBlue",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Twilight",
      value: "Twilight",
      custom: true,
      loaded: false,
      cache: ""
    },
    {
      name: "Winter Is Coming",
      value: "WinterIsComing",
      custom: true,
      loaded: false,
      cache: ""
    }
  ];
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function _arrayLikeToArray$3(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
    return n;
  }
  function _unsupportedIterableToArray$3(r, a) {
    if (r) {
      if ("string" == typeof r) return _arrayLikeToArray$3(r, a);
      var t = {}.toString.call(r).slice(8, -1);
      return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray$3(r, a) : void 0;
    }
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function _arrayWithoutHoles(r) {
    if (Array.isArray(r)) return _arrayLikeToArray$3(r);
  }
  function _iterableToArray(r) {
    if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
  }
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _toConsumableArray(r) {
    return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray$3(r) || _nonIterableSpread();
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function _typeof$1(o) {
    "@babel/helpers - typeof";
    return _typeof$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
      return typeof o2;
    } : function(o2) {
      return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
    }, _typeof$1(o);
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function toPrimitive(t, r) {
    if ("object" != _typeof$1(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
      var i = e.call(t, r || "default");
      if ("object" != _typeof$1(i)) return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
  }
  function toPropertyKey(t) {
    var i = toPrimitive(t, "string");
    return "symbol" == _typeof$1(i) ? i : i + "";
  }
  function _defineProperty$2(e, r, t) {
    return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
      value: t,
      enumerable: true,
      configurable: true,
      writable: true
    }) : e[r] = t, e;
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function isObject$a(value) {
    var type = _typeof$1(value);
    return value != null && (type == "object" || type == "function");
  }
  var isObject_1 = isObject$a;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var freeGlobal$1 = _typeof$1(commonjsGlobal) == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
  var _freeGlobal = freeGlobal$1;
  var freeGlobal = _freeGlobal;
  var freeSelf = (typeof self === "undefined" ? "undefined" : _typeof$1(self)) == "object" && self && self.Object === Object && self;
  var root$1$3 = freeGlobal || freeSelf || Function("return this")();
  var _root = root$1$3;
  var root$7 = _root;
  var _Symbol2 = root$7.Symbol;
  var _Symbol$2$1 = _Symbol2;
  var _Symbol$1$1 = _Symbol$2$1;
  var objectProto$1$4 = Object.prototype;
  var hasOwnProperty$b = objectProto$1$4.hasOwnProperty;
  var nativeObjectToString$1 = objectProto$1$4.toString;
  var symToStringTag$1 = _Symbol$1$1 ? _Symbol$1$1.toStringTag : void 0;
  function getRawTag$1(value) {
    var isOwn = hasOwnProperty$b.call(value, symToStringTag$1), tag = value[symToStringTag$1];
    try {
      value[symToStringTag$1] = void 0;
      var unmasked = true;
    } catch (e) {
    }
    var result = nativeObjectToString$1.call(value);
    if (unmasked) {
      if (isOwn) {
        value[symToStringTag$1] = tag;
      } else {
        delete value[symToStringTag$1];
      }
    }
    return result;
  }
  var _getRawTag = getRawTag$1;
  var objectProto$c = Object.prototype;
  var nativeObjectToString = objectProto$c.toString;
  function objectToString$1(value) {
    return nativeObjectToString.call(value);
  }
  var _objectToString = objectToString$1;
  var _Symbol$4 = _Symbol$2$1, getRawTag = _getRawTag, objectToString = _objectToString;
  var nullTag = "[object Null]", undefinedTag = "[object Undefined]";
  var symToStringTag = _Symbol$4 ? _Symbol$4.toStringTag : void 0;
  function baseGetTag$9(value) {
    if (value == null) {
      return value === void 0 ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
  }
  var _baseGetTag = baseGetTag$9;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var baseGetTag$8 = _baseGetTag, isObject$9 = isObject_1;
  var asyncTag = "[object AsyncFunction]", funcTag$2 = "[object Function]", genTag$1 = "[object GeneratorFunction]", proxyTag = "[object Proxy]";
  function isFunction$3(value) {
    if (!isObject$9(value)) {
      return false;
    }
    var tag = baseGetTag$8(value);
    return tag == funcTag$2 || tag == genTag$1 || tag == asyncTag || tag == proxyTag;
  }
  var isFunction_1 = isFunction$3;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var root$1$2 = _root;
  var coreJsData$1 = root$1$2["__core-js_shared__"];
  var _coreJsData = coreJsData$1;
  var coreJsData = _coreJsData;
  var maskSrcKey = function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
    return uid ? "Symbol(src)_1." + uid : "";
  }();
  function isMasked$1(func) {
    return !!maskSrcKey && maskSrcKey in func;
  }
  var _isMasked = isMasked$1;
  var funcProto$1 = Function.prototype;
  var funcToString$1 = funcProto$1.toString;
  function toSource$1(func) {
    if (func != null) {
      try {
        return funcToString$1.call(func);
      } catch (e) {
      }
      try {
        return func + "";
      } catch (e) {
      }
    }
    return "";
  }
  var _toSource = toSource$1;
  var isFunction$2 = isFunction_1, isMasked = _isMasked, isObject$8 = isObject_1, toSource$2 = _toSource;
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var funcProto$2 = Function.prototype, objectProto$b = Object.prototype;
  var funcToString$2 = funcProto$2.toString;
  var hasOwnProperty$a = objectProto$b.hasOwnProperty;
  var reIsNative = RegExp("^" + funcToString$2.call(hasOwnProperty$a).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  function baseIsNative$1(value) {
    if (!isObject$8(value) || isMasked(value)) {
      return false;
    }
    var pattern = isFunction$2(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource$2(value));
  }
  var _baseIsNative = baseIsNative$1;
  function getValue$1(object, key) {
    return object == null ? void 0 : object[key];
  }
  var _getValue = getValue$1;
  var baseIsNative = _baseIsNative, getValue = _getValue;
  function getNative$1$1(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : void 0;
  }
  var _getNative = getNative$1$1;
  var getNative$6 = _getNative, root$6 = _root;
  var Map$4 = getNative$6(root$6, "Map");
  var _Map = Map$4;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var getNative$5 = _getNative;
  var defineProperty$2 = function() {
    try {
      var func = getNative$5(Object, "defineProperty");
      func({}, "", {});
      return func;
    } catch (e) {
    }
  }();
  var _defineProperty$1 = defineProperty$2;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function eq$5(value, other) {
    return value === other || value !== value && other !== other;
  }
  var eq_1 = eq$5;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var defineProperty$1 = _defineProperty$1;
  function baseAssignValue$1$1(object, key, value) {
    if (key == "__proto__" && defineProperty$1) {
      defineProperty$1(object, key, {
        "configurable": true,
        "enumerable": true,
        "value": value,
        "writable": true
      });
    } else {
      object[key] = value;
    }
  }
  var _baseAssignValue = baseAssignValue$1$1;
  var baseAssignValue$3 = _baseAssignValue, eq$4 = eq_1;
  var objectProto$a = Object.prototype;
  var hasOwnProperty$9 = objectProto$a.hasOwnProperty;
  function assignValue$3(object, key, value) {
    var objValue = object[key];
    if (!(hasOwnProperty$9.call(object, key) && eq$4(objValue, value)) || value === void 0 && !(key in object)) {
      baseAssignValue$3(object, key, value);
    }
  }
  var _assignValue = assignValue$3;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function listCacheClear$1() {
    this.__data__ = [];
    this.size = 0;
  }
  var _listCacheClear = listCacheClear$1;
  var eq$3 = eq_1;
  function assocIndexOf$4(array, key) {
    var length = array.length;
    while (length--) {
      if (eq$3(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  }
  var _assocIndexOf = assocIndexOf$4;
  var assocIndexOf$3 = _assocIndexOf;
  var arrayProto = Array.prototype;
  var splice = arrayProto.splice;
  function listCacheDelete$1(key) {
    var data = this.__data__, index = assocIndexOf$3(data, key);
    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    --this.size;
    return true;
  }
  var _listCacheDelete = listCacheDelete$1;
  var assocIndexOf$2 = _assocIndexOf;
  function listCacheGet$1(key) {
    var data = this.__data__, index = assocIndexOf$2(data, key);
    return index < 0 ? void 0 : data[index][1];
  }
  var _listCacheGet = listCacheGet$1;
  var assocIndexOf$1 = _assocIndexOf;
  function listCacheHas$1(key) {
    return assocIndexOf$1(this.__data__, key) > -1;
  }
  var _listCacheHas = listCacheHas$1;
  var assocIndexOf = _assocIndexOf;
  function listCacheSet$1(key, value) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      ++this.size;
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  }
  var _listCacheSet = listCacheSet$1;
  var listCacheClear = _listCacheClear, listCacheDelete = _listCacheDelete, listCacheGet = _listCacheGet, listCacheHas = _listCacheHas, listCacheSet = _listCacheSet;
  function ListCache$1$1(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  ListCache$1$1.prototype.clear = listCacheClear;
  ListCache$1$1.prototype["delete"] = listCacheDelete;
  ListCache$1$1.prototype.get = listCacheGet;
  ListCache$1$1.prototype.has = listCacheHas;
  ListCache$1$1.prototype.set = listCacheSet;
  var _ListCache = ListCache$1$1;
  var getNative$4 = _getNative;
  var nativeCreate$4 = getNative$4(Object, "create");
  var _nativeCreate = nativeCreate$4;
  var nativeCreate$3 = _nativeCreate;
  function hashClear$1() {
    this.__data__ = nativeCreate$3 ? nativeCreate$3(null) : {};
    this.size = 0;
  }
  var _hashClear = hashClear$1;
  function hashDelete$1(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }
  var _hashDelete = hashDelete$1;
  var nativeCreate$2 = _nativeCreate;
  var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
  var objectProto$1$3 = Object.prototype;
  var hasOwnProperty$1$2 = objectProto$1$3.hasOwnProperty;
  function hashGet$1(key) {
    var data = this.__data__;
    if (nativeCreate$2) {
      var result = data[key];
      return result === HASH_UNDEFINED$1 ? void 0 : result;
    }
    return hasOwnProperty$1$2.call(data, key) ? data[key] : void 0;
  }
  var _hashGet = hashGet$1;
  var nativeCreate$1 = _nativeCreate;
  var objectProto$9 = Object.prototype;
  var hasOwnProperty$8 = objectProto$9.hasOwnProperty;
  function hashHas$1(key) {
    var data = this.__data__;
    return nativeCreate$1 ? data[key] !== void 0 : hasOwnProperty$8.call(data, key);
  }
  var _hashHas = hashHas$1;
  var nativeCreate = _nativeCreate;
  var HASH_UNDEFINED$2 = "__lodash_hash_undefined__";
  function hashSet$1(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED$2 : value;
    return this;
  }
  var _hashSet = hashSet$1;
  var hashClear = _hashClear, hashDelete = _hashDelete, hashGet = _hashGet, hashHas = _hashHas, hashSet = _hashSet;
  function Hash$1(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  Hash$1.prototype.clear = hashClear;
  Hash$1.prototype["delete"] = hashDelete;
  Hash$1.prototype.get = hashGet;
  Hash$1.prototype.has = hashHas;
  Hash$1.prototype.set = hashSet;
  var _Hash = Hash$1;
  var Hash = _Hash, ListCache$3 = _ListCache, Map$3 = _Map;
  function mapCacheClear$1() {
    this.size = 0;
    this.__data__ = {
      "hash": new Hash(),
      "map": new (Map$3 || ListCache$3)(),
      "string": new Hash()
    };
  }
  var _mapCacheClear = mapCacheClear$1;
  function isKeyable$1(value) {
    var type = _typeof$1(value);
    return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
  }
  var _isKeyable = isKeyable$1;
  var isKeyable = _isKeyable;
  function getMapData$4(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
  }
  var _getMapData = getMapData$4;
  var getMapData$3 = _getMapData;
  function mapCacheDelete$1(key) {
    var result = getMapData$3(this, key)["delete"](key);
    this.size -= result ? 1 : 0;
    return result;
  }
  var _mapCacheDelete = mapCacheDelete$1;
  var getMapData$2 = _getMapData;
  function mapCacheGet$1(key) {
    return getMapData$2(this, key).get(key);
  }
  var _mapCacheGet = mapCacheGet$1;
  var getMapData$1 = _getMapData;
  function mapCacheHas$1(key) {
    return getMapData$1(this, key).has(key);
  }
  var _mapCacheHas = mapCacheHas$1;
  var getMapData = _getMapData;
  function mapCacheSet$1(key, value) {
    var data = getMapData(this, key), size = data.size;
    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
  }
  var _mapCacheSet = mapCacheSet$1;
  var mapCacheClear = _mapCacheClear, mapCacheDelete = _mapCacheDelete, mapCacheGet = _mapCacheGet, mapCacheHas = _mapCacheHas, mapCacheSet = _mapCacheSet;
  function MapCache$3(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  MapCache$3.prototype.clear = mapCacheClear;
  MapCache$3.prototype["delete"] = mapCacheDelete;
  MapCache$3.prototype.get = mapCacheGet;
  MapCache$3.prototype.has = mapCacheHas;
  MapCache$3.prototype.set = mapCacheSet;
  var _MapCache = MapCache$3;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var MAX_SAFE_INTEGER$1 = 9007199254740991;
  function isLength$1$1(value) {
    return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER$1;
  }
  var isLength_1 = isLength$1$1;
  var isFunction$1 = isFunction_1, isLength$2 = isLength_1;
  function isArrayLike$5(value) {
    return value != null && isLength$2(value.length) && !isFunction$1(value);
  }
  var isArrayLike_1 = isArrayLike$5;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function isObjectLike$a(value) {
    return value != null && _typeof$1(value) == "object";
  }
  var isObjectLike_1 = isObjectLike$a;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function baseUnary$4(func) {
    return function(value) {
      return func(value);
    };
  }
  var _baseUnary = baseUnary$4;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var isBuffer$5 = { exports: {} };
  function stubFalse() {
    return false;
  }
  var stubFalse_1 = stubFalse;
  (function(module, exports) {
    var root2 = _root, stubFalse2 = stubFalse_1;
    var freeExports = exports && !exports.nodeType && exports;
    var freeModule = freeExports && true && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer = moduleExports ? root2.Buffer : void 0;
    var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
    var isBuffer2 = nativeIsBuffer || stubFalse2;
    module.exports = isBuffer2;
  })(isBuffer$5, isBuffer$5.exports);
  isBuffer$5.exports;
  var baseGetTag$7 = _baseGetTag, isLength$1 = isLength_1, isObjectLike$9 = isObjectLike_1;
  var argsTag$3 = "[object Arguments]", arrayTag$2 = "[object Array]", boolTag$3 = "[object Boolean]", dateTag$3 = "[object Date]", errorTag$2 = "[object Error]", funcTag$1 = "[object Function]", mapTag$5 = "[object Map]", numberTag$3 = "[object Number]", objectTag$4 = "[object Object]", regexpTag$3 = "[object RegExp]", setTag$5 = "[object Set]", stringTag$3 = "[object String]", weakMapTag$2 = "[object WeakMap]";
  var arrayBufferTag$3 = "[object ArrayBuffer]", dataViewTag$4 = "[object DataView]", float32Tag$2 = "[object Float32Array]", float64Tag$2 = "[object Float64Array]", int8Tag$2 = "[object Int8Array]", int16Tag$2 = "[object Int16Array]", int32Tag$2 = "[object Int32Array]", uint8Tag$2 = "[object Uint8Array]", uint8ClampedTag$2 = "[object Uint8ClampedArray]", uint16Tag$2 = "[object Uint16Array]", uint32Tag$2 = "[object Uint32Array]";
  var typedArrayTags = {};
  typedArrayTags[float32Tag$2] = typedArrayTags[float64Tag$2] = typedArrayTags[int8Tag$2] = typedArrayTags[int16Tag$2] = typedArrayTags[int32Tag$2] = typedArrayTags[uint8Tag$2] = typedArrayTags[uint8ClampedTag$2] = typedArrayTags[uint16Tag$2] = typedArrayTags[uint32Tag$2] = true;
  typedArrayTags[argsTag$3] = typedArrayTags[arrayTag$2] = typedArrayTags[arrayBufferTag$3] = typedArrayTags[boolTag$3] = typedArrayTags[dataViewTag$4] = typedArrayTags[dateTag$3] = typedArrayTags[errorTag$2] = typedArrayTags[funcTag$1] = typedArrayTags[mapTag$5] = typedArrayTags[numberTag$3] = typedArrayTags[objectTag$4] = typedArrayTags[regexpTag$3] = typedArrayTags[setTag$5] = typedArrayTags[stringTag$3] = typedArrayTags[weakMapTag$2] = false;
  function baseIsTypedArray$1(value) {
    return isObjectLike$9(value) && isLength$1(value.length) && !!typedArrayTags[baseGetTag$7(value)];
  }
  var _baseIsTypedArray = baseIsTypedArray$1;
  var _nodeUtil$1 = { exports: {} };
  (function(module, exports) {
    var freeGlobal2 = _freeGlobal;
    var freeExports = exports && !exports.nodeType && exports;
    var freeModule = freeExports && true && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal2.process;
    var nodeUtil2 = function() {
      try {
        var types = freeModule && freeModule.require && freeModule.require("util").types;
        if (types) {
          return types;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    module.exports = nodeUtil2;
  })(_nodeUtil$1, _nodeUtil$1.exports);
  _nodeUtil$1.exports;
  var baseIsTypedArray = _baseIsTypedArray, baseUnary$3 = _baseUnary, nodeUtil$2 = _nodeUtil$1.exports;
  var nodeIsTypedArray = nodeUtil$2 && nodeUtil$2.isTypedArray;
  var isTypedArray$4 = nodeIsTypedArray ? baseUnary$3(nodeIsTypedArray) : baseIsTypedArray;
  var isTypedArray_1 = isTypedArray$4;
  var objectProto$8 = Object.prototype;
  function isPrototype$3(value) {
    var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto$8;
    return value === proto;
  }
  var _isPrototype = isPrototype$3;
  function overArg$2(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }
  var _overArg = overArg$2;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var baseGetTag$6 = _baseGetTag, isObjectLike$1$2 = isObjectLike_1;
  var argsTag$2 = "[object Arguments]";
  function baseIsArguments$1(value) {
    return isObjectLike$1$2(value) && baseGetTag$6(value) == argsTag$2;
  }
  var _baseIsArguments = baseIsArguments$1;
  var baseIsArguments = _baseIsArguments, isObjectLike$8 = isObjectLike_1;
  var objectProto$7 = Object.prototype;
  var hasOwnProperty$7 = objectProto$7.hasOwnProperty;
  var propertyIsEnumerable$1 = objectProto$7.propertyIsEnumerable;
  var isArguments$5 = baseIsArguments(/* @__PURE__ */ function() {
    return arguments;
  }()) ? baseIsArguments : function(value) {
    return isObjectLike$8(value) && hasOwnProperty$7.call(value, "callee") && !propertyIsEnumerable$1.call(value, "callee");
  };
  var isArguments_1 = isArguments$5;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var isArray$b = Array.isArray;
  var isArray_1 = isArray$b;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var MAX_SAFE_INTEGER = 9007199254740991;
  var reIsUint = /^(?:0|[1-9]\d*)$/;
  function isIndex$4(value, length) {
    var type = _typeof$1(value);
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
  }
  var _isIndex = isIndex$4;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function baseTimes$1(n, iteratee) {
    var index = -1, result = Array(n);
    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }
  var _baseTimes = baseTimes$1;
  var baseTimes = _baseTimes, isArguments$4 = isArguments_1, isArray$a = isArray_1, isBuffer$4 = isBuffer$5.exports, isIndex$3 = _isIndex, isTypedArray$3 = isTypedArray_1;
  var objectProto$1$2 = Object.prototype;
  var hasOwnProperty$1$1 = objectProto$1$2.hasOwnProperty;
  function arrayLikeKeys$1(value, inherited) {
    var isArr = isArray$a(value), isArg = !isArr && isArguments$4(value), isBuff = !isArr && !isArg && isBuffer$4(value), isType = !isArr && !isArg && !isBuff && isTypedArray$3(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
    for (var key in value) {
      if ((inherited || hasOwnProperty$1$1.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
      (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
      isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
      isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
      isIndex$3(key, length)))) {
        result.push(key);
      }
    }
    return result;
  }
  var _arrayLikeKeys = arrayLikeKeys$1;
  var ListCache$2 = _ListCache;
  function stackClear$1() {
    this.__data__ = new ListCache$2();
    this.size = 0;
  }
  var _stackClear = stackClear$1;
  function stackDelete$1(key) {
    var data = this.__data__, result = data["delete"](key);
    this.size = data.size;
    return result;
  }
  var _stackDelete = stackDelete$1;
  function stackGet$1(key) {
    return this.__data__.get(key);
  }
  var _stackGet = stackGet$1;
  function stackHas$1(key) {
    return this.__data__.has(key);
  }
  var _stackHas = stackHas$1;
  var ListCache$1 = _ListCache, Map$2 = _Map, MapCache$2 = _MapCache;
  var LARGE_ARRAY_SIZE = 200;
  function stackSet$1(key, value) {
    var data = this.__data__;
    if (data instanceof ListCache$1) {
      var pairs = data.__data__;
      if (!Map$2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
        pairs.push([key, value]);
        this.size = ++data.size;
        return this;
      }
      data = this.__data__ = new MapCache$2(pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
  }
  var _stackSet = stackSet$1;
  var ListCache = _ListCache, stackClear = _stackClear, stackDelete = _stackDelete, stackGet = _stackGet, stackHas = _stackHas, stackSet = _stackSet;
  function Stack$4(entries) {
    var data = this.__data__ = new ListCache(entries);
    this.size = data.size;
  }
  Stack$4.prototype.clear = stackClear;
  Stack$4.prototype["delete"] = stackDelete;
  Stack$4.prototype.get = stackGet;
  Stack$4.prototype.has = stackHas;
  Stack$4.prototype.set = stackSet;
  var _Stack = Stack$4;
  var root$5 = _root;
  var Uint8Array$1 = root$5.Uint8Array;
  var _Uint8Array = Uint8Array$1;
  var _cloneBuffer$1 = { exports: {} };
  (function(module, exports) {
    var root2 = _root;
    var freeExports = exports && !exports.nodeType && exports;
    var freeModule = freeExports && true && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer = moduleExports ? root2.Buffer : void 0, allocUnsafe = Buffer ? Buffer.allocUnsafe : void 0;
    function cloneBuffer2(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
      buffer.copy(result);
      return result;
    }
    module.exports = cloneBuffer2;
  })(_cloneBuffer$1, _cloneBuffer$1.exports);
  _cloneBuffer$1.exports;
  var Uint8Array$2 = _Uint8Array;
  function cloneArrayBuffer$1$1(arrayBuffer) {
    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
    new Uint8Array$2(result).set(new Uint8Array$2(arrayBuffer));
    return result;
  }
  var _cloneArrayBuffer = cloneArrayBuffer$1$1;
  var cloneArrayBuffer$2 = _cloneArrayBuffer;
  function cloneTypedArray$2(typedArray, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer$2(typedArray.buffer) : typedArray.buffer;
    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
  }
  var _cloneTypedArray = cloneTypedArray$2;
  function copyArray$2(source, array) {
    var index = -1, length = source.length;
    array || (array = Array(length));
    while (++index < length) {
      array[index] = source[index];
    }
    return array;
  }
  var _copyArray = copyArray$2;
  var isObject$1$2 = isObject_1;
  var objectCreate = Object.create;
  var baseCreate$1 = /* @__PURE__ */ function() {
    function object() {
    }
    return function(proto) {
      if (!isObject$1$2(proto)) {
        return {};
      }
      if (objectCreate) {
        return objectCreate(proto);
      }
      object.prototype = proto;
      var result = new object();
      object.prototype = void 0;
      return result;
    };
  }();
  var _baseCreate = baseCreate$1;
  var overArg$1 = _overArg;
  var getPrototype$1$1 = overArg$1(Object.getPrototypeOf, Object);
  var _getPrototype = getPrototype$1$1;
  var baseCreate = _baseCreate, getPrototype$2 = _getPrototype, isPrototype$1$1 = _isPrototype;
  function initCloneObject$2(object) {
    return typeof object.constructor == "function" && !isPrototype$1$1(object) ? baseCreate(getPrototype$2(object)) : {};
  }
  var _initCloneObject = initCloneObject$2;
  var assignValue$2 = _assignValue, baseAssignValue$2 = _baseAssignValue;
  function copyObject$6(source, props2, object, customizer) {
    var isNew = !object;
    object || (object = {});
    var index = -1, length = props2.length;
    while (++index < length) {
      var key = props2[index];
      var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
      if (newValue === void 0) {
        newValue = source[key];
      }
      if (isNew) {
        baseAssignValue$2(object, key, newValue);
      } else {
        assignValue$2(object, key, newValue);
      }
    }
    return object;
  }
  var _copyObject = copyObject$6;
  function nativeKeysIn$1(object) {
    var result = [];
    if (object != null) {
      for (var key in Object(object)) {
        result.push(key);
      }
    }
    return result;
  }
  var _nativeKeysIn = nativeKeysIn$1;
  var isObject$7 = isObject_1, isPrototype$2 = _isPrototype, nativeKeysIn = _nativeKeysIn;
  var objectProto$6 = Object.prototype;
  var hasOwnProperty$6 = objectProto$6.hasOwnProperty;
  function baseKeysIn$1(object) {
    if (!isObject$7(object)) {
      return nativeKeysIn(object);
    }
    var isProto = isPrototype$2(object), result = [];
    for (var key in object) {
      if (!(key == "constructor" && (isProto || !hasOwnProperty$6.call(object, key)))) {
        result.push(key);
      }
    }
    return result;
  }
  var _baseKeysIn = baseKeysIn$1;
  var arrayLikeKeys$2 = _arrayLikeKeys, baseKeysIn = _baseKeysIn, isArrayLike$4 = isArrayLike_1;
  function keysIn$4(object) {
    return isArrayLike$4(object) ? arrayLikeKeys$2(object, true) : baseKeysIn(object);
  }
  var keysIn_1 = keysIn$4;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function identity$3(value) {
    return value;
  }
  var identity_1 = identity$3;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function apply$1(func, thisArg, args) {
    switch (args.length) {
      case 0:
        return func.call(thisArg);
      case 1:
        return func.call(thisArg, args[0]);
      case 2:
        return func.call(thisArg, args[0], args[1]);
      case 3:
        return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }
  var _apply = apply$1;
  var apply = _apply;
  var nativeMax$1 = Math.max;
  function overRest$2(func, start2, transform) {
    start2 = nativeMax$1(start2 === void 0 ? func.length - 1 : start2, 0);
    return function() {
      var args = arguments, index = -1, length = nativeMax$1(args.length - start2, 0), array = Array(length);
      while (++index < length) {
        array[index] = args[start2 + index];
      }
      index = -1;
      var otherArgs = Array(start2 + 1);
      while (++index < start2) {
        otherArgs[index] = args[index];
      }
      otherArgs[start2] = transform(array);
      return apply(func, this, otherArgs);
    };
  }
  var _overRest = overRest$2;
  function constant$1(value) {
    return function() {
      return value;
    };
  }
  var constant_1 = constant$1;
  var constant = constant_1, defineProperty = _defineProperty$1, identity$2 = identity_1;
  var baseSetToString$1 = !defineProperty ? identity$2 : function(func, string) {
    return defineProperty(func, "toString", {
      "configurable": true,
      "enumerable": false,
      "value": constant(string),
      "writable": true
    });
  };
  var _baseSetToString = baseSetToString$1;
  var HOT_COUNT = 800, HOT_SPAN = 16;
  var nativeNow = Date.now;
  function shortOut$1(func) {
    var count = 0, lastCalled = 0;
    return function() {
      var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
      lastCalled = stamp;
      if (remaining > 0) {
        if (++count >= HOT_COUNT) {
          return arguments[0];
        }
      } else {
        count = 0;
      }
      return func.apply(void 0, arguments);
    };
  }
  var _shortOut = shortOut$1;
  var baseSetToString = _baseSetToString, shortOut = _shortOut;
  var setToString$2 = shortOut(baseSetToString);
  var _setToString = setToString$2;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var isArrayLike$3 = isArrayLike_1, isObjectLike$7 = isObjectLike_1;
  function isArrayLikeObject$2(value) {
    return isObjectLike$7(value) && isArrayLike$3(value);
  }
  var isArrayLikeObject_1 = isArrayLikeObject$2;
  var identity$1 = identity_1, overRest$1 = _overRest, setToString$1 = _setToString;
  function baseRest$2(func, start2) {
    return setToString$1(overRest$1(func, start2, identity$1), func + "");
  }
  var _baseRest = baseRest$2;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var baseGetTag$5 = _baseGetTag, getPrototype$1 = _getPrototype, isObjectLike$6 = isObjectLike_1;
  var objectTag$3 = "[object Object]";
  var funcProto = Function.prototype, objectProto$5 = Object.prototype;
  var funcToString = funcProto.toString;
  var hasOwnProperty$5 = objectProto$5.hasOwnProperty;
  var objectCtorString = funcToString.call(Object);
  function isPlainObject$2(value) {
    if (!isObjectLike$6(value) || baseGetTag$5(value) != objectTag$3) {
      return false;
    }
    var proto = getPrototype$1(value);
    if (proto === null) {
      return true;
    }
    var Ctor = hasOwnProperty$5.call(proto, "constructor") && proto.constructor;
    return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
  }
  var isPlainObject_1 = isPlainObject$2;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var eq$2 = eq_1, isArrayLike$2 = isArrayLike_1, isIndex$2 = _isIndex, isObject$6 = isObject_1;
  function isIterateeCall$1(value, index, object) {
    if (!isObject$6(object)) {
      return false;
    }
    var type = _typeof$1(index);
    if (type == "number" ? isArrayLike$2(object) && isIndex$2(index, object.length) : type == "string" && index in object) {
      return eq$2(object[index], value);
    }
    return false;
  }
  var _isIterateeCall = isIterateeCall$1;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var defaultConfig = {
    classPrefix: "t",
    animation: {
      include: ["ripple", "expand", "fade"],
      exclude: []
    },
    calendar: {
      firstDayOfWeek: 1,
      fillWithZero: true,
      controllerConfig: void 0
    },
    icon: {},
    input: {
      autocomplete: ""
    },
    dialog: {
      closeOnEscKeydown: true,
      closeOnOverlayClick: true,
      confirmBtnTheme: {
        "default": "primary",
        info: "primary",
        warning: "primary",
        danger: "primary",
        success: "primary"
      }
    },
    message: {},
    popconfirm: {
      confirmBtnTheme: {
        "default": "primary",
        warning: "primary",
        danger: "primary"
      }
    },
    table: {
      expandIcon: void 0,
      sortIcon: void 0,
      filterIcon: void 0,
      treeExpandAndFoldIcon: void 0,
      hideSortTips: false,
      size: "medium"
    },
    select: {
      clearIcon: void 0,
      filterable: false
    },
    drawer: {
      closeOnEscKeydown: true,
      closeOnOverlayClick: true,
      size: "small"
    },
    tree: {
      folderIcon: void 0
    },
    datePicker: {
      firstDayOfWeek: 1
    },
    steps: {
      checkIcon: void 0,
      errorIcon: void 0
    },
    tag: {
      closeIcon: void 0
    },
    form: {
      requiredMark: void 0
    }
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var zhCn = {
    pagination: {
      itemsPerPage: "{size} 条/页",
      jumpTo: "跳至",
      page: "页",
      total: "共 {total} 条数据"
    },
    cascader: {
      empty: "暂无数据",
      loadingText: "加载中",
      placeholder: "请选择"
    },
    calendar: {
      yearSelection: "{year} 年",
      monthSelection: "{month} 月",
      yearRadio: "年",
      monthRadio: "月",
      hideWeekend: "隐藏周末",
      showWeekend: "显示周末",
      today: "今天",
      thisMonth: "本月",
      week: "一,二,三,四,五,六,日",
      cellMonth: "1 月,2 月,3 月,4 月,5 月,6 月,7 月,8 月,9 月,10 月,11 月,12 月"
    },
    transfer: {
      title: "{checked} / {total} 项",
      empty: "暂无数据",
      placeholder: "请输入关键词搜索"
    },
    timePicker: {
      dayjsLocale: "zh-cn",
      now: "此刻",
      confirm: "确定",
      anteMeridiem: "上午",
      postMeridiem: "下午",
      placeholder: "选择时间"
    },
    dialog: {
      confirm: "确认",
      cancel: "取消"
    },
    drawer: {
      confirm: "确认",
      cancel: "取消"
    },
    popconfirm: {
      confirm: {
        content: "确定"
      },
      cancel: {
        content: "取消"
      }
    },
    table: {
      empty: "暂无数据",
      loadingText: "正在加载中，请稍后",
      loadingMoreText: "点击加载更多",
      filterInputPlaceholder: "请输入内容（无默认值）",
      sortAscendingOperationText: "点击升序",
      sortCancelOperationText: "点击取消排序",
      sortDescendingOperationText: "点击降序",
      clearFilterResultButtonText: "清空筛选",
      columnConfigButtonText: "列配置",
      columnConfigTitleText: "表格列配置",
      columnConfigDescriptionText: "请选择需要在表格中显示的数据列",
      confirmText: "确认",
      cancelText: "取消",
      resetText: "重置",
      selectAllText: "全选",
      searchResultText: "搜索“{result}”，找到 {count} 条结果"
    },
    select: {
      empty: "暂无数据",
      loadingText: "加载中",
      placeholder: "请选择"
    },
    tree: {
      empty: "暂无数据"
    },
    treeSelect: {
      empty: "暂无数据",
      loadingText: "加载中",
      placeholder: "请选择"
    },
    datePicker: {
      dayjsLocale: "zh-cn",
      placeholder: {
        date: "请选择日期",
        month: "请选择月份",
        year: "请选择年份",
        quarter: "请选择季度",
        week: "请选择周"
      },
      weekdays: ["一", "二", "三", "四", "五", "六", "日"],
      months: ["1 月", "2 月", "3 月", "4 月", "5 月", "6 月", "7 月", "8 月", "9 月", "10 月", "11 月", "12 月"],
      quarters: ["一季度", "二季度", "三季度", "四季度"],
      rangeSeparator: " - ",
      direction: "ltr",
      format: "YYYY-MM-DD",
      dayAriaLabel: "日",
      weekAbbreviation: "周",
      yearAriaLabel: "年",
      monthAriaLabel: "月",
      confirm: "确定",
      selectTime: "选择时间",
      selectDate: "选择日期",
      nextYear: "下一年",
      preYear: "上一年",
      nextMonth: "下个月",
      preMonth: "上个月",
      preDecade: "上个十年",
      nextDecade: "下个十年",
      now: "当前"
    },
    upload: {
      sizeLimitMessage: "文件大小不能超过 {sizeLimit}",
      cancelUploadText: "取消上传",
      triggerUploadText: {
        fileInput: "选择文件",
        image: "点击上传图片",
        normal: "点击上传",
        reupload: "重新选择",
        continueUpload: "继续选择",
        "delete": "删除",
        uploading: "上传中"
      },
      dragger: {
        dragDropText: "释放鼠标",
        draggingText: "拖拽到此区域",
        clickAndDragText: "点击上方“选择文件”或将文件拖拽到此区域"
      },
      file: {
        fileNameText: "文件名",
        fileSizeText: "文件大小",
        fileStatusText: "状态",
        fileOperationText: "操作",
        fileOperationDateText: "上传日期"
      },
      progress: {
        uploadingText: "上传中",
        waitingText: "待上传",
        failText: "上传失败",
        successText: "上传成功"
      }
    },
    form: {
      errorMessage: {
        date: "请输入正确的${name}",
        url: "请输入正确的${name}",
        required: "${name}必填",
        max: "${name}字符长度不能超过 ${validate} 个字符，一个中文等于两个字符",
        min: "${name}字符长度不能少于 ${validate} 个字符，一个中文等于两个字符",
        len: "${name}字符长度必须是 ${validate}",
        "enum": "${name}只能是${validate}等",
        idcard: "请输入正确的${name}",
        telnumber: "请输入正确的${name}",
        pattern: "请输入正确的${name}",
        validator: "${name}不符合要求",
        "boolean": "${name}数据类型必须是布尔类型",
        number: "${name}必须是数字"
      }
    },
    input: {
      placeholder: "请输入"
    },
    list: {
      loadingText: "正在加载中，请稍等",
      loadingMoreText: "点击加载更多"
    },
    alert: {
      expandText: "展开更多",
      collapseText: "收起"
    },
    anchor: {
      copySuccessText: "链接复制成功",
      copyText: "复制链接"
    },
    colorPicker: {
      swatchColorTitle: "系统预设颜色",
      recentColorTitle: "最近使用颜色",
      clearConfirmText: "确定清空最近使用的颜色吗？"
    },
    guide: {
      finishButtonProps: {
        content: "完成",
        theme: "primary"
      },
      nextButtonProps: {
        content: "下一步",
        theme: "primary"
      },
      skipButtonProps: {
        content: "跳过",
        theme: "default"
      },
      prevButtonProps: {
        content: "上一步",
        theme: "default"
      }
    },
    image: {
      errorText: "图片无法显示",
      loadingText: "图片加载中"
    },
    imageViewer: {
      errorText: "图片加载失败，可尝试重新加载",
      mirrorTipText: "镜像",
      rotateTipText: "旋转",
      originalSizeTipText: "原始大小"
    },
    typography: {
      expandText: "展开",
      collapseText: "收起",
      copiedText: "复制成功"
    }
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function createBaseFor$1(fromRight) {
    return function(object, iteratee, keysFunc) {
      var index = -1, iterable = Object(object), props2 = keysFunc(object), length = props2.length;
      while (length--) {
        var key = props2[fromRight ? length : ++index];
        if (iteratee(iterable[key], key, iterable) === false) {
          break;
        }
      }
      return object;
    };
  }
  var _createBaseFor = createBaseFor$1;
  var createBaseFor = _createBaseFor;
  var baseFor$1 = createBaseFor();
  var _baseFor = baseFor$1;
  var baseAssignValue$1 = _baseAssignValue, eq$1 = eq_1;
  function assignMergeValue$2(object, key, value) {
    if (value !== void 0 && !eq$1(object[key], value) || value === void 0 && !(key in object)) {
      baseAssignValue$1(object, key, value);
    }
  }
  var _assignMergeValue = assignMergeValue$2;
  function safeGet$2(object, key) {
    if (key === "constructor" && typeof object[key] === "function") {
      return;
    }
    if (key == "__proto__") {
      return;
    }
    return object[key];
  }
  var _safeGet = safeGet$2;
  var copyObject$5 = _copyObject, keysIn$1$1 = keysIn_1;
  function toPlainObject$1(value) {
    return copyObject$5(value, keysIn$1$1(value));
  }
  var toPlainObject_1 = toPlainObject$1;
  var assignMergeValue$1 = _assignMergeValue, cloneBuffer$1 = _cloneBuffer$1.exports, cloneTypedArray$1 = _cloneTypedArray, copyArray$1 = _copyArray, initCloneObject$1 = _initCloneObject, isArguments$3 = isArguments_1, isArray$9 = isArray_1, isArrayLikeObject$1 = isArrayLikeObject_1, isBuffer$3 = isBuffer$5.exports, isFunction = isFunction_1, isObject$1$1 = isObject_1, isPlainObject$1 = isPlainObject_1, isTypedArray$2 = isTypedArray_1, safeGet$1 = _safeGet, toPlainObject = toPlainObject_1;
  function baseMergeDeep$1(object, source, key, srcIndex, mergeFunc, customizer, stack) {
    var objValue = safeGet$1(object, key), srcValue = safeGet$1(source, key), stacked = stack.get(srcValue);
    if (stacked) {
      assignMergeValue$1(object, key, stacked);
      return;
    }
    var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : void 0;
    var isCommon = newValue === void 0;
    if (isCommon) {
      var isArr = isArray$9(srcValue), isBuff = !isArr && isBuffer$3(srcValue), isTyped = !isArr && !isBuff && isTypedArray$2(srcValue);
      newValue = srcValue;
      if (isArr || isBuff || isTyped) {
        if (isArray$9(objValue)) {
          newValue = objValue;
        } else if (isArrayLikeObject$1(objValue)) {
          newValue = copyArray$1(objValue);
        } else if (isBuff) {
          isCommon = false;
          newValue = cloneBuffer$1(srcValue, true);
        } else if (isTyped) {
          isCommon = false;
          newValue = cloneTypedArray$1(srcValue, true);
        } else {
          newValue = [];
        }
      } else if (isPlainObject$1(srcValue) || isArguments$3(srcValue)) {
        newValue = objValue;
        if (isArguments$3(objValue)) {
          newValue = toPlainObject(objValue);
        } else if (!isObject$1$1(objValue) || isFunction(objValue)) {
          newValue = initCloneObject$1(srcValue);
        }
      } else {
        isCommon = false;
      }
    }
    if (isCommon) {
      stack.set(srcValue, newValue);
      mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
      stack["delete"](srcValue);
    }
    assignMergeValue$1(object, key, newValue);
  }
  var _baseMergeDeep = baseMergeDeep$1;
  var Stack$3 = _Stack, assignMergeValue = _assignMergeValue, baseFor$2 = _baseFor, baseMergeDeep = _baseMergeDeep, isObject$5 = isObject_1, keysIn$3 = keysIn_1, safeGet = _safeGet;
  function baseMerge$2(object, source, srcIndex, customizer, stack) {
    if (object === source) {
      return;
    }
    baseFor$2(source, function(srcValue, key) {
      stack || (stack = new Stack$3());
      if (isObject$5(srcValue)) {
        baseMergeDeep(object, source, key, srcIndex, baseMerge$2, customizer, stack);
      } else {
        var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : void 0;
        if (newValue === void 0) {
          newValue = srcValue;
        }
        assignMergeValue(object, key, newValue);
      }
    }, keysIn$3);
  }
  var _baseMerge = baseMerge$2;
  var baseRest$1 = _baseRest, isIterateeCall = _isIterateeCall;
  function createAssigner$2(assigner) {
    return baseRest$1(function(object, sources) {
      var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
      customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        customizer = length < 3 ? void 0 : customizer;
        length = 1;
      }
      object = Object(object);
      while (++index < length) {
        var source = sources[index];
        if (source) {
          assigner(object, source, index, customizer);
        }
      }
      return object;
    });
  }
  var _createAssigner = createAssigner$2;
  var baseMerge$1 = _baseMerge, createAssigner$1 = _createAssigner;
  var merge = createAssigner$1(function(object, source, srcIndex) {
    baseMerge$1(object, source, srcIndex);
  });
  var merge_1 = merge;
  var baseMerge = _baseMerge, createAssigner = _createAssigner;
  createAssigner(function(object, source, srcIndex, customizer) {
    baseMerge(object, source, srcIndex, customizer);
  });
  var EAnimationType = /* @__PURE__ */ function(EAnimationType2) {
    EAnimationType2["ripple"] = "ripple";
    EAnimationType2["expand"] = "expand";
    EAnimationType2["fade"] = "fade";
    return EAnimationType2;
  }(EAnimationType || {});
  var defaultGlobalConfig = merge_1(defaultConfig, zhCn);
  var configProviderInjectKey = Symbol("configProvide");
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var getNative$3 = _getNative, root$4 = _root;
  var Set$2 = getNative$3(root$4, "Set");
  var _Set = Set$2;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var overArg = _overArg;
  var nativeKeys$1 = overArg(Object.keys, Object);
  var _nativeKeys = nativeKeys$1;
  var isPrototype$1 = _isPrototype, nativeKeys = _nativeKeys;
  var objectProto$4 = Object.prototype;
  var hasOwnProperty$4 = objectProto$4.hasOwnProperty;
  function baseKeys$2(object) {
    if (!isPrototype$1(object)) {
      return nativeKeys(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty$4.call(object, key) && key != "constructor") {
        result.push(key);
      }
    }
    return result;
  }
  var _baseKeys = baseKeys$2;
  var getNative$2 = _getNative, root$2 = _root;
  var DataView$1 = getNative$2(root$2, "DataView");
  var _DataView = DataView$1;
  var getNative$1 = _getNative, root$1$1 = _root;
  var Promise$2 = getNative$1(root$1$1, "Promise");
  var _Promise = Promise$2;
  var getNative = _getNative, root$3 = _root;
  var WeakMap$1 = getNative(root$3, "WeakMap");
  var _WeakMap = WeakMap$1;
  var DataView = _DataView, Map$1 = _Map, Promise$1 = _Promise, Set$1 = _Set, WeakMap$2 = _WeakMap, baseGetTag$4 = _baseGetTag, toSource = _toSource;
  var mapTag$4 = "[object Map]", objectTag$2 = "[object Object]", promiseTag = "[object Promise]", setTag$4 = "[object Set]", weakMapTag$1 = "[object WeakMap]";
  var dataViewTag$3 = "[object DataView]";
  var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map$1), promiseCtorString = toSource(Promise$1), setCtorString = toSource(Set$1), weakMapCtorString = toSource(WeakMap$2);
  var getTag$4 = baseGetTag$4;
  if (DataView && getTag$4(new DataView(new ArrayBuffer(1))) != dataViewTag$3 || Map$1 && getTag$4(new Map$1()) != mapTag$4 || Promise$1 && getTag$4(Promise$1.resolve()) != promiseTag || Set$1 && getTag$4(new Set$1()) != setTag$4 || WeakMap$2 && getTag$4(new WeakMap$2()) != weakMapTag$1) {
    getTag$4 = function getTag2(value) {
      var result = baseGetTag$4(value), Ctor = result == objectTag$2 ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString:
            return dataViewTag$3;
          case mapCtorString:
            return mapTag$4;
          case promiseCtorString:
            return promiseTag;
          case setCtorString:
            return setTag$4;
          case weakMapCtorString:
            return weakMapTag$1;
        }
      }
      return result;
    };
  }
  var _getTag = getTag$4;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function arrayPush$3(array, values) {
    var index = -1, length = values.length, offset2 = array.length;
    while (++index < length) {
      array[offset2 + index] = values[index];
    }
    return array;
  }
  var _arrayPush = arrayPush$3;
  function arrayFilter$1(array, predicate) {
    var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }
  var _arrayFilter = arrayFilter$1;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var arrayLikeKeys = _arrayLikeKeys, baseKeys$1 = _baseKeys, isArrayLike$1 = isArrayLike_1;
  function keys$3(object) {
    return isArrayLike$1(object) ? arrayLikeKeys(object) : baseKeys$1(object);
  }
  var keys_1 = keys$3;
  var arrayPush$1 = _arrayPush, isArray$1$2 = isArray_1;
  function baseGetAllKeys$2(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray$1$2(object) ? result : arrayPush$1(result, symbolsFunc(object));
  }
  var _baseGetAllKeys = baseGetAllKeys$2;
  function stubArray$2() {
    return [];
  }
  var stubArray_1 = stubArray$2;
  var arrayFilter = _arrayFilter, stubArray$1 = stubArray_1;
  var objectProto$1$1 = Object.prototype;
  var propertyIsEnumerable = objectProto$1$1.propertyIsEnumerable;
  var nativeGetSymbols$1 = Object.getOwnPropertySymbols;
  var getSymbols$3 = !nativeGetSymbols$1 ? stubArray$1 : function(object) {
    if (object == null) {
      return [];
    }
    object = Object(object);
    return arrayFilter(nativeGetSymbols$1(object), function(symbol) {
      return propertyIsEnumerable.call(object, symbol);
    });
  };
  var _getSymbols = getSymbols$3;
  var baseGetAllKeys$1 = _baseGetAllKeys, getSymbols$2 = _getSymbols, keys$2 = keys_1;
  function getAllKeys$1(object) {
    return baseGetAllKeys$1(object, keys$2, getSymbols$2);
  }
  var _getAllKeys = getAllKeys$1;
  function arrayEach$1(array, iteratee) {
    var index = -1, length = array == null ? 0 : array.length;
    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }
  var _arrayEach = arrayEach$1;
  var copyObject$3 = _copyObject, keys$1$1 = keys_1;
  function baseAssign$1(object, source) {
    return object && copyObject$3(source, keys$1$1(source), object);
  }
  var _baseAssign = baseAssign$1;
  var copyObject$2 = _copyObject, keysIn$2 = keysIn_1;
  function baseAssignIn$1(object, source) {
    return object && copyObject$2(source, keysIn$2(source), object);
  }
  var _baseAssignIn = baseAssignIn$1;
  var copyObject$1 = _copyObject, getSymbols$1 = _getSymbols;
  function copySymbols$1(source, object) {
    return copyObject$1(source, getSymbols$1(source), object);
  }
  var _copySymbols = copySymbols$1;
  var arrayPush$2 = _arrayPush, getPrototype = _getPrototype, getSymbols = _getSymbols, stubArray = stubArray_1;
  var nativeGetSymbols = Object.getOwnPropertySymbols;
  var getSymbolsIn$2 = !nativeGetSymbols ? stubArray : function(object) {
    var result = [];
    while (object) {
      arrayPush$2(result, getSymbols(object));
      object = getPrototype(object);
    }
    return result;
  };
  var _getSymbolsIn = getSymbolsIn$2;
  var copyObject$4 = _copyObject, getSymbolsIn$1 = _getSymbolsIn;
  function copySymbolsIn$1(source, object) {
    return copyObject$4(source, getSymbolsIn$1(source), object);
  }
  var _copySymbolsIn = copySymbolsIn$1;
  var baseGetAllKeys = _baseGetAllKeys, getSymbolsIn = _getSymbolsIn, keysIn$1 = keysIn_1;
  function getAllKeysIn$1(object) {
    return baseGetAllKeys(object, keysIn$1, getSymbolsIn);
  }
  var _getAllKeysIn = getAllKeysIn$1;
  var objectProto$3 = Object.prototype;
  var hasOwnProperty$3 = objectProto$3.hasOwnProperty;
  function initCloneArray$1(array) {
    var length = array.length, result = new array.constructor(length);
    if (length && typeof array[0] == "string" && hasOwnProperty$3.call(array, "index")) {
      result.index = array.index;
      result.input = array.input;
    }
    return result;
  }
  var _initCloneArray = initCloneArray$1;
  var cloneArrayBuffer$1 = _cloneArrayBuffer;
  function cloneDataView$1(dataView, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer$1(dataView.buffer) : dataView.buffer;
    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
  }
  var _cloneDataView = cloneDataView$1;
  var reFlags = /\w*$/;
  function cloneRegExp$1(regexp) {
    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
    result.lastIndex = regexp.lastIndex;
    return result;
  }
  var _cloneRegExp = cloneRegExp$1;
  var _Symbol$3 = _Symbol$2$1;
  var symbolProto$2 = _Symbol$3 ? _Symbol$3.prototype : void 0, symbolValueOf$1 = symbolProto$2 ? symbolProto$2.valueOf : void 0;
  function cloneSymbol$1(symbol) {
    return symbolValueOf$1 ? Object(symbolValueOf$1.call(symbol)) : {};
  }
  var _cloneSymbol = cloneSymbol$1;
  var cloneArrayBuffer = _cloneArrayBuffer, cloneDataView = _cloneDataView, cloneRegExp = _cloneRegExp, cloneSymbol = _cloneSymbol, cloneTypedArray = _cloneTypedArray;
  var boolTag$1$1 = "[object Boolean]", dateTag$1 = "[object Date]", mapTag$2 = "[object Map]", numberTag$1$1 = "[object Number]", regexpTag$1 = "[object RegExp]", setTag$2 = "[object Set]", stringTag$1$1 = "[object String]", symbolTag$1$1 = "[object Symbol]";
  var arrayBufferTag$1 = "[object ArrayBuffer]", dataViewTag$1 = "[object DataView]", float32Tag$1 = "[object Float32Array]", float64Tag$1 = "[object Float64Array]", int8Tag$1 = "[object Int8Array]", int16Tag$1 = "[object Int16Array]", int32Tag$1 = "[object Int32Array]", uint8Tag$1 = "[object Uint8Array]", uint8ClampedTag$1 = "[object Uint8ClampedArray]", uint16Tag$1 = "[object Uint16Array]", uint32Tag$1 = "[object Uint32Array]";
  function initCloneByTag$1(object, tag, isDeep) {
    var Ctor = object.constructor;
    switch (tag) {
      case arrayBufferTag$1:
        return cloneArrayBuffer(object);
      case boolTag$1$1:
      case dateTag$1:
        return new Ctor(+object);
      case dataViewTag$1:
        return cloneDataView(object, isDeep);
      case float32Tag$1:
      case float64Tag$1:
      case int8Tag$1:
      case int16Tag$1:
      case int32Tag$1:
      case uint8Tag$1:
      case uint8ClampedTag$1:
      case uint16Tag$1:
      case uint32Tag$1:
        return cloneTypedArray(object, isDeep);
      case mapTag$2:
        return new Ctor();
      case numberTag$1$1:
      case stringTag$1$1:
        return new Ctor(object);
      case regexpTag$1:
        return cloneRegExp(object);
      case setTag$2:
        return new Ctor();
      case symbolTag$1$1:
        return cloneSymbol(object);
    }
  }
  var _initCloneByTag = initCloneByTag$1;
  var getTag$2 = _getTag, isObjectLike$1$1 = isObjectLike_1;
  var mapTag$1$1 = "[object Map]";
  function baseIsMap$1(value) {
    return isObjectLike$1$1(value) && getTag$2(value) == mapTag$1$1;
  }
  var _baseIsMap = baseIsMap$1;
  var baseIsMap = _baseIsMap, baseUnary$1 = _baseUnary, nodeUtil$1 = _nodeUtil$1.exports;
  var nodeIsMap = nodeUtil$1 && nodeUtil$1.isMap;
  var isMap$1 = nodeIsMap ? baseUnary$1(nodeIsMap) : baseIsMap;
  var isMap_1 = isMap$1;
  var getTag$1$1 = _getTag, isObjectLike$5 = isObjectLike_1;
  var setTag$1$1 = "[object Set]";
  function baseIsSet$1(value) {
    return isObjectLike$5(value) && getTag$1$1(value) == setTag$1$1;
  }
  var _baseIsSet = baseIsSet$1;
  var baseIsSet = _baseIsSet, baseUnary$2 = _baseUnary, nodeUtil = _nodeUtil$1.exports;
  var nodeIsSet = nodeUtil && nodeUtil.isSet;
  var isSet$1 = nodeIsSet ? baseUnary$2(nodeIsSet) : baseIsSet;
  var isSet_1 = isSet$1;
  var Stack$2 = _Stack, arrayEach = _arrayEach, assignValue$1 = _assignValue, baseAssign = _baseAssign, baseAssignIn = _baseAssignIn, cloneBuffer = _cloneBuffer$1.exports, copyArray = _copyArray, copySymbols = _copySymbols, copySymbolsIn = _copySymbolsIn, getAllKeys$2 = _getAllKeys, getAllKeysIn$2 = _getAllKeysIn, getTag$3 = _getTag, initCloneArray = _initCloneArray, initCloneByTag = _initCloneByTag, initCloneObject = _initCloneObject, isArray$8 = isArray_1, isBuffer$2 = isBuffer$5.exports, isMap = isMap_1, isObject$4 = isObject_1, isSet = isSet_1, keys$4 = keys_1, keysIn = keysIn_1;
  var CLONE_DEEP_FLAG$2 = 1, CLONE_FLAT_FLAG$1 = 2, CLONE_SYMBOLS_FLAG$2 = 4;
  var argsTag$1 = "[object Arguments]", arrayTag$1 = "[object Array]", boolTag$2 = "[object Boolean]", dateTag$2 = "[object Date]", errorTag$1 = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag$3 = "[object Map]", numberTag$2 = "[object Number]", objectTag$1 = "[object Object]", regexpTag$2 = "[object RegExp]", setTag$3 = "[object Set]", stringTag$2 = "[object String]", symbolTag$2 = "[object Symbol]", weakMapTag = "[object WeakMap]";
  var arrayBufferTag$2 = "[object ArrayBuffer]", dataViewTag$2 = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
  var cloneableTags = {};
  cloneableTags[argsTag$1] = cloneableTags[arrayTag$1] = cloneableTags[arrayBufferTag$2] = cloneableTags[dataViewTag$2] = cloneableTags[boolTag$2] = cloneableTags[dateTag$2] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag$3] = cloneableTags[numberTag$2] = cloneableTags[objectTag$1] = cloneableTags[regexpTag$2] = cloneableTags[setTag$3] = cloneableTags[stringTag$2] = cloneableTags[symbolTag$2] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag$1] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
  function baseClone$2(value, bitmask, customizer, key, object, stack) {
    var result, isDeep = bitmask & CLONE_DEEP_FLAG$2, isFlat = bitmask & CLONE_FLAT_FLAG$1, isFull = bitmask & CLONE_SYMBOLS_FLAG$2;
    if (customizer) {
      result = object ? customizer(value, key, object, stack) : customizer(value);
    }
    if (result !== void 0) {
      return result;
    }
    if (!isObject$4(value)) {
      return value;
    }
    var isArr = isArray$8(value);
    if (isArr) {
      result = initCloneArray(value);
      if (!isDeep) {
        return copyArray(value, result);
      }
    } else {
      var tag = getTag$3(value), isFunc = tag == funcTag || tag == genTag;
      if (isBuffer$2(value)) {
        return cloneBuffer(value, isDeep);
      }
      if (tag == objectTag$1 || tag == argsTag$1 || isFunc && !object) {
        result = isFlat || isFunc ? {} : initCloneObject(value);
        if (!isDeep) {
          return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
        }
      } else {
        if (!cloneableTags[tag]) {
          return object ? value : {};
        }
        result = initCloneByTag(value, tag, isDeep);
      }
    }
    stack || (stack = new Stack$2());
    var stacked = stack.get(value);
    if (stacked) {
      return stacked;
    }
    stack.set(value, result);
    if (isSet(value)) {
      value.forEach(function(subValue) {
        result.add(baseClone$2(subValue, bitmask, customizer, subValue, value, stack));
      });
    } else if (isMap(value)) {
      value.forEach(function(subValue, key2) {
        result.set(key2, baseClone$2(subValue, bitmask, customizer, key2, value, stack));
      });
    }
    var keysFunc = isFull ? isFlat ? getAllKeysIn$2 : getAllKeys$2 : isFlat ? keysIn : keys$4;
    var props2 = isArr ? void 0 : keysFunc(value);
    arrayEach(props2 || value, function(subValue, key2) {
      if (props2) {
        key2 = subValue;
        subValue = value[key2];
      }
      assignValue$1(result, key2, baseClone$2(subValue, bitmask, customizer, key2, value, stack));
    });
    return result;
  }
  var _baseClone = baseClone$2;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var HASH_UNDEFINED = "__lodash_hash_undefined__";
  function setCacheAdd$1(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
  }
  var _setCacheAdd = setCacheAdd$1;
  function setCacheHas$1(value) {
    return this.__data__.has(value);
  }
  var _setCacheHas = setCacheHas$1;
  var MapCache$1 = _MapCache, setCacheAdd = _setCacheAdd, setCacheHas = _setCacheHas;
  function SetCache$2(values) {
    var index = -1, length = values == null ? 0 : values.length;
    this.__data__ = new MapCache$1();
    while (++index < length) {
      this.add(values[index]);
    }
  }
  SetCache$2.prototype.add = SetCache$2.prototype.push = setCacheAdd;
  SetCache$2.prototype.has = setCacheHas;
  var _SetCache = SetCache$2;
  function cacheHas$2(cache, key) {
    return cache.has(key);
  }
  var _cacheHas = cacheHas$2;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function setToArray$1(set) {
    var index = -1, result = Array(set.size);
    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }
  var _setToArray = setToArray$1;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function arraySome$1(array, predicate) {
    var index = -1, length = array == null ? 0 : array.length;
    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }
  var _arraySome = arraySome$1;
  var SetCache$1 = _SetCache, arraySome = _arraySome, cacheHas$1 = _cacheHas;
  var COMPARE_PARTIAL_FLAG$3 = 1, COMPARE_UNORDERED_FLAG$1$1 = 2;
  function equalArrays$2(array, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3, arrLength = array.length, othLength = other.length;
    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
      return false;
    }
    var arrStacked = stack.get(array);
    var othStacked = stack.get(other);
    if (arrStacked && othStacked) {
      return arrStacked == other && othStacked == array;
    }
    var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$1$1 ? new SetCache$1() : void 0;
    stack.set(array, other);
    stack.set(other, array);
    while (++index < arrLength) {
      var arrValue = array[index], othValue = other[index];
      if (customizer) {
        var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
      }
      if (compared !== void 0) {
        if (compared) {
          continue;
        }
        result = false;
        break;
      }
      if (seen) {
        if (!arraySome(other, function(othValue2, othIndex) {
          if (!cacheHas$1(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
            return seen.push(othIndex);
          }
        })) {
          result = false;
          break;
        }
      } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
        result = false;
        break;
      }
    }
    stack["delete"](array);
    stack["delete"](other);
    return result;
  }
  var _equalArrays = equalArrays$2;
  function mapToArray$1(map) {
    var index = -1, result = Array(map.size);
    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }
  var _mapToArray = mapToArray$1;
  var _Symbol$2 = _Symbol$2$1, Uint8Array = _Uint8Array, eq = eq_1, equalArrays$1 = _equalArrays, mapToArray = _mapToArray, setToArray = _setToArray;
  var COMPARE_PARTIAL_FLAG$2 = 1, COMPARE_UNORDERED_FLAG$2 = 2;
  var boolTag$1 = "[object Boolean]", dateTag = "[object Date]", errorTag = "[object Error]", mapTag$1 = "[object Map]", numberTag$1 = "[object Number]", regexpTag = "[object RegExp]", setTag$1 = "[object Set]", stringTag$1 = "[object String]", symbolTag$1 = "[object Symbol]";
  var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]";
  var symbolProto$1 = _Symbol$2 ? _Symbol$2.prototype : void 0, symbolValueOf = symbolProto$1 ? symbolProto$1.valueOf : void 0;
  function equalByTag$1(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch (tag) {
      case dataViewTag:
        if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
          return false;
        }
        object = object.buffer;
        other = other.buffer;
      case arrayBufferTag:
        if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
          return false;
        }
        return true;
      case boolTag$1:
      case dateTag:
      case numberTag$1:
        return eq(+object, +other);
      case errorTag:
        return object.name == other.name && object.message == other.message;
      case regexpTag:
      case stringTag$1:
        return object == other + "";
      case mapTag$1:
        var convert = mapToArray;
      case setTag$1:
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2;
        convert || (convert = setToArray);
        if (object.size != other.size && !isPartial) {
          return false;
        }
        var stacked = stack.get(object);
        if (stacked) {
          return stacked == other;
        }
        bitmask |= COMPARE_UNORDERED_FLAG$2;
        stack.set(object, other);
        var result = equalArrays$1(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
        stack["delete"](object);
        return result;
      case symbolTag$1:
        if (symbolValueOf) {
          return symbolValueOf.call(object) == symbolValueOf.call(other);
        }
    }
    return false;
  }
  var _equalByTag = equalByTag$1;
  var getAllKeys = _getAllKeys;
  var COMPARE_PARTIAL_FLAG$1$1 = 1;
  var objectProto$1 = Object.prototype;
  var hasOwnProperty$1 = objectProto$1.hasOwnProperty;
  function equalObjects$1(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1$1, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
    if (objLength != othLength && !isPartial) {
      return false;
    }
    var index = objLength;
    while (index--) {
      var key = objProps[index];
      if (!(isPartial ? key in other : hasOwnProperty$1.call(other, key))) {
        return false;
      }
    }
    var objStacked = stack.get(object);
    var othStacked = stack.get(other);
    if (objStacked && othStacked) {
      return objStacked == other && othStacked == object;
    }
    var result = true;
    stack.set(object, other);
    stack.set(other, object);
    var skipCtor = isPartial;
    while (++index < objLength) {
      key = objProps[index];
      var objValue = object[key], othValue = other[key];
      if (customizer) {
        var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
      }
      if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
        result = false;
        break;
      }
      skipCtor || (skipCtor = key == "constructor");
    }
    if (result && !skipCtor) {
      var objCtor = object.constructor, othCtor = other.constructor;
      if (objCtor != othCtor && "constructor" in object && "constructor" in other && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
        result = false;
      }
    }
    stack["delete"](object);
    stack["delete"](other);
    return result;
  }
  var _equalObjects = equalObjects$1;
  var Stack$1 = _Stack, equalArrays = _equalArrays, equalByTag = _equalByTag, equalObjects = _equalObjects, getTag$1 = _getTag, isArray$7 = isArray_1, isBuffer$1 = isBuffer$5.exports, isTypedArray$1 = isTypedArray_1;
  var COMPARE_PARTIAL_FLAG$4 = 1;
  var argsTag = "[object Arguments]", arrayTag = "[object Array]", objectTag = "[object Object]";
  var objectProto$2 = Object.prototype;
  var hasOwnProperty$2 = objectProto$2.hasOwnProperty;
  function baseIsEqualDeep$1(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = isArray$7(object), othIsArr = isArray$7(other), objTag = objIsArr ? arrayTag : getTag$1(object), othTag = othIsArr ? arrayTag : getTag$1(other);
    objTag = objTag == argsTag ? objectTag : objTag;
    othTag = othTag == argsTag ? objectTag : othTag;
    var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
    if (isSameTag && isBuffer$1(object)) {
      if (!isBuffer$1(other)) {
        return false;
      }
      objIsArr = true;
      objIsObj = false;
    }
    if (isSameTag && !objIsObj) {
      stack || (stack = new Stack$1());
      return objIsArr || isTypedArray$1(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }
    if (!(bitmask & COMPARE_PARTIAL_FLAG$4)) {
      var objIsWrapped = objIsObj && hasOwnProperty$2.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty$2.call(other, "__wrapped__");
      if (objIsWrapped || othIsWrapped) {
        var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
        stack || (stack = new Stack$1());
        return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
      }
    }
    if (!isSameTag) {
      return false;
    }
    stack || (stack = new Stack$1());
    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
  }
  var _baseIsEqualDeep = baseIsEqualDeep$1;
  var baseIsEqualDeep = _baseIsEqualDeep, isObjectLike$4 = isObjectLike_1;
  function baseIsEqual$1$1(value, other, bitmask, customizer, stack) {
    if (value === other) {
      return true;
    }
    if (value == null || other == null || !isObjectLike$4(value) && !isObjectLike$4(other)) {
      return value !== value && other !== other;
    }
    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual$1$1, stack);
  }
  var _baseIsEqual = baseIsEqual$1$1;
  var baseIsEqual$2 = _baseIsEqual;
  function isEqual(value, other) {
    return baseIsEqual$2(value, other);
  }
  var isEqual_1 = isEqual;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var baseGetTag$3 = _baseGetTag, isObjectLike$3 = isObjectLike_1;
  var symbolTag = "[object Symbol]";
  function isSymbol$4(value) {
    return _typeof$1(value) == "symbol" || isObjectLike$3(value) && baseGetTag$3(value) == symbolTag;
  }
  var isSymbol_1 = isSymbol$4;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function arrayMap$1$1(array, iteratee) {
    var index = -1, length = array == null ? 0 : array.length, result = Array(length);
    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }
  var _arrayMap = arrayMap$1$1;
  var _Symbol$1 = _Symbol$2$1, arrayMap$3 = _arrayMap, isArray$6 = isArray_1, isSymbol$3 = isSymbol_1;
  var INFINITY$1 = 1 / 0;
  var symbolProto = _Symbol$1 ? _Symbol$1.prototype : void 0, symbolToString = symbolProto ? symbolProto.toString : void 0;
  function baseToString$1(value) {
    if (typeof value == "string") {
      return value;
    }
    if (isArray$6(value)) {
      return arrayMap$3(value, baseToString$1) + "";
    }
    if (isSymbol$3(value)) {
      return symbolToString ? symbolToString.call(value) : "";
    }
    var result = value + "";
    return result == "0" && 1 / value == -INFINITY$1 ? "-0" : result;
  }
  var _baseToString = baseToString$1;
  var baseToString = _baseToString;
  function toString$4(value) {
    return value == null ? "" : baseToString(value);
  }
  var toString_1 = toString$4;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var isArray$1$1 = isArray_1, isSymbol$1 = isSymbol_1;
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/;
  function isKey$1$1(value, object) {
    if (isArray$1$1(value)) {
      return false;
    }
    var type = _typeof$1(value);
    if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol$1(value)) {
      return true;
    }
    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
  }
  var _isKey = isKey$1$1;
  var MapCache = _MapCache;
  var FUNC_ERROR_TEXT$1 = "Expected a function";
  function memoize$1(func, resolver) {
    if (typeof func != "function" || resolver != null && typeof resolver != "function") {
      throw new TypeError(FUNC_ERROR_TEXT$1);
    }
    var memoized = function memoized2() {
      var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized2.cache;
      if (cache.has(key)) {
        return cache.get(key);
      }
      var result = func.apply(this, args);
      memoized2.cache = cache.set(key, result) || cache;
      return result;
    };
    memoized.cache = new (memoize$1.Cache || MapCache)();
    return memoized;
  }
  memoize$1.Cache = MapCache;
  var memoize_1 = memoize$1;
  var memoize = memoize_1;
  var MAX_MEMOIZE_SIZE = 500;
  function memoizeCapped$1(func) {
    var result = memoize(func, function(key) {
      if (cache.size === MAX_MEMOIZE_SIZE) {
        cache.clear();
      }
      return key;
    });
    var cache = result.cache;
    return result;
  }
  var _memoizeCapped = memoizeCapped$1;
  var memoizeCapped = _memoizeCapped;
  var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
  var reEscapeChar = /\\(\\)?/g;
  var stringToPath$1 = memoizeCapped(function(string) {
    var result = [];
    if (string.charCodeAt(0) === 46) {
      result.push("");
    }
    string.replace(rePropName, function(match, number, quote, subString) {
      result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
    });
    return result;
  });
  var _stringToPath = stringToPath$1;
  var isArray$5 = isArray_1, isKey$2 = _isKey, stringToPath = _stringToPath, toString$3 = toString_1;
  function castPath$1$2(value, object) {
    if (isArray$5(value)) {
      return value;
    }
    return isKey$2(value, object) ? [value] : stringToPath(toString$3(value));
  }
  var _castPath = castPath$1$2;
  var isSymbol$2 = isSymbol_1;
  var INFINITY = 1 / 0;
  function toKey$1$2(value) {
    if (typeof value == "string" || isSymbol$2(value)) {
      return value;
    }
    var result = value + "";
    return result == "0" && 1 / value == -INFINITY ? "-0" : result;
  }
  var _toKey = toKey$1$2;
  var castPath$4 = _castPath, toKey$4 = _toKey;
  function baseGet$4(object, path) {
    path = castPath$4(path, object);
    var index = 0, length = path.length;
    while (object != null && index < length) {
      object = object[toKey$4(path[index++])];
    }
    return index && index == length ? object : void 0;
  }
  var _baseGet = baseGet$4;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var baseGet$3 = _baseGet;
  function get$1(object, path, defaultValue) {
    var result = object == null ? void 0 : baseGet$3(object, path);
    return result === void 0 ? defaultValue : result;
  }
  var get_1 = get$1;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function baseHasIn$1(object, key) {
    return object != null && key in Object(object);
  }
  var _baseHasIn = baseHasIn$1;
  var castPath$3 = _castPath, isArguments$2 = isArguments_1, isArray$4 = isArray_1, isIndex$1 = _isIndex, isLength = isLength_1, toKey$3 = _toKey;
  function hasPath$1(object, path, hasFunc) {
    path = castPath$3(path, object);
    var index = -1, length = path.length, result = false;
    while (++index < length) {
      var key = toKey$3(path[index]);
      if (!(result = object != null && hasFunc(object, key))) {
        break;
      }
      object = object[key];
    }
    if (result || ++index != length) {
      return result;
    }
    length = object == null ? 0 : object.length;
    return !!length && isLength(length) && isIndex$1(key, length) && (isArray$4(object) || isArguments$2(object));
  }
  var _hasPath = hasPath$1;
  var baseHasIn = _baseHasIn, hasPath = _hasPath;
  function hasIn$2(object, path) {
    return object != null && hasPath(object, path, baseHasIn);
  }
  var hasIn_1 = hasIn$2;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function baseProperty$1(key) {
    return function(object) {
      return object == null ? void 0 : object[key];
    };
  }
  var _baseProperty = baseProperty$1;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function _arrayWithHoles(r) {
    if (Array.isArray(r)) return r;
  }
  function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
      var e, n, i, u, a = [], f = true, o = false;
      try {
        if (i = (t = t.call(r)).next, 0 === l) {
          if (Object(t) !== t) return;
          f = false;
        } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
      } catch (r2) {
        o = true, n = r2;
      } finally {
        try {
          if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
        } finally {
          if (o) throw n;
        }
      }
      return a;
    }
  }
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _slicedToArray(r, e) {
    return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray$3(r, e) || _nonIterableRest();
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function setStyle$1(el, styles) {
    var keys2 = Object.keys(styles);
    keys2.forEach(function(key) {
      el.style[key] = styles[key];
    });
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function _objectWithoutPropertiesLoose(r, e) {
    if (null == r) return {};
    var t = {};
    for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
      if (e.indexOf(n) >= 0) continue;
      t[n] = r[n];
    }
    return t;
  }
  function _objectWithoutProperties(e, t) {
    if (null == e) return {};
    var o, r, i = _objectWithoutPropertiesLoose(e, t);
    if (Object.getOwnPropertySymbols) {
      var n = Object.getOwnPropertySymbols(e);
      for (r = 0; r < n.length; r++) o = n[r], t.indexOf(o) >= 0 || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
    }
    return i;
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var baseGetTag$2 = _baseGetTag, isArray$3 = isArray_1, isObjectLike$2 = isObjectLike_1;
  var stringTag = "[object String]";
  function isString(value) {
    return typeof value == "string" || !isArray$3(value) && isObjectLike$2(value) && baseGetTag$2(value) == stringTag;
  }
  var isString_1 = isString;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function isUndefined(value) {
    return value === void 0;
  }
  var isUndefined_1 = isUndefined;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var baseGetTag$1 = _baseGetTag, isObjectLike$1 = isObjectLike_1;
  var numberTag = "[object Number]";
  function isNumber(value) {
    return typeof value == "number" || isObjectLike$1(value) && baseGetTag$1(value) == numberTag;
  }
  var isNumber_1 = isNumber;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function getIEVersion() {
    if (typeof navigator === "undefined" || !navigator) return Number.MAX_SAFE_INTEGER;
    var _navigator = navigator, userAgent = _navigator.userAgent;
    var isIE = userAgent.indexOf("compatible") > -1 && userAgent.indexOf("MSIE") > -1;
    var isIE11 = userAgent.indexOf("Trident") > -1 && userAgent.indexOf("rv:11.0") > -1;
    if (isIE) {
      var reIE = new RegExp("MSIE (\\d+\\.\\d+);");
      var match = userAgent.match(reIE);
      if (!match) return -1;
      var fIEVersion = parseFloat(match[1]);
      return fIEVersion < 7 ? 6 : fIEVersion;
    }
    if (isIE11) {
      return 11;
    }
    return Number.MAX_SAFE_INTEGER;
  }
  function getFlexGapPolyFill() {
    var _chromeMatch$, _safariMatch$, _fireFoxMatch$;
    if (typeof navigator === "undefined" || !navigator) return false;
    var ua = navigator.userAgent;
    var chromeMatch = ua.match(/AppleWebKit.+Chrome\/(.+) Safari\/.+/i);
    if (Number(chromeMatch === null || chromeMatch === void 0 || (_chromeMatch$ = chromeMatch[1]) === null || _chromeMatch$ === void 0 ? void 0 : _chromeMatch$.split(".")[0]) < 100) return true;
    var safariMatch = ua.match(/AppleWebKit.+Version\/(.+) Safari\/.+/i);
    if (Number(safariMatch === null || safariMatch === void 0 || (_safariMatch$ = safariMatch[1]) === null || _safariMatch$ === void 0 ? void 0 : _safariMatch$.split(".")[0]) < 12) return true;
    var ieVersion = getIEVersion();
    if (ieVersion <= 11) return true;
    var fireFoxMatch = ua.match(/Firefox\/(.+)/i);
    if (Number(fireFoxMatch === null || fireFoxMatch === void 0 || (_fireFoxMatch$ = fireFoxMatch[1]) === null || _fireFoxMatch$ === void 0 ? void 0 : _fireFoxMatch$.split(".")[0]) < 100) return true;
    return false;
  }
  function getCharacterLength(str, maxCharacter) {
    var hasMaxCharacter = isNumber_1(maxCharacter);
    if (!str || str.length === 0) {
      if (hasMaxCharacter) {
        return {
          length: 0,
          characters: str
        };
      }
      return 0;
    }
    var len = 0;
    for (var i = 0; i < str.length; i++) {
      var currentStringLength = 0;
      if (str.charCodeAt(i) > 127) {
        currentStringLength = 2;
      } else {
        currentStringLength = 1;
      }
      if (hasMaxCharacter && len + currentStringLength > maxCharacter) {
        return {
          length: len,
          characters: str.slice(0, i)
        };
      }
      len += currentStringLength;
    }
    if (hasMaxCharacter) {
      return {
        length: len,
        characters: str
      };
    }
    return len;
  }
  function getUnicodeLength(str) {
    return _toConsumableArray(str !== null && str !== void 0 ? str : "").length;
  }
  function limitUnicodeMaxLength(str, maxLength, oldStr) {
    if (_toConsumableArray(oldStr !== null && oldStr !== void 0 ? oldStr : "").slice().length === maxLength) return oldStr || "";
    return _toConsumableArray(str !== null && str !== void 0 ? str : "").slice(0, maxLength).join("");
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$u(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$u(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$u(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$u(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  function circleAdapter(circleElem) {
    var _window, _window$getComputedSt2, _window2;
    var basicStyle = {};
    if (!circleElem || typeof window === "undefined") {
      return;
    }
    var _window$getComputedSt = (_window = window) === null || _window === void 0 || (_window$getComputedSt2 = _window.getComputedStyle) === null || _window$getComputedSt2 === void 0 ? void 0 : _window$getComputedSt2.call(_window, circleElem), color = _window$getComputedSt.color, fontSize = _window$getComputedSt.fontSize;
    var ua = (_window2 = window) === null || _window2 === void 0 || (_window2 = _window2.navigator) === null || _window2 === void 0 ? void 0 : _window2.userAgent;
    var isSafari = /Safari/.test(ua) && !/Chrome/.test(ua);
    var isIosWechat = /(?=.*iPhone)[?=.*MicroMessenger]/.test(ua) && !/Chrome/.test(ua);
    if (isSafari || isIosWechat) {
      basicStyle = {
        transformOrigin: "0px 0px",
        transform: "scale(".concat(parseInt(fontSize, 10) / 12, ")")
      };
    }
    if (color && getIEVersion() > 11) {
      var matched = color.match(/[\d.]+/g);
      var endColor = matched ? "rgba(".concat(matched[0], ", ").concat(matched[1], ", ").concat(matched[2], ", 0)") : "";
      setStyle$1(circleElem, _objectSpread$u(_objectSpread$u({}, basicStyle), {}, {
        background: "conic-gradient(from 90deg at 50% 50%,".concat(endColor, " 0deg, ").concat(color, " 360deg)")
      }));
    } else {
      setStyle$1(circleElem, _objectSpread$u(_objectSpread$u({}, basicStyle), {}, {
        background: ""
      }));
    }
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var baseClone$1 = _baseClone;
  var CLONE_DEEP_FLAG$1 = 1, CLONE_SYMBOLS_FLAG$1 = 4;
  function cloneDeep(value) {
    return baseClone$1(value, CLONE_DEEP_FLAG$1 | CLONE_SYMBOLS_FLAG$1);
  }
  var cloneDeep_1 = cloneDeep;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var globalConfigCopy = vue.ref();
  function useConfig() {
    var componentName = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : void 0;
    var componentLocale = arguments.length > 1 ? arguments[1] : void 0;
    var injectGlobalConfig = vue.getCurrentInstance() ? vue.inject(configProviderInjectKey, null) : globalConfigCopy;
    var mergedGlobalConfig = vue.computed(function() {
      return (injectGlobalConfig === null || injectGlobalConfig === void 0 ? void 0 : injectGlobalConfig.value) || defaultGlobalConfig;
    });
    var globalConfig = vue.computed(function() {
      return Object.assign({}, mergedGlobalConfig.value[componentName], componentLocale);
    });
    var classPrefix = vue.computed(function() {
      return mergedGlobalConfig.value.classPrefix;
    });
    var t = function t2(pattern) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      var data = args[0];
      if (isString_1(pattern)) {
        if (!data) return pattern;
        var regular = /\{\s*([\w-]+)\s*\}/g;
        var translated = pattern.replace(regular, function(match, key) {
          if (data) {
            return String(data[key]);
          }
          return "";
        });
        return translated;
      }
      if (isFunction_1(pattern)) {
        if (!args.length) return pattern(vue.h);
        return pattern.apply(void 0, args);
      }
      return "";
    };
    return {
      t,
      global: globalConfig,
      globalConfig,
      classPrefix
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function usePrefixClass(componentName) {
    var _useConfig = useConfig("classPrefix"), classPrefix = _useConfig.classPrefix;
    return vue.computed(function() {
      return componentName ? "".concat(classPrefix.value, "-").concat(componentName) : classPrefix.value;
    });
  }
  function useCommonClassName$2() {
    var _useConfig2 = useConfig("classPrefix"), classPrefix = _useConfig2.classPrefix;
    return {
      SIZE: vue.computed(function() {
        return {
          small: "".concat(classPrefix.value, "-size-s"),
          medium: "".concat(classPrefix.value, "-size-m"),
          large: "".concat(classPrefix.value, "-size-l"),
          "default": "",
          xs: "".concat(classPrefix.value, "-size-xs"),
          xl: "".concat(classPrefix.value, "-size-xl"),
          block: "".concat(classPrefix.value, "-size-full-width")
        };
      }),
      STATUS: vue.computed(function() {
        return {
          loading: "".concat(classPrefix.value, "-is-loading"),
          loadMore: "".concat(classPrefix.value, "-is-load-more"),
          disabled: "".concat(classPrefix.value, "-is-disabled"),
          focused: "".concat(classPrefix.value, "-is-focused"),
          success: "".concat(classPrefix.value, "-is-success"),
          error: "".concat(classPrefix.value, "-is-error"),
          warning: "".concat(classPrefix.value, "-is-warning"),
          selected: "".concat(classPrefix.value, "-is-selected"),
          active: "".concat(classPrefix.value, "-is-active"),
          checked: "".concat(classPrefix.value, "-is-checked"),
          current: "".concat(classPrefix.value, "-is-current"),
          hidden: "".concat(classPrefix.value, "-is-hidden"),
          visible: "".concat(classPrefix.value, "-is-visible"),
          expanded: "".concat(classPrefix.value, "-is-expanded"),
          indeterminate: "".concat(classPrefix.value, "-is-indeterminate")
        };
      })
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var GradientIcon = vue.defineComponent({
    name: "TLoadingGradient",
    setup: function setup() {
      var classPrefix = usePrefixClass();
      vue.onMounted(function() {
        var circleElem = vue.getCurrentInstance().refs.circle;
        vue.nextTick(function() {
          circleAdapter(circleElem);
        });
      });
      return {
        classPrefix
      };
    },
    render: function render() {
      var classPrefix = this.classPrefix;
      var name = "".concat(classPrefix, "-loading__gradient");
      var classes = [name, "".concat(classPrefix, "-icon-loading")];
      return vue.createVNode("svg", {
        "class": classes,
        "viewBox": "0 0 12 12",
        "version": "1.1",
        "width": "1em",
        "height": "1em",
        "xmlns": "http://www.w3.org/2000/svg"
      }, [vue.createVNode("foreignObject", {
        "x": "0",
        "y": "0",
        "width": "12",
        "height": "12"
      }, [vue.createVNode("div", {
        "class": "".concat(name, "-conic"),
        "ref": "circle"
      }, null)])]);
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var raf$2 = { exports: {} };
  var performanceNow$1 = { exports: {} };
  (function() {
    var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;
    if (typeof performance !== "undefined" && performance !== null && performance.now) {
      performanceNow$1.exports = function() {
        return performance.now();
      };
    } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
      performanceNow$1.exports = function() {
        return (getNanoSeconds() - nodeLoadTime) / 1e6;
      };
      hrtime = process.hrtime;
      getNanoSeconds = function getNanoSeconds2() {
        var hr;
        hr = hrtime();
        return hr[0] * 1e9 + hr[1];
      };
      moduleLoadTime = getNanoSeconds();
      upTime = process.uptime() * 1e9;
      nodeLoadTime = moduleLoadTime - upTime;
    } else if (Date.now) {
      performanceNow$1.exports = function() {
        return Date.now() - loadTime;
      };
      loadTime = Date.now();
    } else {
      performanceNow$1.exports = function() {
        return (/* @__PURE__ */ new Date()).getTime() - loadTime;
      };
      loadTime = (/* @__PURE__ */ new Date()).getTime();
    }
  }).call(commonjsGlobal);
  var now$2 = performanceNow$1.exports, root$1 = typeof window === "undefined" ? commonjsGlobal : window, vendors = ["moz", "webkit"], suffix = "AnimationFrame", raf = root$1["request" + suffix], caf = root$1["cancel" + suffix] || root$1["cancelRequest" + suffix];
  for (var i = 0; !raf && i < vendors.length; i++) {
    raf = root$1[vendors[i] + "Request" + suffix];
    caf = root$1[vendors[i] + "Cancel" + suffix] || root$1[vendors[i] + "CancelRequest" + suffix];
  }
  if (!raf || !caf) {
    var last$2 = 0, id = 0, queue = [], frameDuration = 1e3 / 60;
    raf = function raf2(callback) {
      if (queue.length === 0) {
        var _now = now$2(), next = Math.max(0, frameDuration - (_now - last$2));
        last$2 = next + _now;
        setTimeout(function() {
          var cp = queue.slice(0);
          queue.length = 0;
          var _loop = function _loop2() {
            if (!cp[i].cancelled) {
              try {
                cp[i].callback(last$2);
              } catch (e) {
                setTimeout(function() {
                  throw e;
                }, 0);
              }
            }
          };
          for (var i = 0; i < cp.length; i++) {
            _loop();
          }
        }, Math.round(next));
      }
      queue.push({
        handle: ++id,
        callback,
        cancelled: false
      });
      return id;
    };
    caf = function caf2(handle) {
      for (var i = 0; i < queue.length; i++) {
        if (queue[i].handle === handle) {
          queue[i].cancelled = true;
        }
      }
    };
  }
  raf$2.exports = function(fn2) {
    return raf.call(root$1, fn2);
  };
  raf$2.exports.cancel = function() {
    caf.apply(root$1, arguments);
  };
  raf$2.exports.polyfill = function(object) {
    if (!object) {
      object = root$1;
    }
    object.requestAnimationFrame = raf;
    object.cancelAnimationFrame = caf;
  };
  var isServer = typeof window === "undefined";
  var trim = function trim2(str) {
    return (str || "").replace(/^[\s\uFEFF]+|[\s\uFEFF]+$/g, "");
  };
  var on = function() {
    if (!isServer && document.addEventListener) {
      return function(element2, event, handler, options) {
        if (element2 && event && handler) {
          element2.addEventListener(event, handler, options);
        }
      };
    }
    return function(element2, event, handler) {
      if (element2 && event && handler) {
        element2.attachEvent("on".concat(event), handler);
      }
    };
  }();
  var off = function() {
    if (!isServer && document.removeEventListener) {
      return function(element2, event, handler, options) {
        if (element2 && event) {
          element2.removeEventListener(event, handler, options);
        }
      };
    }
    return function(element2, event, handler) {
      if (element2 && event) {
        element2.detachEvent("on".concat(event), handler);
      }
    };
  }();
  function once(element2, event, handler, options) {
    var handlerFn = isFunction_1(handler) ? handler : handler.handleEvent;
    var callback = function callback2(evt) {
      handlerFn(evt);
      off(element2, event, callback2, options);
    };
    on(element2, event, callback, options);
  }
  function hasClass(el, cls) {
    if (!el || !cls) return false;
    if (cls.indexOf(" ") !== -1) throw new Error("className should not contain space.");
    if (el.classList) {
      return el.classList.contains(cls);
    }
    return " ".concat(el.className, " ").indexOf(" ".concat(cls, " ")) > -1;
  }
  function addClass(el, cls) {
    if (!el) return;
    var curClass = el.className;
    var classes = (cls || "").split(" ");
    for (var i = 0, j = classes.length; i < j; i++) {
      var clsName = classes[i];
      if (!clsName) continue;
      if (el.classList) {
        el.classList.add(clsName);
      } else if (!hasClass(el, clsName)) {
        curClass += " ".concat(clsName);
      }
    }
    if (!el.classList) {
      el.className = curClass;
    }
  }
  function removeClass(el, cls) {
    if (!el || !cls) return;
    var classes = cls.split(" ");
    var curClass = " ".concat(el.className, " ");
    for (var i = 0, j = classes.length; i < j; i++) {
      var clsName = classes[i];
      if (!clsName) continue;
      if (el.classList) {
        el.classList.remove(clsName);
      } else if (hasClass(el, clsName)) {
        curClass = curClass.replace(" ".concat(clsName, " "), " ");
      }
    }
    if (!el.classList) {
      el.className = trim(curClass);
    }
  }
  var getAttach = function getAttach2(node, triggerNode) {
    var attachNode = isFunction_1(node) ? node(triggerNode) : node;
    if (!attachNode) {
      return document.body;
    }
    if (isString_1(attachNode)) {
      return document.querySelector(attachNode);
    }
    if (attachNode instanceof HTMLElement) {
      return attachNode;
    }
    return document.body;
  };
  var getSSRAttach = function getSSRAttach2() {
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var baseKeys = _baseKeys, getTag = _getTag, isArguments$1 = isArguments_1, isArray$2 = isArray_1, isArrayLike = isArrayLike_1, isBuffer = isBuffer$5.exports, isPrototype = _isPrototype, isTypedArray = isTypedArray_1;
  var mapTag = "[object Map]", setTag = "[object Set]";
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  function isEmpty(value) {
    if (value == null) {
      return true;
    }
    if (isArrayLike(value) && (isArray$2(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer(value) || isTypedArray(value) || isArguments$1(value))) {
      return !value.length;
    }
    var tag = getTag(value);
    if (tag == mapTag || tag == setTag) {
      return !value.size;
    }
    if (isPrototype(value)) {
      return !baseKeys(value).length;
    }
    for (var key in value) {
      if (hasOwnProperty.call(value, key)) {
        return false;
      }
    }
    return true;
  }
  var isEmpty_1 = isEmpty;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function baseSlice$2(array, start2, end2) {
    var index = -1, length = array.length;
    if (start2 < 0) {
      start2 = -start2 > length ? 0 : length + start2;
    }
    end2 = end2 > length ? length : end2;
    if (end2 < 0) {
      end2 += length;
    }
    length = start2 > end2 ? 0 : end2 - start2 >>> 0;
    start2 >>>= 0;
    var result = Array(length);
    while (++index < length) {
      result[index] = array[index + start2];
    }
    return result;
  }
  var _baseSlice = baseSlice$2;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var baseSlice$1 = _baseSlice;
  function castSlice$1(array, start2, end2) {
    var length = array.length;
    end2 = end2 === void 0 ? length : end2;
    return !start2 && end2 >= length ? array : baseSlice$1(array, start2, end2);
  }
  var _castSlice = castSlice$1;
  var rsAstralRange$1 = "\\ud800-\\udfff", rsComboMarksRange$1$1 = "\\u0300-\\u036f", reComboHalfMarksRange$1$1 = "\\ufe20-\\ufe2f", rsComboSymbolsRange$1$1 = "\\u20d0-\\u20ff", rsComboRange$1$1 = rsComboMarksRange$1$1 + reComboHalfMarksRange$1$1 + rsComboSymbolsRange$1$1, rsVarRange$1 = "\\ufe0e\\ufe0f";
  var rsZWJ$1 = "\\u200d";
  var reHasUnicode = RegExp("[" + rsZWJ$1 + rsAstralRange$1 + rsComboRange$1$1 + rsVarRange$1 + "]");
  function hasUnicode$1(string) {
    return reHasUnicode.test(string);
  }
  var _hasUnicode = hasUnicode$1;
  function asciiToArray$1(string) {
    return string.split("");
  }
  var _asciiToArray = asciiToArray$1;
  var rsAstralRange$2 = "\\ud800-\\udfff", rsComboMarksRange$2 = "\\u0300-\\u036f", reComboHalfMarksRange$2 = "\\ufe20-\\ufe2f", rsComboSymbolsRange$2 = "\\u20d0-\\u20ff", rsComboRange$2 = rsComboMarksRange$2 + reComboHalfMarksRange$2 + rsComboSymbolsRange$2, rsVarRange$2 = "\\ufe0e\\ufe0f";
  var rsAstral = "[" + rsAstralRange$2 + "]", rsCombo$2 = "[" + rsComboRange$2 + "]", rsFitz$1 = "\\ud83c[\\udffb-\\udfff]", rsModifier$1 = "(?:" + rsCombo$2 + "|" + rsFitz$1 + ")", rsNonAstral$1 = "[^" + rsAstralRange$2 + "]", rsRegional$1 = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair$1 = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsZWJ$2 = "\\u200d";
  var reOptMod$1 = rsModifier$1 + "?", rsOptVar$1 = "[" + rsVarRange$2 + "]?", rsOptJoin$1 = "(?:" + rsZWJ$2 + "(?:" + [rsNonAstral$1, rsRegional$1, rsSurrPair$1].join("|") + ")" + rsOptVar$1 + reOptMod$1 + ")*", rsSeq$1 = rsOptVar$1 + reOptMod$1 + rsOptJoin$1, rsSymbol = "(?:" + [rsNonAstral$1 + rsCombo$2 + "?", rsCombo$2, rsRegional$1, rsSurrPair$1, rsAstral].join("|") + ")";
  var reUnicode = RegExp(rsFitz$1 + "(?=" + rsFitz$1 + ")|" + rsSymbol + rsSeq$1, "g");
  function unicodeToArray$1(string) {
    return string.match(reUnicode) || [];
  }
  var _unicodeToArray = unicodeToArray$1;
  var asciiToArray = _asciiToArray, hasUnicode$2 = _hasUnicode, unicodeToArray = _unicodeToArray;
  function stringToArray$1(string) {
    return hasUnicode$2(string) ? unicodeToArray(string) : asciiToArray(string);
  }
  var _stringToArray = stringToArray$1;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function arrayReduce$1(array, iteratee, accumulator, initAccum) {
    var index = -1, length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }
  var _arrayReduce = arrayReduce$1;
  function basePropertyOf$1(object) {
    return function(key) {
      return object == null ? void 0 : object[key];
    };
  }
  var _basePropertyOf = basePropertyOf$1;
  var basePropertyOf = _basePropertyOf;
  var deburredLetters = {
    // Latin-1 Supplement block.
    "À": "A",
    "Á": "A",
    "Â": "A",
    "Ã": "A",
    "Ä": "A",
    "Å": "A",
    "à": "a",
    "á": "a",
    "â": "a",
    "ã": "a",
    "ä": "a",
    "å": "a",
    "Ç": "C",
    "ç": "c",
    "Ð": "D",
    "ð": "d",
    "È": "E",
    "É": "E",
    "Ê": "E",
    "Ë": "E",
    "è": "e",
    "é": "e",
    "ê": "e",
    "ë": "e",
    "Ì": "I",
    "Í": "I",
    "Î": "I",
    "Ï": "I",
    "ì": "i",
    "í": "i",
    "î": "i",
    "ï": "i",
    "Ñ": "N",
    "ñ": "n",
    "Ò": "O",
    "Ó": "O",
    "Ô": "O",
    "Õ": "O",
    "Ö": "O",
    "Ø": "O",
    "ò": "o",
    "ó": "o",
    "ô": "o",
    "õ": "o",
    "ö": "o",
    "ø": "o",
    "Ù": "U",
    "Ú": "U",
    "Û": "U",
    "Ü": "U",
    "ù": "u",
    "ú": "u",
    "û": "u",
    "ü": "u",
    "Ý": "Y",
    "ý": "y",
    "ÿ": "y",
    "Æ": "Ae",
    "æ": "ae",
    "Þ": "Th",
    "þ": "th",
    "ß": "ss",
    // Latin Extended-A block.
    "Ā": "A",
    "Ă": "A",
    "Ą": "A",
    "ā": "a",
    "ă": "a",
    "ą": "a",
    "Ć": "C",
    "Ĉ": "C",
    "Ċ": "C",
    "Č": "C",
    "ć": "c",
    "ĉ": "c",
    "ċ": "c",
    "č": "c",
    "Ď": "D",
    "Đ": "D",
    "ď": "d",
    "đ": "d",
    "Ē": "E",
    "Ĕ": "E",
    "Ė": "E",
    "Ę": "E",
    "Ě": "E",
    "ē": "e",
    "ĕ": "e",
    "ė": "e",
    "ę": "e",
    "ě": "e",
    "Ĝ": "G",
    "Ğ": "G",
    "Ġ": "G",
    "Ģ": "G",
    "ĝ": "g",
    "ğ": "g",
    "ġ": "g",
    "ģ": "g",
    "Ĥ": "H",
    "Ħ": "H",
    "ĥ": "h",
    "ħ": "h",
    "Ĩ": "I",
    "Ī": "I",
    "Ĭ": "I",
    "Į": "I",
    "İ": "I",
    "ĩ": "i",
    "ī": "i",
    "ĭ": "i",
    "į": "i",
    "ı": "i",
    "Ĵ": "J",
    "ĵ": "j",
    "Ķ": "K",
    "ķ": "k",
    "ĸ": "k",
    "Ĺ": "L",
    "Ļ": "L",
    "Ľ": "L",
    "Ŀ": "L",
    "Ł": "L",
    "ĺ": "l",
    "ļ": "l",
    "ľ": "l",
    "ŀ": "l",
    "ł": "l",
    "Ń": "N",
    "Ņ": "N",
    "Ň": "N",
    "Ŋ": "N",
    "ń": "n",
    "ņ": "n",
    "ň": "n",
    "ŋ": "n",
    "Ō": "O",
    "Ŏ": "O",
    "Ő": "O",
    "ō": "o",
    "ŏ": "o",
    "ő": "o",
    "Ŕ": "R",
    "Ŗ": "R",
    "Ř": "R",
    "ŕ": "r",
    "ŗ": "r",
    "ř": "r",
    "Ś": "S",
    "Ŝ": "S",
    "Ş": "S",
    "Š": "S",
    "ś": "s",
    "ŝ": "s",
    "ş": "s",
    "š": "s",
    "Ţ": "T",
    "Ť": "T",
    "Ŧ": "T",
    "ţ": "t",
    "ť": "t",
    "ŧ": "t",
    "Ũ": "U",
    "Ū": "U",
    "Ŭ": "U",
    "Ů": "U",
    "Ű": "U",
    "Ų": "U",
    "ũ": "u",
    "ū": "u",
    "ŭ": "u",
    "ů": "u",
    "ű": "u",
    "ų": "u",
    "Ŵ": "W",
    "ŵ": "w",
    "Ŷ": "Y",
    "ŷ": "y",
    "Ÿ": "Y",
    "Ź": "Z",
    "Ż": "Z",
    "Ž": "Z",
    "ź": "z",
    "ż": "z",
    "ž": "z",
    "Ĳ": "IJ",
    "ĳ": "ij",
    "Œ": "Oe",
    "œ": "oe",
    "ŉ": "'n",
    "ſ": "s"
  };
  var deburrLetter$1 = basePropertyOf(deburredLetters);
  var _deburrLetter = deburrLetter$1;
  var deburrLetter = _deburrLetter, toString$1$1 = toString_1;
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
  var rsComboMarksRange$1 = "\\u0300-\\u036f", reComboHalfMarksRange$1 = "\\ufe20-\\ufe2f", rsComboSymbolsRange$1 = "\\u20d0-\\u20ff", rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1;
  var rsCombo$1 = "[" + rsComboRange$1 + "]";
  var reComboMark = RegExp(rsCombo$1, "g");
  function deburr$1(string) {
    string = toString$1$1(string);
    return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
  }
  var deburr_1 = deburr$1;
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
  function asciiWords$1(string) {
    return string.match(reAsciiWord) || [];
  }
  var _asciiWords = asciiWords$1;
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
  function hasUnicodeWord$1(string) {
    return reHasUnicodeWord.test(string);
  }
  var _hasUnicodeWord = hasUnicodeWord$1;
  var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
  var rsApos$1 = "['’]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
  var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos$1 + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos$1 + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq;
  var reUnicodeWord = RegExp([rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")", rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")", rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower, rsUpper + "+" + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join("|"), "g");
  function unicodeWords$1(string) {
    return string.match(reUnicodeWord) || [];
  }
  var _unicodeWords = unicodeWords$1;
  var asciiWords = _asciiWords, hasUnicodeWord = _hasUnicodeWord, toString$2 = toString_1, unicodeWords = _unicodeWords;
  function words$1(string, pattern, guard) {
    string = toString$2(string);
    pattern = guard ? void 0 : pattern;
    if (pattern === void 0) {
      return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
    }
    return string.match(pattern) || [];
  }
  var words_1 = words$1;
  var arrayReduce = _arrayReduce, deburr = deburr_1, words = words_1;
  var rsApos = "['’]";
  var reApos = RegExp(rsApos, "g");
  function createCompounder$2(callback) {
    return function(string) {
      return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
    };
  }
  var _createCompounder = createCompounder$2;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var castSlice = _castSlice, hasUnicode = _hasUnicode, stringToArray = _stringToArray, toString$1 = toString_1;
  function createCaseFirst$1(methodName) {
    return function(string) {
      string = toString$1(string);
      var strSymbols = hasUnicode(string) ? stringToArray(string) : void 0;
      var chr = strSymbols ? strSymbols[0] : string.charAt(0);
      var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
      return chr[methodName]() + trailing;
    };
  }
  var _createCaseFirst = createCaseFirst$1;
  var createCaseFirst = _createCaseFirst;
  var upperFirst$1 = createCaseFirst("toUpperCase");
  var upperFirst_1 = upperFirst$1;
  var toString = toString_1, upperFirst = upperFirst_1;
  function capitalize$1(string) {
    return upperFirst(toString(string).toLowerCase());
  }
  var capitalize_1 = capitalize$1;
  var capitalize = capitalize_1, createCompounder$1 = _createCompounder;
  var camelCase = createCompounder$1(function(result, word, index) {
    word = word.toLowerCase();
    return result + (index ? capitalize(word) : word);
  });
  var camelCase_1 = camelCase;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var createCompounder = _createCompounder;
  var kebabCase = createCompounder(function(result, word, index) {
    return result + (index ? "-" : "") + word.toLowerCase();
  });
  var kebabCase_1 = kebabCase;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function getDefaultNode(options) {
    var defaultNode;
    if (isObject_1(options) && "defaultNode" in options) {
      defaultNode = options.defaultNode;
    } else if (vue.isVNode(options) || isString_1(options)) {
      defaultNode = options;
    }
    return defaultNode;
  }
  function getParams(options) {
    return isObject_1(options) && "params" in options ? options.params : {};
  }
  function getSlotFirst(options) {
    return isObject_1(options) && "slotFirst" in options ? options.slotFirst : {};
  }
  function handleSlots$1(instance, params, name) {
    var _instance$$slots$came, _instance$$slots, _instance$$slots$keba, _instance$$slots2;
    var node = (_instance$$slots$came = (_instance$$slots = instance.$slots)[camelCase_1(name)]) === null || _instance$$slots$came === void 0 ? void 0 : _instance$$slots$came.call(_instance$$slots, params);
    if (node) return node;
    node = (_instance$$slots$keba = (_instance$$slots2 = instance.$slots)[kebabCase_1(name)]) === null || _instance$$slots$keba === void 0 ? void 0 : _instance$$slots$keba.call(_instance$$slots2, params);
    if (node) return node;
    return null;
  }
  var renderTNodeJSX = function renderTNodeJSX2(instance, name, options) {
    var params = getParams(options);
    var defaultNode = getDefaultNode(options);
    var propsNode;
    if (name in instance) {
      propsNode = instance[name];
    }
    if (propsNode === false || propsNode === null) return;
    if (propsNode === true && defaultNode) {
      return handleSlots$1(instance, params, name) || defaultNode;
    }
    if (isFunction_1(propsNode)) return propsNode(vue.h, params);
    var isPropsEmpty = [void 0, params, ""].includes(propsNode);
    if (isPropsEmpty && (instance.$slots[camelCase_1(name)] || instance.$slots[kebabCase_1(name)])) {
      return handleSlots$1(instance, params, name);
    }
    return propsNode;
  };
  var renderContent = function renderContent2(vm, name1, name2, options) {
    var params = getParams(options);
    var defaultNode = getDefaultNode(options);
    var toParams = params ? {
      params
    } : void 0;
    var node1 = renderTNodeJSX(vm, name1, toParams);
    var node2 = renderTNodeJSX(vm, name2, toParams);
    var res = isEmpty_1(node1) ? node2 : node1;
    return isEmpty_1(res) ? defaultNode : res;
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props$e = {
    attach: {
      type: [String, Function],
      "default": ""
    },
    content: {
      type: [String, Function]
    },
    "default": {
      type: [String, Function]
    },
    delay: {
      type: Number,
      "default": 0
    },
    fullscreen: Boolean,
    indicator: {
      type: [Boolean, Function],
      "default": true
    },
    inheritColor: Boolean,
    loading: {
      type: Boolean,
      "default": true
    },
    preventScrollThrough: {
      type: Boolean,
      "default": true
    },
    showOverlay: {
      type: Boolean,
      "default": true
    },
    size: {
      type: String,
      "default": "medium"
    },
    text: {
      type: [String, Function]
    },
    zIndex: {
      type: Number
    }
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var useTeleport = function useTeleport2(attach, triggerNode) {
    var to = isFunction_1(attach) ? vue.computed(attach) : vue.ref(attach);
    var innerTriggerNode = isFunction_1(triggerNode) ? vue.computed(triggerNode) : vue.ref(triggerNode);
    var element2 = vue.ref();
    var getElement = function getElement2() {
      element2.value = getSSRAttach() || getAttach(to.value, innerTriggerNode.value);
    };
    vue.onMounted(function() {
      return getElement();
    });
    vue.watch([to, innerTriggerNode], function() {
      return getElement();
    });
    return element2;
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var useComponentClassName$2 = function useComponentClassName() {
    return {
      name: usePrefixClass("loading"),
      centerClass: usePrefixClass("loading--center"),
      fullscreenClass: usePrefixClass("loading__fullscreen"),
      lockClass: usePrefixClass("loading--lock"),
      overlayClass: usePrefixClass("loading__overlay"),
      relativeClass: usePrefixClass("loading__parent"),
      fullClass: usePrefixClass("loading--full"),
      inheritColorClass: usePrefixClass("loading--inherit-color")
    };
  };
  var _Loading = vue.defineComponent({
    name: "TLoading",
    inheritAttrs: false,
    props: props$e,
    setup: function setup2(props2, _ref) {
      var slots = _ref.slots;
      var delayShowLoading = vue.ref(false);
      var _useComponentClassNam = useComponentClassName$2(), name = _useComponentClassNam.name, centerClass = _useComponentClassNam.centerClass, fullscreenClass = _useComponentClassNam.fullscreenClass, lockClass = _useComponentClassNam.lockClass, overlayClass = _useComponentClassNam.overlayClass, relativeClass = _useComponentClassNam.relativeClass, fullClass = _useComponentClassNam.fullClass, inheritColorClass = _useComponentClassNam.inheritColorClass;
      var classPrefix = usePrefixClass();
      var _useCommonClassName = useCommonClassName$2(), SIZE = _useCommonClassName.SIZE;
      var countDelay = function countDelay2() {
        delayShowLoading.value = false;
        var timer = setTimeout(function() {
          delayShowLoading.value = true;
          clearTimeout(timer);
        }, props2.delay);
      };
      var teleportElement = useTeleport(function() {
        return props2.attach;
      });
      var delayCounted = vue.computed(function() {
        return Boolean(!props2.delay || props2.delay && delayShowLoading.value);
      });
      var styles = vue.computed(function() {
        var styles2 = {};
        if (props2.zIndex !== void 0) {
          styles2.zIndex = props2.zIndex;
        }
        if (!["small", "medium", "large"].includes(props2.size)) {
          styles2["font-size"] = props2.size;
        }
        return styles2;
      });
      var hasContent = vue.computed(function() {
        return Boolean(props2["default"] || slots["default"] || props2.content || slots.content);
      });
      var lockFullscreen = vue.computed(function() {
        return props2.preventScrollThrough && props2.fullscreen;
      });
      var showText = vue.computed(function() {
        return Boolean(props2.text || slots.text);
      });
      var showWrapLoading = vue.computed(function() {
        return hasContent.value && props2.loading && delayCounted.value;
      });
      var showFullScreenLoading = vue.computed(function() {
        return props2.fullscreen && props2.loading && delayCounted.value;
      });
      var showNormalLoading = vue.computed(function() {
        return props2.attach && props2.loading && delayCounted.value;
      });
      var showAttachedLoading = vue.computed(function() {
        return props2.attach && props2.loading && delayCounted.value;
      });
      var classes = vue.computed(function() {
        var baseClasses = [centerClass.value, SIZE.value[props2.size], _defineProperty$2({}, inheritColorClass.value, props2.inheritColor)];
        var fullScreenClasses = [name.value, fullscreenClass.value, centerClass.value, overlayClass.value];
        return {
          baseClasses,
          attachClasses: baseClasses.concat([name.value, fullClass.value, _defineProperty$2({}, overlayClass.value, props2.showOverlay)]),
          withContentClasses: baseClasses.concat([name.value, fullClass.value, _defineProperty$2({}, overlayClass.value, props2.showOverlay)]),
          fullScreenClasses,
          normalClasses: baseClasses.concat([name.value])
        };
      });
      var _toRefs = vue.toRefs(props2), loading = _toRefs.loading;
      vue.watch([loading], function(_ref5) {
        var _ref6 = _slicedToArray(_ref5, 1), isLoading = _ref6[0];
        if (isLoading) {
          countDelay();
          lockFullscreen.value && addClass(document.body, lockClass.value);
        } else {
          lockFullscreen.value && removeClass(document.body, lockClass.value);
        }
      });
      vue.onMounted(function() {
        props2.delay && countDelay();
      });
      return {
        classPrefix,
        relativeClass,
        delayShowLoading,
        styles,
        showText,
        hasContent,
        classes,
        lockFullscreen,
        showWrapLoading,
        showNormalLoading,
        showFullScreenLoading,
        showAttachedLoading,
        teleportElement
      };
    },
    render: function render2() {
      var _this = this;
      var _this$classes = this.classes, fullScreenClasses = _this$classes.fullScreenClasses, baseClasses = _this$classes.baseClasses, withContentClasses = _this$classes.withContentClasses, attachClasses = _this$classes.attachClasses, normalClasses = _this$classes.normalClasses;
      var defaultIndicator = vue.createVNode(GradientIcon, {
        "size": this.size
      }, null);
      var indicator = this.loading && renderTNodeJSX(this, "indicator", defaultIndicator);
      var text = this.showText && vue.createVNode("div", {
        "class": "".concat(this.classPrefix, "-loading__text")
      }, [renderTNodeJSX(this, "text")]);
      if (this.fullscreen) {
        if (!this.showFullScreenLoading || !this.loading) return null;
        return vue.createVNode(vue.Teleport, {
          "disabled": !this.attach || !this.teleportElement,
          "to": this.teleportElement
        }, {
          "default": function _default4() {
            return [vue.createVNode("div", vue.mergeProps({
              "class": fullScreenClasses,
              "style": _this.styles
            }, _this.$attrs), [vue.createVNode("div", {
              "class": baseClasses
            }, [indicator, text])])];
          }
        });
      }
      if (this.hasContent) {
        return vue.createVNode("div", vue.mergeProps({
          "class": this.relativeClass
        }, this.$attrs), [renderContent(this, "default", "content"), this.showWrapLoading && vue.createVNode("div", {
          "class": withContentClasses,
          "style": this.styles
        }, [indicator, text])]);
      }
      if (this.attach) {
        if (!this.showAttachedLoading || !this.loading) return null;
        return vue.createVNode(vue.Teleport, {
          "disabled": !this.attach || !this.teleportElement,
          "to": this.teleportElement
        }, {
          "default": function _default4() {
            return [vue.createVNode("div", vue.mergeProps({
              "class": attachClasses,
              "style": _this.styles
            }, _this.$attrs), [indicator, text])];
          }
        });
      }
      return this.loading ? vue.createVNode("div", vue.mergeProps({
        "class": normalClasses,
        "style": this.styles
      }, this.$attrs), [indicator, text]) : null;
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$t(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$t(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$t(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$t(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var fullScreenLoadingInstance = null;
  function mergeDefaultProps(props2) {
    var options = merge_1({
      fullscreen: false,
      attach: "body",
      loading: true,
      preventScrollThrough: true
    }, props2);
    return options;
  }
  function createLoading(props2) {
    var mergedProps = mergeDefaultProps(props2);
    if (mergedProps.fullscreen && fullScreenLoadingInstance) {
      return fullScreenLoadingInstance;
    }
    var component = vue.defineComponent({
      setup: function setup24() {
        var loadingOptions = vue.reactive(mergedProps);
        return {
          loadingOptions
        };
      },
      render: function render8() {
        return vue.h(_Loading, _objectSpread$t({}, this.loadingOptions));
      }
    });
    var attach = getAttach(mergedProps.fullscreen ? "body" : mergedProps.attach);
    var app = vue.createApp(component);
    var loading = app.mount(document.createElement("div"));
    var parentRelativeClass = usePrefixClass("loading__parent--relative").value;
    var lockClass = usePrefixClass("loading--lock");
    var lockFullscreen = mergedProps.preventScrollThrough && mergedProps.fullscreen;
    if (lockFullscreen) {
      addClass(document.body, lockClass.value);
    }
    if (attach) {
      addClass(attach, parentRelativeClass);
    } else {
      console.error("attach is not exist");
    }
    var loadingInstance = {
      hide: function hide2() {
        loading.loading = false;
        removeClass(attach, parentRelativeClass);
        removeClass(document.body, lockClass.value);
        app.unmount();
      }
    };
    return loadingInstance;
  }
  function produceLoading(props2) {
    if (props2 === true) {
      fullScreenLoadingInstance = createLoading({
        fullscreen: true,
        loading: true,
        attach: "body",
        preventScrollThrough: true
      });
      return fullScreenLoadingInstance;
    }
    if (props2 === false) {
      var _fullScreenLoadingIns;
      (_fullScreenLoadingIns = fullScreenLoadingInstance) === null || _fullScreenLoadingIns === void 0 || _fullScreenLoadingIns.hide();
      fullScreenLoadingInstance = null;
      return;
    }
    return createLoading(props2);
  }
  var LoadingPlugin = produceLoading;
  LoadingPlugin.install = function(app) {
    app.config.globalProperties.$loading = produceLoading;
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var baseFor = _baseFor, keys$1 = keys_1;
  function baseForOwn$1(object, iteratee) {
    return object && baseFor(object, iteratee, keys$1);
  }
  var _baseForOwn = baseForOwn$1;
  var Stack = _Stack, baseIsEqual$1 = _baseIsEqual;
  var COMPARE_PARTIAL_FLAG$1 = 1, COMPARE_UNORDERED_FLAG$1 = 2;
  function baseIsMatch$1(object, source, matchData, customizer) {
    var index = matchData.length, length = index, noCustomizer = !customizer;
    if (object == null) {
      return !length;
    }
    object = Object(object);
    while (index--) {
      var data = matchData[index];
      if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
        return false;
      }
    }
    while (++index < length) {
      data = matchData[index];
      var key = data[0], objValue = object[key], srcValue = data[1];
      if (noCustomizer && data[2]) {
        if (objValue === void 0 && !(key in object)) {
          return false;
        }
      } else {
        var stack = new Stack();
        if (customizer) {
          var result = customizer(objValue, srcValue, key, object, source, stack);
        }
        if (!(result === void 0 ? baseIsEqual$1(srcValue, objValue, COMPARE_PARTIAL_FLAG$1 | COMPARE_UNORDERED_FLAG$1, customizer, stack) : result)) {
          return false;
        }
      }
    }
    return true;
  }
  var _baseIsMatch = baseIsMatch$1;
  var isObject$3 = isObject_1;
  function isStrictComparable$2(value) {
    return value === value && !isObject$3(value);
  }
  var _isStrictComparable = isStrictComparable$2;
  var isStrictComparable$1 = _isStrictComparable, keys = keys_1;
  function getMatchData$1(object) {
    var result = keys(object), length = result.length;
    while (length--) {
      var key = result[length], value = object[key];
      result[length] = [key, value, isStrictComparable$1(value)];
    }
    return result;
  }
  var _getMatchData = getMatchData$1;
  function matchesStrictComparable$2(key, srcValue) {
    return function(object) {
      if (object == null) {
        return false;
      }
      return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
    };
  }
  var _matchesStrictComparable = matchesStrictComparable$2;
  var baseIsMatch = _baseIsMatch, getMatchData = _getMatchData, matchesStrictComparable$1 = _matchesStrictComparable;
  function baseMatches$1(source) {
    var matchData = getMatchData(source);
    if (matchData.length == 1 && matchData[0][2]) {
      return matchesStrictComparable$1(matchData[0][0], matchData[0][1]);
    }
    return function(object) {
      return object === source || baseIsMatch(object, source, matchData);
    };
  }
  var _baseMatches = baseMatches$1;
  var baseIsEqual = _baseIsEqual, get = get_1, hasIn$1 = hasIn_1, isKey$1 = _isKey, isStrictComparable = _isStrictComparable, matchesStrictComparable = _matchesStrictComparable, toKey$1$1 = _toKey;
  var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
  function baseMatchesProperty$1(path, srcValue) {
    if (isKey$1(path) && isStrictComparable(srcValue)) {
      return matchesStrictComparable(toKey$1$1(path), srcValue);
    }
    return function(object) {
      var objValue = get(object, path);
      return objValue === void 0 && objValue === srcValue ? hasIn$1(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
    };
  }
  var _baseMatchesProperty = baseMatchesProperty$1;
  var baseGet$2 = _baseGet;
  function basePropertyDeep$1(path) {
    return function(object) {
      return baseGet$2(object, path);
    };
  }
  var _basePropertyDeep = basePropertyDeep$1;
  var baseProperty = _baseProperty, basePropertyDeep = _basePropertyDeep, isKey = _isKey, toKey$2 = _toKey;
  function property$1(path) {
    return isKey(path) ? baseProperty(toKey$2(path)) : basePropertyDeep(path);
  }
  var property_1 = property$1;
  var baseMatches = _baseMatches, baseMatchesProperty = _baseMatchesProperty, identity = identity_1, isArray$1 = isArray_1, property = property_1;
  function baseIteratee$1(value) {
    if (typeof value == "function") {
      return value;
    }
    if (value == null) {
      return identity;
    }
    if (_typeof$1(value) == "object") {
      return isArray$1(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
    }
    return property(value);
  }
  var _baseIteratee = baseIteratee$1;
  var baseAssignValue = _baseAssignValue, baseForOwn = _baseForOwn, baseIteratee = _baseIteratee;
  function mapKeys(object, iteratee) {
    var result = {};
    iteratee = baseIteratee(iteratee);
    baseForOwn(object, function(value, key, object2) {
      baseAssignValue(result, iteratee(value, key, object2), value);
    });
    return result;
  }
  var mapKeys_1 = mapKeys;
  var INSTANCE_KEY = Symbol("TdLoading");
  var createInstance = function createInstance2(el, binding) {
    var _binding$modifiers = binding.modifiers, fullscreen = _binding$modifiers.fullscreen, inheritColor = _binding$modifiers.inheritColor;
    var options = {
      attach: function attach() {
        return el;
      },
      fullscreen: fullscreen !== null && fullscreen !== void 0 ? fullscreen : false,
      inheritColor: inheritColor !== null && inheritColor !== void 0 ? inheritColor : false,
      loading: binding.value
    };
    if (isObject_1(binding.value)) {
      mapKeys_1(binding.value, function(value, key) {
        options[key] = value;
      });
    }
    el[INSTANCE_KEY] = {
      options,
      instance: LoadingPlugin(options)
    };
  };
  var vLoading = {
    mounted: function mounted(el, binding) {
      if (binding.value) {
        createInstance(el, binding);
      }
    },
    updated: function updated(el, binding) {
      var instance = el[INSTANCE_KEY];
      var value = binding.value, oldValue = binding.oldValue;
      if (!isEqual_1(value, oldValue)) {
        var _value$loading;
        var loading = (_value$loading = value === null || value === void 0 ? void 0 : value.loading) !== null && _value$loading !== void 0 ? _value$loading : value;
        if (loading) {
          createInstance(el, binding);
        } else {
          instance === null || instance === void 0 || instance.instance.hide();
        }
      }
    },
    unmounted: function unmounted(el) {
      var _el$INSTANCE_KEY;
      (_el$INSTANCE_KEY = el[INSTANCE_KEY]) === null || _el$INSTANCE_KEY === void 0 || _el$INSTANCE_KEY.instance.hide();
    }
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function withInstall(comp, alias, directive) {
    var componentPlugin = comp;
    componentPlugin.install = function(app, name) {
      app.component(alias || name || componentPlugin.name, comp);
      directive && app.directive(directive.name, directive.comp);
    };
    return componentPlugin;
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var Loading = withInstall(_Loading, _Loading.name, {
    name: "loading",
    comp: vLoading
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props$d = {
    block: Boolean,
    content: {
      type: [String, Function]
    },
    "default": {
      type: [String, Function]
    },
    disabled: {
      type: Boolean,
      "default": void 0
    },
    ghost: Boolean,
    href: {
      type: String,
      "default": ""
    },
    icon: {
      type: Function
    },
    loading: Boolean,
    loadingProps: {
      type: Object
    },
    shape: {
      type: String,
      "default": "rectangle",
      validator: function validator(val) {
        if (!val) return true;
        return ["rectangle", "square", "round", "circle"].includes(val);
      }
    },
    size: {
      type: String,
      "default": "medium",
      validator: function validator2(val) {
        if (!val) return true;
        return ["extra-small", "small", "medium", "large"].includes(val);
      }
    },
    suffix: {
      type: Function
    },
    tag: {
      type: String,
      validator: function validator3(val) {
        if (!val) return true;
        return ["button", "a", "div"].includes(val);
      }
    },
    theme: {
      type: String,
      validator: function validator4(val) {
        if (!val) return true;
        return ["default", "primary", "danger", "warning", "success"].includes(val);
      }
    },
    type: {
      type: String,
      "default": "button",
      validator: function validator5(val) {
        if (!val) return true;
        return ["submit", "reset", "button"].includes(val);
      }
    },
    variant: {
      type: String,
      "default": "base",
      validator: function validator6(val) {
        if (!val) return true;
        return ["base", "outline", "dashed", "text"].includes(val);
      }
    },
    onClick: Function
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var expand = EAnimationType.expand, ripple = EAnimationType.ripple, fade = EAnimationType.fade;
  function useKeepAnimation() {
    var _useConfig = useConfig("animation"), globalConfig = _useConfig.globalConfig;
    var keepAnimation = function keepAnimation2(type) {
      var _animationConfig$excl, _animationConfig$incl;
      var animationConfig = globalConfig.value;
      return animationConfig && !((_animationConfig$excl = animationConfig.exclude) !== null && _animationConfig$excl !== void 0 && _animationConfig$excl.includes(type)) && ((_animationConfig$incl = animationConfig.include) === null || _animationConfig$incl === void 0 ? void 0 : _animationConfig$incl.includes(type));
    };
    return {
      keepExpand: keepAnimation(expand),
      keepRipple: keepAnimation(ripple),
      keepFade: keepAnimation(fade)
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function setStyle(el, styles) {
    var keys2 = Object.keys(styles);
    keys2.forEach(function(key) {
      el.style[key] = styles[key];
    });
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var period = 200;
  var noneRippleBg = "rgba(0, 0, 0, 0)";
  var defaultRippleColor = "rgba(0, 0, 0, 0.35)";
  var getRippleColor = function getRippleColor2(el, fixedRippleColor) {
    var _el$dataset;
    if (el !== null && el !== void 0 && (_el$dataset = el.dataset) !== null && _el$dataset !== void 0 && _el$dataset.ripple) {
      var rippleColor = el.dataset.ripple;
      return rippleColor;
    }
    var cssVariable = getComputedStyle(el).getPropertyValue("--ripple-color");
    if (cssVariable) {
      return cssVariable;
    }
    return defaultRippleColor;
  };
  function useRipple(el, fixedRippleColor) {
    var rippleContainer = vue.ref(null);
    var classPrefix = usePrefixClass();
    var _useKeepAnimation = useKeepAnimation(), keepRipple = _useKeepAnimation.keepRipple;
    var handleAddRipple = function handleAddRipple2(e) {
      var dom = el.value;
      var rippleColor = getRippleColor(dom);
      if (e.button !== 0 || !el || !keepRipple) return;
      if (dom.classList.contains("".concat(classPrefix.value, "-is-active")) || dom.classList.contains("".concat(classPrefix.value, "-is-disabled")) || dom.classList.contains("".concat(classPrefix.value, "-is-checked")) || dom.classList.contains("".concat(classPrefix.value, "-is-loading"))) return;
      var elStyle = getComputedStyle(dom);
      var elBorder = parseInt(elStyle.borderWidth, 10);
      var border = elBorder > 0 ? elBorder : 0;
      var width = dom.offsetWidth;
      var height = dom.offsetHeight;
      if (rippleContainer.value.parentNode === null) {
        setStyle(rippleContainer.value, {
          position: "absolute",
          left: "".concat(0 - border, "px"),
          top: "".concat(0 - border, "px"),
          width: "".concat(width, "px"),
          height: "".concat(height, "px"),
          borderRadius: elStyle.borderRadius,
          pointerEvents: "none",
          overflow: "hidden"
        });
        dom.appendChild(rippleContainer.value);
      }
      var ripple2 = document.createElement("div");
      setStyle(ripple2, {
        marginTop: "0",
        marginLeft: "0",
        right: "".concat(width, "px"),
        width: "".concat(width + 20, "px"),
        height: "100%",
        transition: "transform ".concat(period, "ms cubic-bezier(.38, 0, .24, 1), background ").concat(period * 2, "ms linear"),
        transform: "skewX(-8deg)",
        pointerEvents: "none",
        position: "absolute",
        zIndex: 0,
        backgroundColor: rippleColor,
        opacity: "0.9"
      });
      var elMap = /* @__PURE__ */ new WeakMap();
      for (var n = dom.children.length, i = 0; i < n; ++i) {
        var child = dom.children[i];
        if (child.style.zIndex === "" && child !== rippleContainer.value) {
          child.style.zIndex = "1";
          elMap.set(child, true);
        }
      }
      var initPosition = dom.style.position ? dom.style.position : getComputedStyle(dom).position;
      if (initPosition === "" || initPosition === "static") {
        dom.style.position = "relative";
      }
      rippleContainer.value.insertBefore(ripple2, rippleContainer.value.firstChild);
      setTimeout(function() {
        ripple2.style.transform = "translateX(".concat(width, "px)");
      }, 0);
      var handleClearRipple = function handleClearRipple2() {
        ripple2.style.backgroundColor = noneRippleBg;
        if (!el.value) return;
        el.value.removeEventListener("pointerup", handleClearRipple2, false);
        el.value.removeEventListener("pointerleave", handleClearRipple2, false);
        setTimeout(function() {
          ripple2.remove();
          if (rippleContainer.value.children.length === 0) rippleContainer.value.remove();
        }, period * 2 + 100);
      };
      el.value.addEventListener("pointerup", handleClearRipple, false);
      el.value.addEventListener("pointerleave", handleClearRipple, false);
    };
    vue.onMounted(function() {
      var dom = el === null || el === void 0 ? void 0 : el.value;
      if (!dom) return;
      rippleContainer.value = document.createElement("div");
      dom.addEventListener("pointerdown", handleAddRipple, false);
    });
    vue.onUnmounted(function() {
      var _el$value;
      el === null || el === void 0 || (_el$value = el.value) === null || _el$value === void 0 || _el$value.removeEventListener("pointerdown", handleAddRipple, false);
    });
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function handleSlots(instance, name, params) {
    var _instance$slots$camel, _instance$slots, _instance$slots$kebab, _instance$slots2;
    var node = (_instance$slots$camel = (_instance$slots = instance.slots)[camelCase_1(name)]) === null || _instance$slots$camel === void 0 ? void 0 : _instance$slots$camel.call(_instance$slots, params);
    if (node && node.filter(function(t) {
      return t.type.toString() !== "Symbol(v-cmt)";
    }).length) return node;
    node = (_instance$slots$kebab = (_instance$slots2 = instance.slots)[kebabCase_1(name)]) === null || _instance$slots$kebab === void 0 ? void 0 : _instance$slots$kebab.call(_instance$slots2, params);
    if (node && node.filter(function(t) {
      return t.type.toString() !== "Symbol(v-cmt)";
    }).length) return node;
    return null;
  }
  function isEmptyNode(node) {
    if ([void 0, null, ""].includes(node)) return true;
    var innerNodes = node instanceof Array ? node : [node];
    var r = innerNodes.filter(function(node2) {
      var _node2$type;
      return (node2 === null || node2 === void 0 || (_node2$type = node2.type) === null || _node2$type === void 0 ? void 0 : _node2$type.toString()) !== "Symbol(Comment)";
    });
    return !r.length;
  }
  var useTNodeJSX = function useTNodeJSX2() {
    var instance = vue.getCurrentInstance();
    return function(name, options) {
      var params = getParams(options);
      var defaultNode = getDefaultNode(options);
      var slotFirst = getSlotFirst(options);
      var propsNode;
      if (Object.keys(instance.props).includes(name)) {
        propsNode = instance.props[name];
      }
      if (propsNode === false || propsNode === null) return;
      if (propsNode === true) {
        return handleSlots(instance, name, params) || defaultNode;
      }
      if (isFunction_1(propsNode)) return propsNode(vue.h, params);
      var isPropsEmpty = [void 0, params, ""].includes(propsNode);
      if ((isPropsEmpty || slotFirst) && (instance.slots[camelCase_1(name)] || instance.slots[kebabCase_1(name)])) {
        return handleSlots(instance, name, params);
      }
      return propsNode;
    };
  };
  var useTNodeDefault = function useTNodeDefault2() {
    var renderTNodeJSX3 = useTNodeJSX();
    return function(name, options) {
      var defaultNode = getDefaultNode(options);
      return renderTNodeJSX3(name, options) || defaultNode;
    };
  };
  var useContent = function useContent2() {
    var renderTNodeJSX3 = useTNodeJSX();
    return function(name1, name2, options) {
      var params = getParams(options);
      var defaultNode = getDefaultNode(options);
      var toParams = params ? {
        params
      } : void 0;
      var node1 = renderTNodeJSX3(name1, toParams);
      var node2 = renderTNodeJSX3(name2, toParams);
      var res = isEmptyNode(node1) ? node2 : node1;
      return isEmptyNode(res) ? defaultNode : res;
    };
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var baseGetTag = _baseGetTag, isObjectLike = isObjectLike_1;
  var boolTag = "[object Boolean]";
  function isBoolean(value) {
    return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
  }
  var isBoolean_1 = isBoolean;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useDisabled(context) {
    var currentInstance = vue.getCurrentInstance();
    var componentDisabled = vue.computed(function() {
      return currentInstance.props.disabled;
    });
    var formDisabled = vue.inject("formDisabled", /* @__PURE__ */ Object.create(null));
    return vue.computed(function() {
      var _context$beforeDisabl, _context$afterDisable, _formDisabled$disable;
      if (isBoolean_1(context === null || context === void 0 || (_context$beforeDisabl = context.beforeDisabled) === null || _context$beforeDisabl === void 0 ? void 0 : _context$beforeDisabl.value)) return context.beforeDisabled.value;
      if (isBoolean_1(componentDisabled.value)) return componentDisabled.value;
      if (isBoolean_1(context === null || context === void 0 || (_context$afterDisable = context.afterDisabled) === null || _context$afterDisable === void 0 ? void 0 : _context$afterDisable.value)) return context.afterDisabled.value;
      if (isBoolean_1((_formDisabled$disable = formDisabled.disabled) === null || _formDisabled$disable === void 0 ? void 0 : _formDisabled$disable.value)) return formDisabled.disabled.value;
      return false;
    });
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$s(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$s(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$s(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$s(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var TButton = vue.defineComponent({
    name: "TButton",
    props: props$d,
    setup: function setup3(props2, _ref) {
      var attrs = _ref.attrs, slots = _ref.slots;
      var renderTNodeJSX3 = useTNodeJSX();
      var renderContent3 = useContent();
      var COMPONENT_NAME = usePrefixClass("button");
      var _useCommonClassName = useCommonClassName$2(), STATUS = _useCommonClassName.STATUS, SIZE = _useCommonClassName.SIZE;
      var btnRef = vue.ref();
      useRipple(btnRef);
      var isDisabled = useDisabled();
      var mergeTheme = vue.computed(function() {
        var theme = props2.theme, variant = props2.variant;
        if (theme) return theme;
        if (variant === "base") return "primary";
        return "default";
      });
      var buttonClass = vue.computed(function() {
        return ["".concat(COMPONENT_NAME.value), "".concat(COMPONENT_NAME.value, "--variant-").concat(props2.variant), "".concat(COMPONENT_NAME.value, "--theme-").concat(mergeTheme.value), _defineProperty$2(_defineProperty$2(_defineProperty$2(_defineProperty$2(_defineProperty$2(_defineProperty$2({}, SIZE.value[props2.size], props2.size !== "medium"), STATUS.value.disabled, isDisabled.value), STATUS.value.loading, props2.loading), "".concat(COMPONENT_NAME.value, "--shape-").concat(props2.shape), props2.shape !== "rectangle"), "".concat(COMPONENT_NAME.value, "--ghost"), props2.ghost), SIZE.value.block, props2.block)];
      });
      return function() {
        var buttonContent = renderContent3("default", "content");
        var icon = props2.loading ? vue.createVNode(Loading, _objectSpread$s({
          inheritColor: true
        }, props2.loadingProps), null) : renderTNodeJSX3("icon");
        var iconOnly = icon && !buttonContent;
        var suffix2 = props2.suffix || slots.suffix ? vue.createVNode("span", {
          "className": "".concat(COMPONENT_NAME.value, "__suffix")
        }, [renderTNodeJSX3("suffix")]) : null;
        buttonContent = buttonContent ? vue.createVNode("span", {
          "class": "".concat(COMPONENT_NAME.value, "__text")
        }, [buttonContent]) : "";
        if (icon) {
          buttonContent = [icon, buttonContent];
        }
        if (suffix2) {
          buttonContent = [buttonContent].concat(suffix2);
        }
        var renderTag = function renderTag2() {
          if (!props2.tag && props2.href) return "a";
          return props2.tag || "button";
        };
        var buttonAttrs = {
          "class": [].concat(_toConsumableArray(buttonClass.value), [_defineProperty$2({}, "".concat(COMPONENT_NAME.value, "--icon-only"), iconOnly)]),
          type: props2.type,
          disabled: isDisabled.value || props2.loading,
          href: props2.href,
          tabindex: isDisabled.value ? void 0 : "0"
        };
        return vue.h(renderTag(), _objectSpread$s(_objectSpread$s(_objectSpread$s({
          ref: btnRef
        }, attrs), buttonAttrs), {}, {
          onClick: props2.onClick
        }), [buttonContent]);
      };
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var Button = withInstall(TButton);
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  function ownKeys$r(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      enumerableOnly && (symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      })), keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$r(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = null != arguments[i] ? arguments[i] : {};
      i % 2 ? ownKeys$r(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$r(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
    return target;
  }
  function camel2Kebab(camelString) {
    var covertArr = ["fillOpacity", "fillRule", "clipRule"];
    if (covertArr.includes(camelString)) {
      return camelString.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, "$1-$2").toLowerCase();
    }
    return camelString;
  }
  function renderFn(node, props2) {
    var kebabAttrs = Object.keys(node.attrs).reduce((result, key) => {
      result[camel2Kebab(key)] = node.attrs[key];
      return result;
    }, {});
    return vue.h(node.tag, _objectSpread$r(_objectSpread$r({}, kebabAttrs), props2), (node.children || []).map((child) => renderFn(child, {})));
  }
  var DEFAULT_CLASS_PREFIX = "t";
  var DEFAULT_LOCALE = "zh-CN";
  var ConfigContext = {
    classPrefix: DEFAULT_CLASS_PREFIX,
    locale: DEFAULT_LOCALE
  };
  function useCommonClassName$1() {
    var {
      classPrefix
    } = ConfigContext;
    return {
      SIZE: {
        default: "",
        xs: "".concat(classPrefix, "-size-xs"),
        small: "".concat(classPrefix, "-size-s"),
        medium: "".concat(classPrefix, "-size-m"),
        large: "".concat(classPrefix, "-size-l"),
        xl: "".concat(classPrefix, "-size-xl"),
        block: "".concat(classPrefix, "-size-full-width")
      },
      STATUS: {
        loading: "".concat(classPrefix, "-is-loading"),
        disabled: "".concat(classPrefix, "-is-disabled"),
        focused: "".concat(classPrefix, "-is-focused"),
        success: "".concat(classPrefix, "-is-success"),
        error: "".concat(classPrefix, "-is-error"),
        warning: "".concat(classPrefix, "-is-warning"),
        selected: "".concat(classPrefix, "-is-selected"),
        active: "".concat(classPrefix, "-is-active"),
        checked: "".concat(classPrefix, "-is-checked"),
        current: "".concat(classPrefix, "-is-current"),
        hidden: "".concat(classPrefix, "-is-hidden"),
        visible: "".concat(classPrefix, "-is-visible"),
        expanded: "".concat(classPrefix, "-is-expanded"),
        indeterminate: "".concat(classPrefix, "-is-indeterminate")
      }
    };
  }
  function useSizeProps(size) {
    var COMMON_SIZE_CLASS_NAMES = useCommonClassName$1().SIZE;
    var className = vue.computed(() => {
      if (size.value in COMMON_SIZE_CLASS_NAMES) {
        return COMMON_SIZE_CLASS_NAMES[size.value];
      }
      return "";
    });
    var style = vue.computed(() => {
      if (size.value === void 0 || size.value in COMMON_SIZE_CLASS_NAMES) {
        return {};
      }
      return {
        fontSize: size.value
      };
    });
    return {
      style,
      className
    };
  }
  function ownKeys$q(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      enumerableOnly && (symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      })), keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$q(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = null != arguments[i] ? arguments[i] : {};
      i % 2 ? ownKeys$q(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$q(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
    return target;
  }
  var element$8 = {
    "tag": "svg",
    "attrs": {
      "fill": "none",
      "viewBox": "0 0 24 24",
      "width": "1em",
      "height": "1em"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "fill": "currentColor",
        "d": "M13 4v7h7v2h-7v7h-2v-7H4v-2h7V4h2z"
      }
    }]
  };
  var add$1 = vue.defineComponent({
    name: "AddIcon",
    props: {
      size: {
        type: String
      },
      onClick: {
        type: Function
      }
    },
    setup(props2, _ref) {
      var {
        attrs
      } = _ref;
      var propsSize = vue.computed(() => props2.size);
      var {
        className,
        style
      } = useSizeProps(propsSize);
      var finalCls = vue.computed(() => ["t-icon", "t-icon-add", className.value]);
      var finalStyle = vue.computed(() => _objectSpread$q(_objectSpread$q({}, style.value), attrs.style));
      var finalProps = vue.computed(() => ({
        class: finalCls.value,
        style: finalStyle.value,
        onClick: (e) => {
          var _props$onClick;
          return (_props$onClick = props2.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props2, {
            e
          });
        }
      }));
      return () => renderFn(element$8, finalProps.value);
    }
  });
  function ownKeys$p(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      enumerableOnly && (symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      })), keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$p(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = null != arguments[i] ? arguments[i] : {};
      i % 2 ? ownKeys$p(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$p(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
    return target;
  }
  var element$7 = {
    "tag": "svg",
    "attrs": {
      "fill": "none",
      "viewBox": "0 0 26 24",
      "width": "1em",
      "height": "1em"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "fill": "currentColor",
        "d": "M4 1.59l6.17 6.17 7.07 7.07L23.41 21 22 22.41l-2.97-2.96A12.5 12.5 0 011.08 12.3L1 12l.1-.3c.77-2.4 2.24-4.5 4.18-6.02L2.59 3 4 1.59zM6.7 7.1A10.53 10.53 0 003.1 12a10.5 10.5 0 0014.45 5.97l-1.8-1.8a5 5 0 01-6.93-6.93L6.7 7.11zm3.6 3.6a3 3 0 004 4l-4-4zM13 5c-.58 0-1.14.05-1.7.14l-.98.16L10 3.32l.99-.16A12.5 12.5 0 0124.9 11.7l.1.31-.1.3c-.41 1.3-1.03 2.5-1.82 3.58l-.59.8-1.61-1.18.59-.8c.6-.82 1.08-1.73 1.42-2.7A10.5 10.5 0 0013 5zm.51 1.93l.96.29a5 5 0 013.31 3.31l.3.96-1.92.58-.3-.95a3 3 0 00-1.98-1.99l-.95-.3.58-1.9z"
      }
    }]
  };
  var browseOff = vue.defineComponent({
    name: "BrowseOffIcon",
    props: {
      size: {
        type: String
      },
      onClick: {
        type: Function
      }
    },
    setup(props2, _ref) {
      var {
        attrs
      } = _ref;
      var propsSize = vue.computed(() => props2.size);
      var {
        className,
        style
      } = useSizeProps(propsSize);
      var finalCls = vue.computed(() => ["t-icon", "t-icon-browse-off", className.value]);
      var finalStyle = vue.computed(() => _objectSpread$p(_objectSpread$p({}, style.value), attrs.style));
      var finalProps = vue.computed(() => ({
        class: finalCls.value,
        style: finalStyle.value,
        onClick: (e) => {
          var _props$onClick;
          return (_props$onClick = props2.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props2, {
            e
          });
        }
      }));
      return () => renderFn(element$7, finalProps.value);
    }
  });
  function ownKeys$o(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      enumerableOnly && (symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      })), keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$o(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = null != arguments[i] ? arguments[i] : {};
      i % 2 ? ownKeys$o(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$o(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
    return target;
  }
  var element$6 = {
    "tag": "svg",
    "attrs": {
      "fill": "none",
      "viewBox": "0 0 24 24",
      "width": "1em",
      "height": "1em"
    },
    "children": [{
      "tag": "g",
      "attrs": {
        "clipPath": "url(#clip0_8726_7319)"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "fill": "currentColor",
          "d": "M2.1 12a10.5 10.5 0 0019.8 0 10.5 10.5 0 00-19.8 0zm-2.01-.3a12.5 12.5 0 0123.82 0l.1.3-.1.3a12.5 12.5 0 01-23.82 0l-.1-.3.1-.3zM12 9a3 3 0 100 6 3 3 0 000-6zm-5 3a5 5 0 1110 0 5 5 0 01-10 0z"
        }
      }]
    }]
  };
  var browse = vue.defineComponent({
    name: "BrowseIcon",
    props: {
      size: {
        type: String
      },
      onClick: {
        type: Function
      }
    },
    setup(props2, _ref) {
      var {
        attrs
      } = _ref;
      var propsSize = vue.computed(() => props2.size);
      var {
        className,
        style
      } = useSizeProps(propsSize);
      var finalCls = vue.computed(() => ["t-icon", "t-icon-browse", className.value]);
      var finalStyle = vue.computed(() => _objectSpread$o(_objectSpread$o({}, style.value), attrs.style));
      var finalProps = vue.computed(() => ({
        class: finalCls.value,
        style: finalStyle.value,
        onClick: (e) => {
          var _props$onClick;
          return (_props$onClick = props2.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props2, {
            e
          });
        }
      }));
      return () => renderFn(element$6, finalProps.value);
    }
  });
  function ownKeys$n(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      enumerableOnly && (symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      })), keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$n(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = null != arguments[i] ? arguments[i] : {};
      i % 2 ? ownKeys$n(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$n(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
    return target;
  }
  var element$5 = {
    "tag": "svg",
    "attrs": {
      "fill": "none",
      "viewBox": "0 0 24 24",
      "width": "1em",
      "height": "1em"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "fill": "currentColor",
        "d": "M17.5 8.09l-5.5 5.5-5.5-5.5L5.09 9.5 12 16.41l6.91-6.91-1.41-1.41z"
      }
    }]
  };
  var chevronDown = vue.defineComponent({
    name: "ChevronDownIcon",
    props: {
      size: {
        type: String
      },
      onClick: {
        type: Function
      }
    },
    setup(props2, _ref) {
      var {
        attrs
      } = _ref;
      var propsSize = vue.computed(() => props2.size);
      var {
        className,
        style
      } = useSizeProps(propsSize);
      var finalCls = vue.computed(() => ["t-icon", "t-icon-chevron-down", className.value]);
      var finalStyle = vue.computed(() => _objectSpread$n(_objectSpread$n({}, style.value), attrs.style));
      var finalProps = vue.computed(() => ({
        class: finalCls.value,
        style: finalStyle.value,
        onClick: (e) => {
          var _props$onClick;
          return (_props$onClick = props2.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props2, {
            e
          });
        }
      }));
      return () => renderFn(element$5, finalProps.value);
    }
  });
  function ownKeys$m(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      enumerableOnly && (symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      })), keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$m(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = null != arguments[i] ? arguments[i] : {};
      i % 2 ? ownKeys$m(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$m(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
    return target;
  }
  var element$4 = {
    "tag": "svg",
    "attrs": {
      "fill": "none",
      "viewBox": "0 0 24 24",
      "width": "1em",
      "height": "1em"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "fill": "currentColor",
        "d": "M17.5 15.91l-5.5-5.5-5.5 5.5-1.41-1.41L12 7.59l6.91 6.91-1.41 1.41z"
      }
    }]
  };
  var chevronUp = vue.defineComponent({
    name: "ChevronUpIcon",
    props: {
      size: {
        type: String
      },
      onClick: {
        type: Function
      }
    },
    setup(props2, _ref) {
      var {
        attrs
      } = _ref;
      var propsSize = vue.computed(() => props2.size);
      var {
        className,
        style
      } = useSizeProps(propsSize);
      var finalCls = vue.computed(() => ["t-icon", "t-icon-chevron-up", className.value]);
      var finalStyle = vue.computed(() => _objectSpread$m(_objectSpread$m({}, style.value), attrs.style));
      var finalProps = vue.computed(() => ({
        class: finalCls.value,
        style: finalStyle.value,
        onClick: (e) => {
          var _props$onClick;
          return (_props$onClick = props2.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props2, {
            e
          });
        }
      }));
      return () => renderFn(element$4, finalProps.value);
    }
  });
  function ownKeys$l(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      enumerableOnly && (symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      })), keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$l(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = null != arguments[i] ? arguments[i] : {};
      i % 2 ? ownKeys$l(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$l(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
    return target;
  }
  var element$3 = {
    "tag": "svg",
    "attrs": {
      "fill": "none",
      "viewBox": "0 0 24 24",
      "width": "1em",
      "height": "1em"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "fill": "currentColor",
        "d": "M12 23a11 11 0 100-22 11 11 0 000 22zM8.82 7.4L12 10.6l3.18-3.19 1.42 1.42L13.4 12l3.19 3.18-1.42 1.42L12 13.4 8.82 16.6 7.4 15.18 10.6 12 7.4 8.82 8.82 7.4z"
      }
    }]
  };
  var closeCircleFilled = vue.defineComponent({
    name: "CloseCircleFilledIcon",
    props: {
      size: {
        type: String
      },
      onClick: {
        type: Function
      }
    },
    setup(props2, _ref) {
      var {
        attrs
      } = _ref;
      var propsSize = vue.computed(() => props2.size);
      var {
        className,
        style
      } = useSizeProps(propsSize);
      var finalCls = vue.computed(() => ["t-icon", "t-icon-close-circle-filled", className.value]);
      var finalStyle = vue.computed(() => _objectSpread$l(_objectSpread$l({}, style.value), attrs.style));
      var finalProps = vue.computed(() => ({
        class: finalCls.value,
        style: finalStyle.value,
        onClick: (e) => {
          var _props$onClick;
          return (_props$onClick = props2.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props2, {
            e
          });
        }
      }));
      return () => renderFn(element$3, finalProps.value);
    }
  });
  function ownKeys$k(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      enumerableOnly && (symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      })), keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$k(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = null != arguments[i] ? arguments[i] : {};
      i % 2 ? ownKeys$k(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$k(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
    return target;
  }
  var element$2 = {
    "tag": "svg",
    "attrs": {
      "fill": "none",
      "viewBox": "0 0 24 24",
      "width": "1em",
      "height": "1em"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "fill": "currentColor",
        "d": "M7.05 5.64L12 10.59l4.95-4.95 1.41 1.41L13.41 12l4.95 4.95-1.41 1.41L12 13.41l-4.95 4.95-1.41-1.41L10.59 12 5.64 7.05l1.41-1.41z"
      }
    }]
  };
  var close = vue.defineComponent({
    name: "CloseIcon",
    props: {
      size: {
        type: String
      },
      onClick: {
        type: Function
      }
    },
    setup(props2, _ref) {
      var {
        attrs
      } = _ref;
      var propsSize = vue.computed(() => props2.size);
      var {
        className,
        style
      } = useSizeProps(propsSize);
      var finalCls = vue.computed(() => ["t-icon", "t-icon-close", className.value]);
      var finalStyle = vue.computed(() => _objectSpread$k(_objectSpread$k({}, style.value), attrs.style));
      var finalProps = vue.computed(() => ({
        class: finalCls.value,
        style: finalStyle.value,
        onClick: (e) => {
          var _props$onClick;
          return (_props$onClick = props2.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props2, {
            e
          });
        }
      }));
      return () => renderFn(element$2, finalProps.value);
    }
  });
  function ownKeys$j(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      enumerableOnly && (symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      })), keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$j(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = null != arguments[i] ? arguments[i] : {};
      i % 2 ? ownKeys$j(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$j(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
    return target;
  }
  var element$1 = {
    "tag": "svg",
    "attrs": {
      "fill": "none",
      "viewBox": "0 0 24 24",
      "width": "1em",
      "height": "1em"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "fill": "currentColor",
        "d": "M4 11h16v2H4v-2z"
      }
    }]
  };
  var remove = vue.defineComponent({
    name: "RemoveIcon",
    props: {
      size: {
        type: String
      },
      onClick: {
        type: Function
      }
    },
    setup(props2, _ref) {
      var {
        attrs
      } = _ref;
      var propsSize = vue.computed(() => props2.size);
      var {
        className,
        style
      } = useSizeProps(propsSize);
      var finalCls = vue.computed(() => ["t-icon", "t-icon-remove", className.value]);
      var finalStyle = vue.computed(() => _objectSpread$j(_objectSpread$j({}, style.value), attrs.style));
      var finalProps = vue.computed(() => ({
        class: finalCls.value,
        style: finalStyle.value,
        onClick: (e) => {
          var _props$onClick;
          return (_props$onClick = props2.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props2, {
            e
          });
        }
      }));
      return () => renderFn(element$1, finalProps.value);
    }
  });
  function ownKeys$i(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      enumerableOnly && (symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      })), keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$i(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = null != arguments[i] ? arguments[i] : {};
      i % 2 ? ownKeys$i(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$i(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
    return target;
  }
  var element = {
    "tag": "svg",
    "attrs": {
      "fill": "none",
      "viewBox": "0 0 24 24",
      "width": "1em",
      "height": "1em"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "fill": "currentColor",
        "d": "M9.18 1h5.64l.65 3.24a8.5 8.5 0 011.52.88l3.13-1.06 2.82 4.88-2.49 2.18a8.58 8.58 0 010 1.76l2.49 2.18-2.82 4.88-3.13-1.06a8.5 8.5 0 01-1.52.88L14.82 23H9.18l-.65-3.24a8.5 8.5 0 01-1.52-.88l-3.13 1.06-2.82-4.88 2.48-2.18a8.59 8.59 0 010-1.76L1.06 8.94l2.82-4.88 3.13 1.06a8.5 8.5 0 011.52-.88L9.18 1zm1.64 2l-.54 2.7-.53.2A6.5 6.5 0 007.85 7l-.44.36-2.61-.88-1.18 2.04 2.07 1.82-.1.55a6.55 6.55 0 000 2.22l.1.55-2.07 1.82 1.18 2.04 2.61-.88.43.36a6.5 6.5 0 001.91 1.1l.53.2.54 2.7h2.36l.54-2.7.53-.2a6.5 6.5 0 001.9-1.1l.44-.36 2.61.88 1.18-2.04-2.07-1.82.1-.55a6.55 6.55 0 000-2.22l-.1-.55 2.07-1.82-1.18-2.04-2.61.88-.43-.36a6.5 6.5 0 00-1.91-1.1l-.53-.2-.54-2.7h-2.36zM12 9a3 3 0 100 6 3 3 0 000-6zm-5 3a5 5 0 1110 0 5 5 0 01-10 0z"
      }
    }]
  };
  var setting1 = vue.defineComponent({
    name: "Setting1Icon",
    props: {
      size: {
        type: String
      },
      onClick: {
        type: Function
      }
    },
    setup(props2, _ref) {
      var {
        attrs
      } = _ref;
      var propsSize = vue.computed(() => props2.size);
      var {
        className,
        style
      } = useSizeProps(propsSize);
      var finalCls = vue.computed(() => ["t-icon", "t-icon-setting-1", className.value]);
      var finalStyle = vue.computed(() => _objectSpread$i(_objectSpread$i({}, style.value), attrs.style));
      var finalProps = vue.computed(() => ({
        class: finalCls.value,
        style: finalStyle.value,
        onClick: (e) => {
          var _props$onClick;
          return (_props$onClick = props2.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props2, {
            e
          });
        }
      }));
      return () => renderFn(element, finalProps.value);
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props$c = {
    align: {
      type: String,
      validator: function validator7(val) {
        if (!val) return true;
        return ["start", "end", "center", "baseline"].includes(val);
      }
    },
    breakLine: Boolean,
    direction: {
      type: String,
      "default": "horizontal",
      validator: function validator8(val) {
        if (!val) return true;
        return ["vertical", "horizontal"].includes(val);
      }
    },
    separator: {
      type: [String, Function]
    },
    size: {
      type: [String, Number, Array],
      "default": "medium"
    }
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useChildComponentSlots() {
    var instance = vue.getCurrentInstance();
    return function(childComponentName, slots) {
      var _slots, _slots$default;
      if (!slots) {
        slots = instance.slots;
      }
      var content = ((_slots = slots) === null || _slots === void 0 || (_slots$default = _slots["default"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(_slots)) || [];
      var childList = [];
      var getChildren = function getChildren2(content2) {
        if (!isArray_1(content2)) return;
        content2.forEach(function(item) {
          if (item.children && isArray_1(item.children)) {
            if (item.type !== vue.Fragment) return;
            getChildren2(item.children);
          } else {
            childList.push(item);
          }
        });
        return childList;
      };
      return getChildren(content).filter(function(item) {
        var _item$type$name;
        return (_item$type$name = item.type.name) === null || _item$type$name === void 0 ? void 0 : _item$type$name.endsWith(childComponentName);
      });
    };
  }
  function useChildSlots() {
    var instance = vue.getCurrentInstance();
    return function() {
      var _slots$default2;
      var slots = instance.slots;
      var content = (slots === null || slots === void 0 || (_slots$default2 = slots["default"]) === null || _slots$default2 === void 0 ? void 0 : _slots$default2.call(slots)) || [];
      return content.filter(function(item) {
        if (_typeof$1(item.type) === "symbol" && !item.children) {
          return false;
        }
        return item.type !== vue.Comment;
      }).map(function(item) {
        if (item.children && isArray_1(item.children) && item.type === vue.Fragment) return item.children;
        return item;
      }).flat();
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$h(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$h(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$h(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$h(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var sizeMap = {
    small: "8px",
    medium: "16px",
    large: "24px"
  };
  var defaultNeedPolyfill = getFlexGapPolyFill();
  var _Space = vue.defineComponent({
    name: "TSpace",
    props: _objectSpread$h(_objectSpread$h({}, props$c), {}, {
      forceFlexGapPolyfill: Boolean
    }),
    setup: function setup4(props2) {
      var COMPONENT_NAME = usePrefixClass("space");
      var renderTNodeJSX3 = useTNodeJSX();
      var getChildSlots = useChildSlots();
      var needPolyfill = vue.computed(function() {
        return props2.forceFlexGapPolyfill || defaultNeedPolyfill;
      });
      var renderStyle = vue.computed(function() {
        var renderGap = "";
        if (isArray_1(props2.size)) {
          renderGap = props2.size.map(function(s) {
            if (isNumber_1(s)) return "".concat(s, "px");
            if (isString_1(s)) return sizeMap[s] || s;
            return s;
          }).join(" ");
        } else if (isString_1(props2.size)) {
          renderGap = sizeMap[props2.size] || props2.size;
        } else if (isNumber_1(props2.size)) {
          renderGap = "".concat(props2.size, "px");
        }
        var style = {};
        if (needPolyfill.value) {
          var _renderGap$split = renderGap.split(" "), _renderGap$split2 = _slicedToArray(_renderGap$split, 2), columnGap = _renderGap$split2[0], rowGap = _renderGap$split2[1];
          style["--td-space-column-gap"] = columnGap;
          style["--td-space-row-gap"] = rowGap || columnGap;
        } else {
          style.gap = renderGap;
        }
        return style;
      });
      function renderChildren() {
        var children = getChildSlots();
        var separatorContent = renderTNodeJSX3("separator");
        return children.map(function(child, index) {
          var showSeparator = index + 1 !== children.length && separatorContent;
          return vue.createVNode(vue.Fragment, null, [vue.createVNode("div", {
            "class": "".concat(COMPONENT_NAME.value, "-item")
          }, [child]), showSeparator && vue.createVNode("div", {
            "class": "".concat(COMPONENT_NAME.value, "-item-separator")
          }, [separatorContent])]);
        });
      }
      return function() {
        var spaceClassNames = ["".concat(COMPONENT_NAME.value), _defineProperty$2(_defineProperty$2(_defineProperty$2(_defineProperty$2({}, "".concat(COMPONENT_NAME.value, "-align-").concat(props2.align), props2.align), "".concat(COMPONENT_NAME.value, "-").concat(props2.direction), props2.direction), "".concat(COMPONENT_NAME.value, "--break-line"), props2.breakLine), "".concat(COMPONENT_NAME.value, "--polyfill"), needPolyfill.value)];
        return vue.createVNode("div", {
          "class": spaceClassNames,
          "style": renderStyle.value
        }, [renderChildren()]);
      };
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var Space = withInstall(_Space);
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useGlobalIcon(tdIcon) {
    var _useConfig = useConfig("icon"), globalConfig = _useConfig.globalConfig;
    var resultIcon = {};
    Object.keys(tdIcon).forEach(function(key) {
      var _globalConfig$value;
      resultIcon[key] = ((_globalConfig$value = globalConfig.value) === null || _globalConfig$value === void 0 ? void 0 : _globalConfig$value[key]) || tdIcon[key];
    });
    return resultIcon;
  }
  var top = "top";
  var bottom = "bottom";
  var right = "right";
  var left = "left";
  var auto = "auto";
  var basePlacements = [top, bottom, right, left];
  var start = "start";
  var end = "end";
  var clippingParents = "clippingParents";
  var viewport = "viewport";
  var popper = "popper";
  var reference = "reference";
  var variationPlacements = /* @__PURE__ */ basePlacements.reduce(function(acc, placement) {
    return acc.concat([placement + "-" + start, placement + "-" + end]);
  }, []);
  var placements = /* @__PURE__ */ [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
    return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
  }, []);
  var beforeRead = "beforeRead";
  var read = "read";
  var afterRead = "afterRead";
  var beforeMain = "beforeMain";
  var main = "main";
  var afterMain = "afterMain";
  var beforeWrite = "beforeWrite";
  var write = "write";
  var afterWrite = "afterWrite";
  var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];
  function getNodeName(element2) {
    return element2 ? (element2.nodeName || "").toLowerCase() : null;
  }
  function getWindow(node) {
    if (node == null) {
      return window;
    }
    if (node.toString() !== "[object Window]") {
      var ownerDocument = node.ownerDocument;
      return ownerDocument ? ownerDocument.defaultView || window : window;
    }
    return node;
  }
  function isElement(node) {
    var OwnElement = getWindow(node).Element;
    return node instanceof OwnElement || node instanceof Element;
  }
  function isHTMLElement(node) {
    var OwnElement = getWindow(node).HTMLElement;
    return node instanceof OwnElement || node instanceof HTMLElement;
  }
  function isShadowRoot(node) {
    if (typeof ShadowRoot === "undefined") {
      return false;
    }
    var OwnElement = getWindow(node).ShadowRoot;
    return node instanceof OwnElement || node instanceof ShadowRoot;
  }
  function applyStyles(_ref) {
    var state = _ref.state;
    Object.keys(state.elements).forEach(function(name) {
      var style = state.styles[name] || {};
      var attributes = state.attributes[name] || {};
      var element2 = state.elements[name];
      if (!isHTMLElement(element2) || !getNodeName(element2)) {
        return;
      }
      Object.assign(element2.style, style);
      Object.keys(attributes).forEach(function(name2) {
        var value = attributes[name2];
        if (value === false) {
          element2.removeAttribute(name2);
        } else {
          element2.setAttribute(name2, value === true ? "" : value);
        }
      });
    });
  }
  function effect$2(_ref2) {
    var state = _ref2.state;
    var initialStyles = {
      popper: {
        position: state.options.strategy,
        left: "0",
        top: "0",
        margin: "0"
      },
      arrow: {
        position: "absolute"
      },
      reference: {}
    };
    Object.assign(state.elements.popper.style, initialStyles.popper);
    state.styles = initialStyles;
    if (state.elements.arrow) {
      Object.assign(state.elements.arrow.style, initialStyles.arrow);
    }
    return function() {
      Object.keys(state.elements).forEach(function(name) {
        var element2 = state.elements[name];
        var attributes = state.attributes[name] || {};
        var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
        var style = styleProperties.reduce(function(style2, property2) {
          style2[property2] = "";
          return style2;
        }, {});
        if (!isHTMLElement(element2) || !getNodeName(element2)) {
          return;
        }
        Object.assign(element2.style, style);
        Object.keys(attributes).forEach(function(attribute) {
          element2.removeAttribute(attribute);
        });
      });
    };
  }
  const applyStyles$1 = {
    name: "applyStyles",
    enabled: true,
    phase: "write",
    fn: applyStyles,
    effect: effect$2,
    requires: ["computeStyles"]
  };
  function getBasePlacement(placement) {
    return placement.split("-")[0];
  }
  var max = Math.max;
  var min = Math.min;
  var round = Math.round;
  function getUAString() {
    var uaData = navigator.userAgentData;
    if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
      return uaData.brands.map(function(item) {
        return item.brand + "/" + item.version;
      }).join(" ");
    }
    return navigator.userAgent;
  }
  function isLayoutViewport() {
    return !/^((?!chrome|android).)*safari/i.test(getUAString());
  }
  function getBoundingClientRect(element2, includeScale, isFixedStrategy) {
    if (includeScale === void 0) {
      includeScale = false;
    }
    if (isFixedStrategy === void 0) {
      isFixedStrategy = false;
    }
    var clientRect = element2.getBoundingClientRect();
    var scaleX = 1;
    var scaleY = 1;
    if (includeScale && isHTMLElement(element2)) {
      scaleX = element2.offsetWidth > 0 ? round(clientRect.width) / element2.offsetWidth || 1 : 1;
      scaleY = element2.offsetHeight > 0 ? round(clientRect.height) / element2.offsetHeight || 1 : 1;
    }
    var _ref = isElement(element2) ? getWindow(element2) : window, visualViewport = _ref.visualViewport;
    var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
    var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
    var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
    var width = clientRect.width / scaleX;
    var height = clientRect.height / scaleY;
    return {
      width,
      height,
      top: y,
      right: x + width,
      bottom: y + height,
      left: x,
      x,
      y
    };
  }
  function getLayoutRect(element2) {
    var clientRect = getBoundingClientRect(element2);
    var width = element2.offsetWidth;
    var height = element2.offsetHeight;
    if (Math.abs(clientRect.width - width) <= 1) {
      width = clientRect.width;
    }
    if (Math.abs(clientRect.height - height) <= 1) {
      height = clientRect.height;
    }
    return {
      x: element2.offsetLeft,
      y: element2.offsetTop,
      width,
      height
    };
  }
  function contains(parent2, child) {
    var rootNode = child.getRootNode && child.getRootNode();
    if (parent2.contains(child)) {
      return true;
    } else if (rootNode && isShadowRoot(rootNode)) {
      var next = child;
      do {
        if (next && parent2.isSameNode(next)) {
          return true;
        }
        next = next.parentNode || next.host;
      } while (next);
    }
    return false;
  }
  function getComputedStyle$1(element2) {
    return getWindow(element2).getComputedStyle(element2);
  }
  function isTableElement(element2) {
    return ["table", "td", "th"].indexOf(getNodeName(element2)) >= 0;
  }
  function getDocumentElement(element2) {
    return ((isElement(element2) ? element2.ownerDocument : (
      // $FlowFixMe[prop-missing]
      element2.document
    )) || window.document).documentElement;
  }
  function getParentNode(element2) {
    if (getNodeName(element2) === "html") {
      return element2;
    }
    return (
      // this is a quicker (but less type safe) way to save quite some bytes from the bundle
      // $FlowFixMe[incompatible-return]
      // $FlowFixMe[prop-missing]
      element2.assignedSlot || // step into the shadow DOM of the parent of a slotted node
      element2.parentNode || // DOM Element detected
      (isShadowRoot(element2) ? element2.host : null) || // ShadowRoot detected
      // $FlowFixMe[incompatible-call]: HTMLElement is a Node
      getDocumentElement(element2)
    );
  }
  function getTrueOffsetParent(element2) {
    if (!isHTMLElement(element2) || // https://github.com/popperjs/popper-core/issues/837
    getComputedStyle$1(element2).position === "fixed") {
      return null;
    }
    return element2.offsetParent;
  }
  function getContainingBlock(element2) {
    var isFirefox = /firefox/i.test(getUAString());
    var isIE = /Trident/i.test(getUAString());
    if (isIE && isHTMLElement(element2)) {
      var elementCss = getComputedStyle$1(element2);
      if (elementCss.position === "fixed") {
        return null;
      }
    }
    var currentNode = getParentNode(element2);
    if (isShadowRoot(currentNode)) {
      currentNode = currentNode.host;
    }
    while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
      var css = getComputedStyle$1(currentNode);
      if (css.transform !== "none" || css.perspective !== "none" || css.contain === "paint" || ["transform", "perspective"].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === "filter" || isFirefox && css.filter && css.filter !== "none") {
        return currentNode;
      } else {
        currentNode = currentNode.parentNode;
      }
    }
    return null;
  }
  function getOffsetParent(element2) {
    var window2 = getWindow(element2);
    var offsetParent = getTrueOffsetParent(element2);
    while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === "static") {
      offsetParent = getTrueOffsetParent(offsetParent);
    }
    if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle$1(offsetParent).position === "static")) {
      return window2;
    }
    return offsetParent || getContainingBlock(element2) || window2;
  }
  function getMainAxisFromPlacement(placement) {
    return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
  }
  function within(min$1, value, max$1) {
    return max(min$1, min(value, max$1));
  }
  function withinMaxClamp(min2, value, max2) {
    var v = within(min2, value, max2);
    return v > max2 ? max2 : v;
  }
  function getFreshSideObject() {
    return {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    };
  }
  function mergePaddingObject(paddingObject) {
    return Object.assign({}, getFreshSideObject(), paddingObject);
  }
  function expandToHashMap(value, keys2) {
    return keys2.reduce(function(hashMap, key) {
      hashMap[key] = value;
      return hashMap;
    }, {});
  }
  var toPaddingObject = function toPaddingObject2(padding, state) {
    padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
      placement: state.placement
    })) : padding;
    return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
  };
  function arrow(_ref) {
    var _state$modifiersData$;
    var state = _ref.state, name = _ref.name, options = _ref.options;
    var arrowElement = state.elements.arrow;
    var popperOffsets2 = state.modifiersData.popperOffsets;
    var basePlacement = getBasePlacement(state.placement);
    var axis = getMainAxisFromPlacement(basePlacement);
    var isVertical = [left, right].indexOf(basePlacement) >= 0;
    var len = isVertical ? "height" : "width";
    if (!arrowElement || !popperOffsets2) {
      return;
    }
    var paddingObject = toPaddingObject(options.padding, state);
    var arrowRect = getLayoutRect(arrowElement);
    var minProp = axis === "y" ? top : left;
    var maxProp = axis === "y" ? bottom : right;
    var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len];
    var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
    var arrowOffsetParent = getOffsetParent(arrowElement);
    var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
    var centerToReference = endDiff / 2 - startDiff / 2;
    var min2 = paddingObject[minProp];
    var max2 = clientSize - arrowRect[len] - paddingObject[maxProp];
    var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
    var offset2 = within(min2, center, max2);
    var axisProp = axis;
    state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
  }
  function effect$1(_ref2) {
    var state = _ref2.state, options = _ref2.options;
    var _options$element = options.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
    if (arrowElement == null) {
      return;
    }
    if (typeof arrowElement === "string") {
      arrowElement = state.elements.popper.querySelector(arrowElement);
      if (!arrowElement) {
        return;
      }
    }
    if (!contains(state.elements.popper, arrowElement)) {
      return;
    }
    state.elements.arrow = arrowElement;
  }
  const arrow$1 = {
    name: "arrow",
    enabled: true,
    phase: "main",
    fn: arrow,
    effect: effect$1,
    requires: ["popperOffsets"],
    requiresIfExists: ["preventOverflow"]
  };
  function getVariation(placement) {
    return placement.split("-")[1];
  }
  var unsetSides = {
    top: "auto",
    right: "auto",
    bottom: "auto",
    left: "auto"
  };
  function roundOffsetsByDPR(_ref, win) {
    var x = _ref.x, y = _ref.y;
    var dpr = win.devicePixelRatio || 1;
    return {
      x: round(x * dpr) / dpr || 0,
      y: round(y * dpr) / dpr || 0
    };
  }
  function mapToStyles(_ref2) {
    var _Object$assign2;
    var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
    var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;
    var _ref3 = typeof roundOffsets === "function" ? roundOffsets({
      x,
      y
    }) : {
      x,
      y
    };
    x = _ref3.x;
    y = _ref3.y;
    var hasX = offsets.hasOwnProperty("x");
    var hasY = offsets.hasOwnProperty("y");
    var sideX = left;
    var sideY = top;
    var win = window;
    if (adaptive) {
      var offsetParent = getOffsetParent(popper2);
      var heightProp = "clientHeight";
      var widthProp = "clientWidth";
      if (offsetParent === getWindow(popper2)) {
        offsetParent = getDocumentElement(popper2);
        if (getComputedStyle$1(offsetParent).position !== "static" && position === "absolute") {
          heightProp = "scrollHeight";
          widthProp = "scrollWidth";
        }
      }
      offsetParent = offsetParent;
      if (placement === top || (placement === left || placement === right) && variation === end) {
        sideY = bottom;
        var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : (
          // $FlowFixMe[prop-missing]
          offsetParent[heightProp]
        );
        y -= offsetY - popperRect.height;
        y *= gpuAcceleration ? 1 : -1;
      }
      if (placement === left || (placement === top || placement === bottom) && variation === end) {
        sideX = right;
        var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : (
          // $FlowFixMe[prop-missing]
          offsetParent[widthProp]
        );
        x -= offsetX - popperRect.width;
        x *= gpuAcceleration ? 1 : -1;
      }
    }
    var commonStyles = Object.assign({
      position
    }, adaptive && unsetSides);
    var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
      x,
      y
    }, getWindow(popper2)) : {
      x,
      y
    };
    x = _ref4.x;
    y = _ref4.y;
    if (gpuAcceleration) {
      var _Object$assign;
      return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
    }
    return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : "", _Object$assign2[sideX] = hasX ? x + "px" : "", _Object$assign2.transform = "", _Object$assign2));
  }
  function computeStyles(_ref5) {
    var state = _ref5.state, options = _ref5.options;
    var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
    var commonStyles = {
      placement: getBasePlacement(state.placement),
      variation: getVariation(state.placement),
      popper: state.elements.popper,
      popperRect: state.rects.popper,
      gpuAcceleration,
      isFixed: state.options.strategy === "fixed"
    };
    if (state.modifiersData.popperOffsets != null) {
      state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
        offsets: state.modifiersData.popperOffsets,
        position: state.options.strategy,
        adaptive,
        roundOffsets
      })));
    }
    if (state.modifiersData.arrow != null) {
      state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
        offsets: state.modifiersData.arrow,
        position: "absolute",
        adaptive: false,
        roundOffsets
      })));
    }
    state.attributes.popper = Object.assign({}, state.attributes.popper, {
      "data-popper-placement": state.placement
    });
  }
  const computeStyles$1 = {
    name: "computeStyles",
    enabled: true,
    phase: "beforeWrite",
    fn: computeStyles,
    data: {}
  };
  var passive = {
    passive: true
  };
  function effect(_ref) {
    var state = _ref.state, instance = _ref.instance, options = _ref.options;
    var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
    var window2 = getWindow(state.elements.popper);
    var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
    if (scroll) {
      scrollParents.forEach(function(scrollParent) {
        scrollParent.addEventListener("scroll", instance.update, passive);
      });
    }
    if (resize) {
      window2.addEventListener("resize", instance.update, passive);
    }
    return function() {
      if (scroll) {
        scrollParents.forEach(function(scrollParent) {
          scrollParent.removeEventListener("scroll", instance.update, passive);
        });
      }
      if (resize) {
        window2.removeEventListener("resize", instance.update, passive);
      }
    };
  }
  const eventListeners = {
    name: "eventListeners",
    enabled: true,
    phase: "write",
    fn: function fn() {
    },
    effect,
    data: {}
  };
  var hash$1 = {
    left: "right",
    right: "left",
    bottom: "top",
    top: "bottom"
  };
  function getOppositePlacement(placement) {
    return placement.replace(/left|right|bottom|top/g, function(matched) {
      return hash$1[matched];
    });
  }
  var hash = {
    start: "end",
    end: "start"
  };
  function getOppositeVariationPlacement(placement) {
    return placement.replace(/start|end/g, function(matched) {
      return hash[matched];
    });
  }
  function getWindowScroll(node) {
    var win = getWindow(node);
    var scrollLeft = win.pageXOffset;
    var scrollTop = win.pageYOffset;
    return {
      scrollLeft,
      scrollTop
    };
  }
  function getWindowScrollBarX(element2) {
    return getBoundingClientRect(getDocumentElement(element2)).left + getWindowScroll(element2).scrollLeft;
  }
  function getViewportRect(element2, strategy) {
    var win = getWindow(element2);
    var html = getDocumentElement(element2);
    var visualViewport = win.visualViewport;
    var width = html.clientWidth;
    var height = html.clientHeight;
    var x = 0;
    var y = 0;
    if (visualViewport) {
      width = visualViewport.width;
      height = visualViewport.height;
      var layoutViewport = isLayoutViewport();
      if (layoutViewport || !layoutViewport && strategy === "fixed") {
        x = visualViewport.offsetLeft;
        y = visualViewport.offsetTop;
      }
    }
    return {
      width,
      height,
      x: x + getWindowScrollBarX(element2),
      y
    };
  }
  function getDocumentRect(element2) {
    var _element$ownerDocumen;
    var html = getDocumentElement(element2);
    var winScroll = getWindowScroll(element2);
    var body = (_element$ownerDocumen = element2.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
    var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
    var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
    var x = -winScroll.scrollLeft + getWindowScrollBarX(element2);
    var y = -winScroll.scrollTop;
    if (getComputedStyle$1(body || html).direction === "rtl") {
      x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
    }
    return {
      width,
      height,
      x,
      y
    };
  }
  function isScrollParent(element2) {
    var _getComputedStyle = getComputedStyle$1(element2), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
    return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
  }
  function getScrollParent(node) {
    if (["html", "body", "#document"].indexOf(getNodeName(node)) >= 0) {
      return node.ownerDocument.body;
    }
    if (isHTMLElement(node) && isScrollParent(node)) {
      return node;
    }
    return getScrollParent(getParentNode(node));
  }
  function listScrollParents(element2, list) {
    var _element$ownerDocumen;
    if (list === void 0) {
      list = [];
    }
    var scrollParent = getScrollParent(element2);
    var isBody = scrollParent === ((_element$ownerDocumen = element2.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
    var win = getWindow(scrollParent);
    var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
    var updatedList = list.concat(target);
    return isBody ? updatedList : (
      // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
      updatedList.concat(listScrollParents(getParentNode(target)))
    );
  }
  function rectToClientRect(rect) {
    return Object.assign({}, rect, {
      left: rect.x,
      top: rect.y,
      right: rect.x + rect.width,
      bottom: rect.y + rect.height
    });
  }
  function getInnerBoundingClientRect(element2, strategy) {
    var rect = getBoundingClientRect(element2, false, strategy === "fixed");
    rect.top = rect.top + element2.clientTop;
    rect.left = rect.left + element2.clientLeft;
    rect.bottom = rect.top + element2.clientHeight;
    rect.right = rect.left + element2.clientWidth;
    rect.width = element2.clientWidth;
    rect.height = element2.clientHeight;
    rect.x = rect.left;
    rect.y = rect.top;
    return rect;
  }
  function getClientRectFromMixedType(element2, clippingParent, strategy) {
    return clippingParent === viewport ? rectToClientRect(getViewportRect(element2, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element2)));
  }
  function getClippingParents(element2) {
    var clippingParents2 = listScrollParents(getParentNode(element2));
    var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle$1(element2).position) >= 0;
    var clipperElement = canEscapeClipping && isHTMLElement(element2) ? getOffsetParent(element2) : element2;
    if (!isElement(clipperElement)) {
      return [];
    }
    return clippingParents2.filter(function(clippingParent) {
      return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
    });
  }
  function getClippingRect(element2, boundary, rootBoundary, strategy) {
    var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element2) : [].concat(boundary);
    var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
    var firstClippingParent = clippingParents2[0];
    var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
      var rect = getClientRectFromMixedType(element2, clippingParent, strategy);
      accRect.top = max(rect.top, accRect.top);
      accRect.right = min(rect.right, accRect.right);
      accRect.bottom = min(rect.bottom, accRect.bottom);
      accRect.left = max(rect.left, accRect.left);
      return accRect;
    }, getClientRectFromMixedType(element2, firstClippingParent, strategy));
    clippingRect.width = clippingRect.right - clippingRect.left;
    clippingRect.height = clippingRect.bottom - clippingRect.top;
    clippingRect.x = clippingRect.left;
    clippingRect.y = clippingRect.top;
    return clippingRect;
  }
  function computeOffsets(_ref) {
    var reference2 = _ref.reference, element2 = _ref.element, placement = _ref.placement;
    var basePlacement = placement ? getBasePlacement(placement) : null;
    var variation = placement ? getVariation(placement) : null;
    var commonX = reference2.x + reference2.width / 2 - element2.width / 2;
    var commonY = reference2.y + reference2.height / 2 - element2.height / 2;
    var offsets;
    switch (basePlacement) {
      case top:
        offsets = {
          x: commonX,
          y: reference2.y - element2.height
        };
        break;
      case bottom:
        offsets = {
          x: commonX,
          y: reference2.y + reference2.height
        };
        break;
      case right:
        offsets = {
          x: reference2.x + reference2.width,
          y: commonY
        };
        break;
      case left:
        offsets = {
          x: reference2.x - element2.width,
          y: commonY
        };
        break;
      default:
        offsets = {
          x: reference2.x,
          y: reference2.y
        };
    }
    var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
    if (mainAxis != null) {
      var len = mainAxis === "y" ? "height" : "width";
      switch (variation) {
        case start:
          offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element2[len] / 2);
          break;
        case end:
          offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element2[len] / 2);
          break;
      }
    }
    return offsets;
  }
  function detectOverflow(state, options) {
    if (options === void 0) {
      options = {};
    }
    var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
    var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
    var altContext = elementContext === popper ? reference : popper;
    var popperRect = state.rects.popper;
    var element2 = state.elements[altBoundary ? altContext : elementContext];
    var clippingClientRect = getClippingRect(isElement(element2) ? element2 : element2.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
    var referenceClientRect = getBoundingClientRect(state.elements.reference);
    var popperOffsets2 = computeOffsets({
      reference: referenceClientRect,
      element: popperRect,
      strategy: "absolute",
      placement
    });
    var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
    var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
    var overflowOffsets = {
      top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
      bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
      left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
      right: elementClientRect.right - clippingClientRect.right + paddingObject.right
    };
    var offsetData = state.modifiersData.offset;
    if (elementContext === popper && offsetData) {
      var offset2 = offsetData[placement];
      Object.keys(overflowOffsets).forEach(function(key) {
        var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
        var axis = [top, bottom].indexOf(key) >= 0 ? "y" : "x";
        overflowOffsets[key] += offset2[axis] * multiply;
      });
    }
    return overflowOffsets;
  }
  function computeAutoPlacement(state, options) {
    if (options === void 0) {
      options = {};
    }
    var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
    var variation = getVariation(placement);
    var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
      return getVariation(placement2) === variation;
    }) : basePlacements;
    var allowedPlacements = placements$1.filter(function(placement2) {
      return allowedAutoPlacements.indexOf(placement2) >= 0;
    });
    if (allowedPlacements.length === 0) {
      allowedPlacements = placements$1;
    }
    var overflows = allowedPlacements.reduce(function(acc, placement2) {
      acc[placement2] = detectOverflow(state, {
        placement: placement2,
        boundary,
        rootBoundary,
        padding
      })[getBasePlacement(placement2)];
      return acc;
    }, {});
    return Object.keys(overflows).sort(function(a, b) {
      return overflows[a] - overflows[b];
    });
  }
  function getExpandedFallbackPlacements(placement) {
    if (getBasePlacement(placement) === auto) {
      return [];
    }
    var oppositePlacement = getOppositePlacement(placement);
    return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
  }
  function flip$1(_ref) {
    var state = _ref.state, options = _ref.options, name = _ref.name;
    if (state.modifiersData[name]._skip) {
      return;
    }
    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
    var preferredPlacement = state.options.placement;
    var basePlacement = getBasePlacement(preferredPlacement);
    var isBasePlacement = basePlacement === preferredPlacement;
    var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
    var placements2 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
      return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
        placement: placement2,
        boundary,
        rootBoundary,
        padding,
        flipVariations,
        allowedAutoPlacements
      }) : placement2);
    }, []);
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var checksMap = /* @__PURE__ */ new Map();
    var makeFallbackChecks = true;
    var firstFittingPlacement = placements2[0];
    for (var i = 0; i < placements2.length; i++) {
      var placement = placements2[i];
      var _basePlacement = getBasePlacement(placement);
      var isStartVariation = getVariation(placement) === start;
      var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
      var len = isVertical ? "width" : "height";
      var overflow = detectOverflow(state, {
        placement,
        boundary,
        rootBoundary,
        altBoundary,
        padding
      });
      var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
      if (referenceRect[len] > popperRect[len]) {
        mainVariationSide = getOppositePlacement(mainVariationSide);
      }
      var altVariationSide = getOppositePlacement(mainVariationSide);
      var checks = [];
      if (checkMainAxis) {
        checks.push(overflow[_basePlacement] <= 0);
      }
      if (checkAltAxis) {
        checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
      }
      if (checks.every(function(check) {
        return check;
      })) {
        firstFittingPlacement = placement;
        makeFallbackChecks = false;
        break;
      }
      checksMap.set(placement, checks);
    }
    if (makeFallbackChecks) {
      var numberOfChecks = flipVariations ? 3 : 1;
      var _loop = function _loop2(_i2) {
        var fittingPlacement = placements2.find(function(placement2) {
          var checks2 = checksMap.get(placement2);
          if (checks2) {
            return checks2.slice(0, _i2).every(function(check) {
              return check;
            });
          }
        });
        if (fittingPlacement) {
          firstFittingPlacement = fittingPlacement;
          return "break";
        }
      };
      for (var _i = numberOfChecks; _i > 0; _i--) {
        var _ret = _loop(_i);
        if (_ret === "break") break;
      }
    }
    if (state.placement !== firstFittingPlacement) {
      state.modifiersData[name]._skip = true;
      state.placement = firstFittingPlacement;
      state.reset = true;
    }
  }
  const flip$2 = {
    name: "flip",
    enabled: true,
    phase: "main",
    fn: flip$1,
    requiresIfExists: ["offset"],
    data: {
      _skip: false
    }
  };
  function getSideOffsets(overflow, rect, preventedOffsets) {
    if (preventedOffsets === void 0) {
      preventedOffsets = {
        x: 0,
        y: 0
      };
    }
    return {
      top: overflow.top - rect.height - preventedOffsets.y,
      right: overflow.right - rect.width + preventedOffsets.x,
      bottom: overflow.bottom - rect.height + preventedOffsets.y,
      left: overflow.left - rect.width - preventedOffsets.x
    };
  }
  function isAnySideFullyClipped(overflow) {
    return [top, right, bottom, left].some(function(side) {
      return overflow[side] >= 0;
    });
  }
  function hide(_ref) {
    var state = _ref.state, name = _ref.name;
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var preventedOffsets = state.modifiersData.preventOverflow;
    var referenceOverflow = detectOverflow(state, {
      elementContext: "reference"
    });
    var popperAltOverflow = detectOverflow(state, {
      altBoundary: true
    });
    var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
    var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
    var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
    var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
    state.modifiersData[name] = {
      referenceClippingOffsets,
      popperEscapeOffsets,
      isReferenceHidden,
      hasPopperEscaped
    };
    state.attributes.popper = Object.assign({}, state.attributes.popper, {
      "data-popper-reference-hidden": isReferenceHidden,
      "data-popper-escaped": hasPopperEscaped
    });
  }
  const hide$1 = {
    name: "hide",
    enabled: true,
    phase: "main",
    requiresIfExists: ["preventOverflow"],
    fn: hide
  };
  function distanceAndSkiddingToXY(placement, rects, offset2) {
    var basePlacement = getBasePlacement(placement);
    var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
    var _ref = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
      placement
    })) : offset2, skidding = _ref[0], distance = _ref[1];
    skidding = skidding || 0;
    distance = (distance || 0) * invertDistance;
    return [left, right].indexOf(basePlacement) >= 0 ? {
      x: distance,
      y: skidding
    } : {
      x: skidding,
      y: distance
    };
  }
  function offset(_ref2) {
    var state = _ref2.state, options = _ref2.options, name = _ref2.name;
    var _options$offset = options.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
    var data = placements.reduce(function(acc, placement) {
      acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
      return acc;
    }, {});
    var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;
    if (state.modifiersData.popperOffsets != null) {
      state.modifiersData.popperOffsets.x += x;
      state.modifiersData.popperOffsets.y += y;
    }
    state.modifiersData[name] = data;
  }
  const offset$1 = {
    name: "offset",
    enabled: true,
    phase: "main",
    requires: ["popperOffsets"],
    fn: offset
  };
  function popperOffsets(_ref) {
    var state = _ref.state, name = _ref.name;
    state.modifiersData[name] = computeOffsets({
      reference: state.rects.reference,
      element: state.rects.popper,
      strategy: "absolute",
      placement: state.placement
    });
  }
  const popperOffsets$1 = {
    name: "popperOffsets",
    enabled: true,
    phase: "read",
    fn: popperOffsets,
    data: {}
  };
  function getAltAxis(axis) {
    return axis === "x" ? "y" : "x";
  }
  function preventOverflow(_ref) {
    var state = _ref.state, options = _ref.options, name = _ref.name;
    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
    var overflow = detectOverflow(state, {
      boundary,
      rootBoundary,
      padding,
      altBoundary
    });
    var basePlacement = getBasePlacement(state.placement);
    var variation = getVariation(state.placement);
    var isBasePlacement = !variation;
    var mainAxis = getMainAxisFromPlacement(basePlacement);
    var altAxis = getAltAxis(mainAxis);
    var popperOffsets2 = state.modifiersData.popperOffsets;
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
      placement: state.placement
    })) : tetherOffset;
    var normalizedTetherOffsetValue = typeof tetherOffsetValue === "number" ? {
      mainAxis: tetherOffsetValue,
      altAxis: tetherOffsetValue
    } : Object.assign({
      mainAxis: 0,
      altAxis: 0
    }, tetherOffsetValue);
    var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
    var data = {
      x: 0,
      y: 0
    };
    if (!popperOffsets2) {
      return;
    }
    if (checkMainAxis) {
      var _offsetModifierState$;
      var mainSide = mainAxis === "y" ? top : left;
      var altSide = mainAxis === "y" ? bottom : right;
      var len = mainAxis === "y" ? "height" : "width";
      var offset2 = popperOffsets2[mainAxis];
      var min$1 = offset2 + overflow[mainSide];
      var max$1 = offset2 - overflow[altSide];
      var additive = tether ? -popperRect[len] / 2 : 0;
      var minLen = variation === start ? referenceRect[len] : popperRect[len];
      var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
      var arrowElement = state.elements.arrow;
      var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
        width: 0,
        height: 0
      };
      var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
      var arrowPaddingMin = arrowPaddingObject[mainSide];
      var arrowPaddingMax = arrowPaddingObject[altSide];
      var arrowLen = within(0, referenceRect[len], arrowRect[len]);
      var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
      var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
      var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
      var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
      var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
      var tetherMin = offset2 + minOffset - offsetModifierValue - clientOffset;
      var tetherMax = offset2 + maxOffset - offsetModifierValue;
      var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset2, tether ? max(max$1, tetherMax) : max$1);
      popperOffsets2[mainAxis] = preventedOffset;
      data[mainAxis] = preventedOffset - offset2;
    }
    if (checkAltAxis) {
      var _offsetModifierState$2;
      var _mainSide = mainAxis === "x" ? top : left;
      var _altSide = mainAxis === "x" ? bottom : right;
      var _offset = popperOffsets2[altAxis];
      var _len = altAxis === "y" ? "height" : "width";
      var _min = _offset + overflow[_mainSide];
      var _max = _offset - overflow[_altSide];
      var isOriginSide = [top, left].indexOf(basePlacement) !== -1;
      var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
      var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
      var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
      var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
      popperOffsets2[altAxis] = _preventedOffset;
      data[altAxis] = _preventedOffset - _offset;
    }
    state.modifiersData[name] = data;
  }
  const preventOverflow$1 = {
    name: "preventOverflow",
    enabled: true,
    phase: "main",
    fn: preventOverflow,
    requiresIfExists: ["offset"]
  };
  function getHTMLElementScroll(element2) {
    return {
      scrollLeft: element2.scrollLeft,
      scrollTop: element2.scrollTop
    };
  }
  function getNodeScroll(node) {
    if (node === getWindow(node) || !isHTMLElement(node)) {
      return getWindowScroll(node);
    } else {
      return getHTMLElementScroll(node);
    }
  }
  function isElementScaled(element2) {
    var rect = element2.getBoundingClientRect();
    var scaleX = round(rect.width) / element2.offsetWidth || 1;
    var scaleY = round(rect.height) / element2.offsetHeight || 1;
    return scaleX !== 1 || scaleY !== 1;
  }
  function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
    if (isFixed === void 0) {
      isFixed = false;
    }
    var isOffsetParentAnElement = isHTMLElement(offsetParent);
    var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
    var documentElement = getDocumentElement(offsetParent);
    var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
    var scroll = {
      scrollLeft: 0,
      scrollTop: 0
    };
    var offsets = {
      x: 0,
      y: 0
    };
    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
      if (getNodeName(offsetParent) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
      isScrollParent(documentElement)) {
        scroll = getNodeScroll(offsetParent);
      }
      if (isHTMLElement(offsetParent)) {
        offsets = getBoundingClientRect(offsetParent, true);
        offsets.x += offsetParent.clientLeft;
        offsets.y += offsetParent.clientTop;
      } else if (documentElement) {
        offsets.x = getWindowScrollBarX(documentElement);
      }
    }
    return {
      x: rect.left + scroll.scrollLeft - offsets.x,
      y: rect.top + scroll.scrollTop - offsets.y,
      width: rect.width,
      height: rect.height
    };
  }
  function order(modifiers) {
    var map = /* @__PURE__ */ new Map();
    var visited = /* @__PURE__ */ new Set();
    var result = [];
    modifiers.forEach(function(modifier) {
      map.set(modifier.name, modifier);
    });
    function sort(modifier) {
      visited.add(modifier.name);
      var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
      requires.forEach(function(dep) {
        if (!visited.has(dep)) {
          var depModifier = map.get(dep);
          if (depModifier) {
            sort(depModifier);
          }
        }
      });
      result.push(modifier);
    }
    modifiers.forEach(function(modifier) {
      if (!visited.has(modifier.name)) {
        sort(modifier);
      }
    });
    return result;
  }
  function orderModifiers(modifiers) {
    var orderedModifiers = order(modifiers);
    return modifierPhases.reduce(function(acc, phase) {
      return acc.concat(orderedModifiers.filter(function(modifier) {
        return modifier.phase === phase;
      }));
    }, []);
  }
  function debounce$1(fn2) {
    var pending;
    return function() {
      if (!pending) {
        pending = new Promise(function(resolve) {
          Promise.resolve().then(function() {
            pending = void 0;
            resolve(fn2());
          });
        });
      }
      return pending;
    };
  }
  function mergeByName(modifiers) {
    var merged = modifiers.reduce(function(merged2, current) {
      var existing = merged2[current.name];
      merged2[current.name] = existing ? Object.assign({}, existing, current, {
        options: Object.assign({}, existing.options, current.options),
        data: Object.assign({}, existing.data, current.data)
      }) : current;
      return merged2;
    }, {});
    return Object.keys(merged).map(function(key) {
      return merged[key];
    });
  }
  var DEFAULT_OPTIONS = {
    placement: "bottom",
    modifiers: [],
    strategy: "absolute"
  };
  function areValidElements() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return !args.some(function(element2) {
      return !(element2 && typeof element2.getBoundingClientRect === "function");
    });
  }
  function popperGenerator(generatorOptions) {
    if (generatorOptions === void 0) {
      generatorOptions = {};
    }
    var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers2 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
    return function createPopper2(reference2, popper2, options) {
      if (options === void 0) {
        options = defaultOptions;
      }
      var state = {
        placement: "bottom",
        orderedModifiers: [],
        options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
        modifiersData: {},
        elements: {
          reference: reference2,
          popper: popper2
        },
        attributes: {},
        styles: {}
      };
      var effectCleanupFns = [];
      var isDestroyed = false;
      var instance = {
        state,
        setOptions: function setOptions(setOptionsAction) {
          var options2 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
          cleanupModifierEffects();
          state.options = Object.assign({}, defaultOptions, state.options, options2);
          state.scrollParents = {
            reference: isElement(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
            popper: listScrollParents(popper2)
          };
          var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers2, state.options.modifiers)));
          state.orderedModifiers = orderedModifiers.filter(function(m) {
            return m.enabled;
          });
          runModifierEffects();
          return instance.update();
        },
        // Sync update – it will always be executed, even if not necessary. This
        // is useful for low frequency updates where sync behavior simplifies the
        // logic.
        // For high frequency updates (e.g. `resize` and `scroll` events), always
        // prefer the async Popper#update method
        forceUpdate: function forceUpdate() {
          if (isDestroyed) {
            return;
          }
          var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
          if (!areValidElements(reference3, popper3)) {
            return;
          }
          state.rects = {
            reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
            popper: getLayoutRect(popper3)
          };
          state.reset = false;
          state.placement = state.options.placement;
          state.orderedModifiers.forEach(function(modifier) {
            return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
          });
          for (var index = 0; index < state.orderedModifiers.length; index++) {
            if (state.reset === true) {
              state.reset = false;
              index = -1;
              continue;
            }
            var _state$orderedModifie = state.orderedModifiers[index], fn2 = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
            if (typeof fn2 === "function") {
              state = fn2({
                state,
                options: _options,
                name,
                instance
              }) || state;
            }
          }
        },
        // Async and optimistically optimized update – it will not be executed if
        // not necessary (debounced to run at most once-per-tick)
        update: debounce$1(function() {
          return new Promise(function(resolve) {
            instance.forceUpdate();
            resolve(state);
          });
        }),
        destroy: function destroy() {
          cleanupModifierEffects();
          isDestroyed = true;
        }
      };
      if (!areValidElements(reference2, popper2)) {
        return instance;
      }
      instance.setOptions(options).then(function(state2) {
        if (!isDestroyed && options.onFirstUpdate) {
          options.onFirstUpdate(state2);
        }
      });
      function runModifierEffects() {
        state.orderedModifiers.forEach(function(_ref) {
          var name = _ref.name, _ref$options = _ref.options, options2 = _ref$options === void 0 ? {} : _ref$options, effect2 = _ref.effect;
          if (typeof effect2 === "function") {
            var cleanupFn = effect2({
              state,
              name,
              instance,
              options: options2
            });
            var noopFn = function noopFn2() {
            };
            effectCleanupFns.push(cleanupFn || noopFn);
          }
        });
      }
      function cleanupModifierEffects() {
        effectCleanupFns.forEach(function(fn2) {
          return fn2();
        });
        effectCleanupFns = [];
      }
      return instance;
    };
  }
  var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$2, preventOverflow$1, arrow$1, hide$1];
  var createPopper = /* @__PURE__ */ popperGenerator({
    defaultModifiers
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var reWhitespace = /\s/;
  function trimmedEndIndex$1(string) {
    var index = string.length;
    while (index-- && reWhitespace.test(string.charAt(index))) {
    }
    return index;
  }
  var _trimmedEndIndex = trimmedEndIndex$1;
  var trimmedEndIndex = _trimmedEndIndex;
  var reTrimStart = /^\s+/;
  function baseTrim$1(string) {
    return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
  }
  var _baseTrim = baseTrim$1;
  var baseTrim = _baseTrim, isObject$2 = isObject_1, isSymbol = isSymbol_1;
  var NAN = 0 / 0;
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
  var reIsBinary = /^0b[01]+$/i;
  var reIsOctal = /^0o[0-7]+$/i;
  var freeParseInt = parseInt;
  function toNumber$1(value) {
    if (typeof value == "number") {
      return value;
    }
    if (isSymbol(value)) {
      return NAN;
    }
    if (isObject$2(value)) {
      var other = typeof value.valueOf == "function" ? value.valueOf() : value;
      value = isObject$2(other) ? other + "" : other;
    }
    if (typeof value != "string") {
      return value === 0 ? value : +value;
    }
    value = baseTrim(value);
    var isBinary = reIsBinary.test(value);
    return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
  }
  var toNumber_1 = toNumber$1;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var root = _root;
  var now$1 = function now() {
    return root.Date.now();
  };
  var now_1 = now$1;
  var isObject$1 = isObject_1, now2 = now_1, toNumber = toNumber_1;
  var FUNC_ERROR_TEXT = "Expected a function";
  var nativeMax = Math.max, nativeMin$1 = Math.min;
  function debounce(func, wait, options) {
    var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
    if (typeof func != "function") {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    wait = toNumber(wait) || 0;
    if (isObject$1(options)) {
      leading = !!options.leading;
      maxing = "maxWait" in options;
      maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
      trailing = "trailing" in options ? !!options.trailing : trailing;
    }
    function invokeFunc(time) {
      var args = lastArgs, thisArg = lastThis;
      lastArgs = lastThis = void 0;
      lastInvokeTime = time;
      result = func.apply(thisArg, args);
      return result;
    }
    function leadingEdge(time) {
      lastInvokeTime = time;
      timerId = setTimeout(timerExpired, wait);
      return leading ? invokeFunc(time) : result;
    }
    function remainingWait(time) {
      var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
      return maxing ? nativeMin$1(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
    }
    function shouldInvoke(time) {
      var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
      return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
    }
    function timerExpired() {
      var time = now2();
      if (shouldInvoke(time)) {
        return trailingEdge(time);
      }
      timerId = setTimeout(timerExpired, remainingWait(time));
    }
    function trailingEdge(time) {
      timerId = void 0;
      if (trailing && lastArgs) {
        return invokeFunc(time);
      }
      lastArgs = lastThis = void 0;
      return result;
    }
    function cancel() {
      if (timerId !== void 0) {
        clearTimeout(timerId);
      }
      lastInvokeTime = 0;
      lastArgs = lastCallTime = lastThis = timerId = void 0;
    }
    function flush() {
      return timerId === void 0 ? result : trailingEdge(now2());
    }
    function debounced() {
      var time = now2(), isInvoking = shouldInvoke(time);
      lastArgs = arguments;
      lastThis = this;
      lastCallTime = time;
      if (isInvoking) {
        if (timerId === void 0) {
          return leadingEdge(lastCallTime);
        }
        if (maxing) {
          clearTimeout(timerId);
          timerId = setTimeout(timerExpired, wait);
          return invokeFunc(lastCallTime);
        }
      }
      if (timerId === void 0) {
        timerId = setTimeout(timerExpired, wait);
      }
      return result;
    }
    debounced.cancel = cancel;
    debounced.flush = flush;
    return debounced;
  }
  var debounce_1 = debounce;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useCommonClassName() {
    var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
    var sizeClassNames = {
      small: "".concat(classPrefix.value, "-size-s"),
      medium: "".concat(classPrefix.value, "-size-m"),
      large: "".concat(classPrefix.value, "-size-l"),
      "default": "",
      xs: "".concat(classPrefix.value, "-size-xs"),
      xl: "".concat(classPrefix.value, "-size-xl"),
      block: "".concat(classPrefix.value, "-size-full-width")
    };
    var statusClassNames = {
      loading: "".concat(classPrefix.value, "-is-loading"),
      loadMore: "".concat(classPrefix.value, "-is-load-more"),
      disabled: "".concat(classPrefix.value, "-is-disabled"),
      focused: "".concat(classPrefix.value, "-is-focused"),
      success: "".concat(classPrefix.value, "-is-success"),
      error: "".concat(classPrefix.value, "-is-error"),
      warning: "".concat(classPrefix.value, "-is-warning"),
      selected: "".concat(classPrefix.value, "-is-selected"),
      active: "".concat(classPrefix.value, "-is-active"),
      checked: "".concat(classPrefix.value, "-is-checked"),
      current: "".concat(classPrefix.value, "-is-current"),
      hidden: "".concat(classPrefix.value, "-is-hidden"),
      visible: "".concat(classPrefix.value, "-is-visible"),
      expanded: "".concat(classPrefix.value, "-is-expanded"),
      indeterminate: "".concat(classPrefix.value, "-is-indeterminate")
    };
    return {
      classPrefix,
      sizeClassNames,
      statusClassNames,
      classNames: {
        size: sizeClassNames,
        status: statusClassNames
      }
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useDefaultValue(value, defaultValue, onChange, propsName) {
    var _getCurrentInstance = vue.getCurrentInstance(), emit = _getCurrentInstance.emit, vnode = _getCurrentInstance.vnode;
    var internalValue = vue.ref();
    var vProps = vnode.props || {};
    var isVMP = Object.prototype.hasOwnProperty.call(vProps, propsName) || Object.prototype.hasOwnProperty.call(vProps, kebabCase_1(propsName));
    if (isVMP) {
      return [value, function(newValue) {
        emit("update:".concat(propsName), newValue);
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        onChange === null || onChange === void 0 || onChange.apply(void 0, [newValue].concat(args));
      }];
    }
    internalValue.value = defaultValue;
    return [internalValue, function(newValue) {
      internalValue.value = newValue;
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }
      onChange === null || onChange === void 0 || onChange.apply(void 0, [newValue].concat(args));
    }];
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$g(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$g(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$g(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$g(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var useVirtualScroll = function useVirtualScroll2(_ref) {
    var data = _ref.data, container = _ref.container, _ref$fixedHeight = _ref.fixedHeight, fixedHeight = _ref$fixedHeight === void 0 ? false : _ref$fixedHeight, _ref$lineHeight = _ref.lineHeight, lineHeight = _ref$lineHeight === void 0 ? 30 : _ref$lineHeight, _ref$bufferSize = _ref.bufferSize, bufferSize = _ref$bufferSize === void 0 ? 20 : _ref$bufferSize, _ref$threshold = _ref.threshold, threshold = _ref$threshold === void 0 ? 100 : _ref$threshold;
    var state = vue.reactive({
      visibleData: [],
      cachedHeight: [],
      cachedScrollY: []
    });
    var isVirtual = vue.computed(function() {
      return data.value.length > threshold;
    });
    var updateId = vue.ref(0);
    var trs = /* @__PURE__ */ new Map();
    var visibleCount = 0;
    var beforeScrollTop = 0;
    var index = 0;
    var offset2 = 0;
    var start2 = 0;
    var last2 = 0;
    var reset = function reset2() {
      data.value.forEach(function(item, i) {
        item.$index = i;
        if (fixedHeight) {
          state.cachedScrollY[i] = i * lineHeight;
        }
      });
      if (!fixedHeight) {
        state.cachedScrollY[data.value.length - 1] = void 0;
      }
    };
    reset();
    var scrollHeight = vue.computed(function() {
      var cachedHeight = state.cachedHeight;
      var length = cachedHeight.length;
      if (length) {
        var maxScrollY = cachedHeight.reduce(function(sum, v) {
          return sum + v || lineHeight;
        }, 0);
        if (cachedHeight.length === data.value.length) {
          return maxScrollY;
        }
        var average = maxScrollY / cachedHeight.length;
        return maxScrollY + (data.value.length - cachedHeight.length) * average;
      }
      return isVirtual.value ? data.value.length * lineHeight : 0;
    });
    var translateY = vue.computed(function() {
      var visibleData = state.visibleData;
      var firstRow = visibleData[0];
      if (firstRow) {
        return visibleData.length === 1 ? 0 : state.cachedScrollY[firstRow.$index];
      }
      return 0;
    });
    var updateVisibleData = function updateVisibleData2() {
      last2 = Math.min(start2 + visibleCount + bufferSize * 2, data.value.length);
      state.visibleData = data.value.slice(start2, last2);
    };
    var calculateScrollY = function calculateScrollY2() {
      var _anchorDom$getBoundin;
      var anchorDom = trs.get(index);
      if (!anchorDom) {
        return;
      }
      var anchorDomHeight = anchorDom === null || anchorDom === void 0 || (_anchorDom$getBoundin = anchorDom.getBoundingClientRect()) === null || _anchorDom$getBoundin === void 0 ? void 0 : _anchorDom$getBoundin.height;
      state.cachedScrollY[index] = container.value.scrollTop - offset2;
      state.cachedHeight[index] = anchorDomHeight;
      for (var i = index + 1; i <= ((_state$visibleData = state.visibleData[state.visibleData.length - 1]) === null || _state$visibleData === void 0 ? void 0 : _state$visibleData.$index); i++) {
        var _state$visibleData;
        var tr = trs.get(i);
        var _ref2 = (tr === null || tr === void 0 ? void 0 : tr.getBoundingClientRect()) || {}, height = _ref2.height;
        state.cachedHeight[i] = height;
        var scrollY = state.cachedScrollY[i - 1] + state.cachedHeight[i - 1];
        state.cachedScrollY.splice(i, 1, scrollY);
      }
      for (var _i = index - 1; _i >= ((_state$visibleData$ = state.visibleData[0]) === null || _state$visibleData$ === void 0 ? void 0 : _state$visibleData$.$index); _i--) {
        var _state$visibleData$;
        var _tr = trs.get(_i);
        var _ref3 = (_tr === null || _tr === void 0 ? void 0 : _tr.getBoundingClientRect()) || {}, _height = _ref3.height;
        state.cachedHeight[_i] = _height;
        var _scrollY = state.cachedScrollY[_i + 1] - state.cachedHeight[_i];
        state.cachedScrollY.splice(_i, 1, _scrollY);
      }
      if (state.cachedScrollY[0] > 0) {
        var distance = state.cachedScrollY[0];
        var length = Math.min(last2, data.value.length);
        for (var _i2 = 0; _i2 < length; _i2++) {
          state.cachedScrollY.splice(_i2, 1, state.cachedScrollY[_i2] - distance);
        }
        var scrollTop = state.cachedScrollY[index - 1] ? state.cachedScrollY[index - 1] + offset2 : offset2;
        container.value.scrollTop = scrollTop;
        beforeScrollTop = scrollTop;
      }
      if (state.cachedScrollY[start2] < 0) {
        var s = state.cachedHeight.slice(0, Math.max(0, index)).reduce(function(sum, v) {
          return sum + v;
        }, 0) + offset2;
        container.value.scrollTop = s;
        beforeScrollTop = s;
        if (s === 0) {
          index = 0;
          offset2 = 0;
        }
      }
      vue.nextTick(function() {
        var _container$value = container.value, scrollTop2 = _container$value.scrollTop, scrollHeight2 = _container$value.scrollHeight, clientHeight = _container$value.clientHeight;
        if (scrollTop2 + clientHeight === scrollHeight2) {
          for (var _i3 = last2 - 1; _i3 >= start2; _i3--) {
            if (_i3 === last2 - 1) {
              state.cachedScrollY.splice(_i3, 1, scrollHeight2.value - state.cachedHeight[_i3]);
            } else {
              state.cachedScrollY.splice(_i3, 1, state.cachedScrollY[_i3 + 1] - state.cachedHeight[_i3]);
            }
          }
        }
      });
    };
    var handleScroll = function handleScroll2() {
      if (!isVirtual.value) return;
      var scrollTop = container.value.scrollTop;
      var distance = scrollTop - beforeScrollTop;
      beforeScrollTop = scrollTop;
      distance += offset2;
      var lastIndex = index;
      if (!distance) return;
      if (distance >= 0) {
        while (lastIndex < data.value.length && distance > (state.cachedHeight[lastIndex] || lineHeight)) {
          if (!state.cachedHeight[lastIndex]) {
            state.cachedHeight[lastIndex] = lineHeight;
          }
          distance -= state.cachedHeight[lastIndex];
          lastIndex++;
        }
        if (lastIndex >= data.value.length) {
          index = data.value.length - 1;
          offset2 = 0;
        } else {
          index = lastIndex;
          offset2 = distance;
        }
        var _container$value2 = container.value, clientHeight = _container$value2.clientHeight, scrollHeight2 = _container$value2.scrollHeight;
        if (scrollTop + clientHeight === scrollHeight2) {
          index = data.value.length - visibleCount + 1;
        }
        if (start2 <= index - bufferSize) {
          start2 = Math.min(data.value.length - visibleCount, index - bufferSize);
          if (start2 < 0) {
            start2 = 0;
          }
        }
      } else {
        while (distance < 0) {
          lastIndex--;
          if (!state.cachedHeight[lastIndex]) {
            state.cachedHeight[lastIndex] = lineHeight;
          }
          distance += state.cachedHeight[lastIndex];
        }
        if (lastIndex < 0) {
          index = 0;
          offset2 = 0;
        } else {
          index = lastIndex;
          offset2 = distance;
        }
        calculateScrollY();
        if (start2 > index - bufferSize) {
          start2 = Math.max(0, index - bufferSize);
        }
      }
      updateVisibleData();
    };
    !fixedHeight && vue.watch(updateId, calculateScrollY, {
      flush: "post"
    });
    var handleRowMounted = function handleRowMounted2() {
      if (!isVirtual.value) return;
      updateId.value++;
    };
    vue.watch(data, function() {
      reset();
      state.visibleData = [];
      state.cachedScrollY = [];
      state.cachedHeight = [];
      beforeScrollTop = 0;
      index = 0;
      offset2 = 0;
      start2 = 0;
      trs.clear();
      if (data.value.length <= threshold) {
        state.visibleData = data.value;
      } else {
        updateVisibleData();
      }
      container.value && (container.value.scrollTop = 0);
    });
    var mounted2 = false;
    var refreshContainer = function refreshContainer2() {
      if (mounted2) {
        visibleCount = Math.ceil(container.value.offsetHeight / lineHeight);
        updateVisibleData();
      }
    };
    vue.onMounted(function() {
      if (!window || !window.IntersectionObserver) {
        return;
      }
      var ob = new window.IntersectionObserver(function(entries) {
        var entry = entries[0];
        if (entry.isIntersecting || entry.intersectionRatio) {
          mounted2 = true;
          isVirtual.value && refreshContainer();
          ob.unobserve(container.value);
        }
      });
      container.value && ob.observe(container.value);
    });
    return _objectSpread$g(_objectSpread$g({
      trs,
      scrollHeight
    }, vue.toRefs(state)), {}, {
      translateY,
      handleScroll,
      handleRowMounted,
      refreshContainer,
      fixedHeight,
      calculateScrollY
    });
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useVModel(value, modelValue, defaultValue, onChange) {
    var propName = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "value";
    var _getCurrentInstance = vue.getCurrentInstance(), emit = _getCurrentInstance.emit, vnode = _getCurrentInstance.vnode;
    var internalValue = vue.ref();
    var vProps = vnode.props || {};
    var isVM = Object.prototype.hasOwnProperty.call(vProps, "modelValue") || Object.prototype.hasOwnProperty.call(vProps, "model-value");
    var isVMP = Object.prototype.hasOwnProperty.call(vProps, propName) || Object.prototype.hasOwnProperty.call(vProps, kebabCase_1(propName));
    if (isVM) {
      return [modelValue, function(newValue) {
        emit("update:modelValue", newValue);
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        onChange === null || onChange === void 0 || onChange.apply(void 0, [newValue].concat(args));
      }];
    }
    if (isVMP) {
      return [value, function(newValue) {
        emit("update:".concat(propName), newValue);
        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }
        onChange === null || onChange === void 0 || onChange.apply(void 0, [newValue].concat(args));
      }];
    }
    internalValue.value = defaultValue;
    return [internalValue, function(newValue) {
      internalValue.value = newValue;
      for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
        args[_key3 - 1] = arguments[_key3];
      }
      onChange === null || onChange === void 0 || onChange.apply(void 0, [newValue].concat(args));
    }];
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var logSet = /* @__PURE__ */ new Set();
  var log = {
    warn: function warn(componentName, message) {
      console.warn("TDesign ".concat(componentName, " Warn: ").concat(message));
    },
    warnOnce: function warnOnce(componentName, message) {
      var msgContent = "TDesign ".concat(componentName, " Warn: ").concat(message);
      if (logSet.has(msgContent)) return;
      logSet.add(msgContent);
      console.warn(msgContent);
    },
    error: function error(componentName, message) {
      console.error("TDesign ".concat(componentName, " Error: ").concat(message));
    },
    errorOnce: function errorOnce(componentName, message) {
      var msgContent = "TDesign ".concat(componentName, " Error: ").concat(message);
      if (logSet.has(msgContent)) return;
      logSet.add(msgContent);
      console.error(msgContent);
    },
    info: function info(componentName, message) {
      console.info("TDesign ".concat(componentName, " Info: ").concat(message));
    }
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var popupProps = {
    attach: {
      type: [String, Function],
      "default": "body"
    },
    content: {
      type: [String, Function]
    },
    "default": {
      type: [String, Function]
    },
    delay: {
      type: [Number, Array]
    },
    destroyOnClose: Boolean,
    disabled: Boolean,
    hideEmptyPopup: Boolean,
    overlayClassName: {
      type: [String, Object, Array]
    },
    overlayInnerClassName: {
      type: [String, Object, Array]
    },
    overlayInnerStyle: {
      type: [Boolean, Object, Function]
    },
    overlayStyle: {
      type: [Boolean, Object, Function]
    },
    placement: {
      type: String,
      "default": "top"
    },
    popperOptions: {
      type: Object
    },
    showArrow: Boolean,
    trigger: {
      type: String,
      "default": "hover",
      validator: function validator9(val) {
        if (!val) return true;
        return ["hover", "click", "focus", "mousedown", "context-menu"].includes(val);
      }
    },
    triggerElement: {
      type: [String, Function]
    },
    visible: {
      type: Boolean,
      "default": void 0
    },
    modelValue: {
      type: Boolean,
      "default": void 0
    },
    defaultVisible: Boolean,
    zIndex: {
      type: Number
    },
    onOverlayClick: Function,
    onScroll: Function,
    onScrollToBottom: Function,
    onVisibleChange: Function
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useResizeObserver(container, callback) {
    if (typeof window === "undefined") return;
    var isSupport = window && window.ResizeObserver;
    if (!isSupport) return;
    var containerObserver = null;
    var cleanupObserver = function cleanupObserver2() {
      if (!containerObserver || !container.value) return;
      containerObserver.unobserve(container.value);
      containerObserver.disconnect();
      containerObserver = null;
    };
    var addObserver = function addObserver2(el) {
      containerObserver = new ResizeObserver(callback);
      containerObserver.observe(el);
    };
    container && vue.watch(container, function(el) {
      cleanupObserver();
      el && addObserver(el);
    }, {
      immediate: true,
      flush: "post"
    });
    vue.onBeforeUnmount(function() {
      cleanupObserver();
    });
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function _isSlot$5(s) {
    return typeof s === "function" || Object.prototype.toString.call(s) === "[object Object]" && !vue.isVNode(s);
  }
  function filterEmpty() {
    var children = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    var vnodes = [];
    children.forEach(function(child) {
      if (isArray_1(child)) {
        vnodes.push.apply(vnodes, _toConsumableArray(child));
      } else if (child.type === vue.Fragment) {
        vnodes.push.apply(vnodes, _toConsumableArray(filterEmpty(child.children)));
      } else {
        vnodes.push(child);
      }
    });
    return vnodes.filter(function(c) {
      return !(c && (c.type === vue.Comment || c.type === vue.Fragment && c.children.length === 0 || c.type === vue.Text && c.children.trim() === ""));
    });
  }
  function isRectChanged(rect1, rect2) {
    if (!rect1 && !rect2) return false;
    if (!rect1 || !rect2) return true;
    if (["width", "height", "x", "y"].some(function(k) {
      return rect1[k] !== rect2[k];
    })) {
      return true;
    }
    return false;
  }
  function useElement(getter) {
    var instance = vue.getCurrentInstance();
    var el = vue.ref();
    vue.onMounted(function() {
      el.value = getter(instance);
    });
    vue.onUpdated(function() {
      var newEl = getter(instance);
      if (el.value !== newEl) {
        el.value = newEl;
      }
    });
    return el;
  }
  var Trigger = vue.defineComponent({
    name: "TPopupTrigger",
    props: {
      forwardRef: Function
    },
    emits: ["resize"],
    setup: function setup5(props2, _ref) {
      var emit = _ref.emit, slots = _ref.slots;
      var el = useElement(function(vm) {
        var containerNode = vm.parent.vnode;
        return containerNode.el.nextElementSibling;
      });
      var contentRect = vue.ref();
      vue.watch(el, function() {
        var _props2$forwardRef;
        (_props2$forwardRef = props2.forwardRef) === null || _props2$forwardRef === void 0 || _props2$forwardRef.call(props2, el.value);
      });
      useResizeObserver(el, function(_ref2) {
        var _ref3 = _slicedToArray(_ref2, 1), newContentRect = _ref3[0].contentRect;
        contentRect.value = newContentRect;
      });
      vue.watch(contentRect, function(newRect, oldRect) {
        if (isRectChanged(newRect, oldRect)) {
          emit("resize");
        }
      });
      return function() {
        var _slots$default, _children$;
        var children = filterEmpty((_slots$default = slots["default"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots));
        if (children.length > 1 || ((_children$ = children[0]) === null || _children$ === void 0 ? void 0 : _children$.type) === vue.Text) {
          return vue.createVNode("span", null, [children]);
        }
        return children[0];
      };
    }
  });
  var Content = vue.defineComponent({
    name: "TPopupContent",
    emits: ["resize"],
    setup: function setup6(props2, _ref4) {
      var emit = _ref4.emit, slots = _ref4.slots;
      var contentEl = useElement(function(vm) {
        return vm.vnode.el.children[0];
      });
      useResizeObserver(contentEl, function() {
        emit("resize");
      });
      return function() {
        return vue.createVNode("div", {
          "style": "position: absolute; top: 0px; left: 0px; width: 100%"
        }, [slots["default"]()]);
      };
    }
  });
  var Container = vue.defineComponent({
    name: "TPopupContainer",
    inheritAttrs: false,
    props: {
      parent: Object,
      visible: Boolean,
      attach: popupProps.attach,
      forwardRef: Function
    },
    emits: ["resize", "contentMounted"],
    setup: function setup7(props2, _ref5) {
      var emit = _ref5.emit, attrs = _ref5.attrs, slots = _ref5.slots, expose = _ref5.expose;
      var triggerEl = vue.ref();
      var mountContent = vue.ref(false);
      function emitResize() {
        emit("resize");
      }
      vue.onMounted(function() {
        requestAnimationFrame(function() {
          mountContent.value = props2.visible;
        });
      });
      vue.watch(function() {
        return props2.visible;
      }, function(visible) {
        if (visible) {
          mountContent.value = props2.visible;
        }
      });
      expose({
        unmountContent: function unmountContent() {
          mountContent.value = false;
        }
      });
      return function() {
        var _slot;
        var getElement = function getElement2() {
          return getSSRAttach() || getAttach(props2.attach, triggerEl.value);
        };
        return vue.createVNode(vue.Fragment, null, [vue.createVNode(Trigger, {
          "class": attrs["class"],
          "forwardRef": function forwardRef(el) {
            props2.forwardRef(el);
            triggerEl.value = el;
          },
          "onResize": emitResize
        }, _isSlot$5(_slot = slots["default"]()) ? _slot : {
          "default": function _default4() {
            return [_slot];
          }
        }), mountContent.value && vue.createVNode(vue.Teleport, {
          "disabled": !getElement(),
          "to": getElement()
        }, {
          "default": function _default4() {
            return [vue.createVNode(Content, {
              "onResize": emitResize,
              "onVnodeMounted": function onVnodeMounted() {
                return emit("contentMounted");
              }
            }, {
              "default": function _default5() {
                return [slots.content && slots.content()];
              }
            })];
          }
        })]);
      };
    }
  });
  var define_process_env_default = {};
  function ownKeys$f(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$f(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$f(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$f(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  function _isSlot$4(s) {
    return typeof s === "function" || Object.prototype.toString.call(s) === "[object Object]" && !vue.isVNode(s);
  }
  var POPUP_ATTR_NAME = "data-td-popup";
  var POPUP_PARENT_ATTR_NAME = "data-td-popup-parent";
  function getPopperTree(id, upwards) {
    var list = [];
    var selectors = [POPUP_PARENT_ATTR_NAME, POPUP_ATTR_NAME];
    if (!id) return list;
    if (upwards) {
      selectors.unshift(selectors.pop());
    }
    recurse(id);
    return list;
    function recurse(id2) {
      var children = document.querySelectorAll("[".concat(selectors[0], '="').concat(id2, '"]'));
      children.forEach(function(el) {
        list.push(el);
        var childId = el.getAttribute(selectors[1]);
        if (childId && childId !== id2) {
          recurse(childId);
        }
      });
    }
  }
  var parentKey = Symbol();
  function getPopperPlacement(placement) {
    return placement.replace(/-(left|top)$/, "-start").replace(/-(right|bottom)$/, "-end");
  }
  function attachListeners(elm) {
    var offs = [];
    return {
      add: function add2(type, listener) {
        if (!type) return;
        on(elm.value, type, listener);
        offs.push(function() {
          off(elm.value, type, listener);
        });
      },
      clean: function clean() {
        offs.forEach(function(handler) {
          return handler === null || handler === void 0 ? void 0 : handler();
        });
        offs.length = 0;
      }
    };
  }
  var _Popup = vue.defineComponent({
    name: "TPopup",
    props: _objectSpread$f(_objectSpread$f({}, popupProps), {}, {
      expandAnimation: {
        type: Boolean
      }
    }),
    setup: function setup8(props2, _ref) {
      var _process$env;
      var expose = _ref.expose;
      var _toRefs = vue.toRefs(props2), propVisible = _toRefs.visible, modelValue = _toRefs.modelValue;
      var _useVModel = useVModel(propVisible, modelValue, props2.defaultVisible, props2.onVisibleChange, "visible"), _useVModel2 = _slicedToArray(_useVModel, 2), visible = _useVModel2[0], setVisible = _useVModel2[1];
      var renderTNodeJSX3 = useTNodeJSX();
      var renderContent3 = useContent();
      var popper2;
      var showTimeout;
      var hideTimeout;
      var triggerEl = vue.ref(null);
      var overlayEl = vue.ref(null);
      var popperEl = vue.ref(null);
      var containerRef = vue.ref(null);
      var isOverlayHover = vue.ref(false);
      var id = typeof process !== "undefined" && (_process$env = define_process_env_default) !== null && _process$env !== void 0 && _process$env.TEST ? "" : Date.now().toString(36);
      var parent2 = vue.inject(parentKey, void 0);
      vue.provide(parentKey, {
        id,
        assertMouseLeave: onMouseLeave
      });
      var prefixCls = usePrefixClass("popup");
      var _useCommonClassName = useCommonClassName$2(), commonCls = _useCommonClassName.STATUS;
      var delay = vue.computed(function() {
        var _props2$delay, _delay2$;
        var delay2 = props2.trigger !== "hover" ? [0, 0] : [].concat((_props2$delay = props2.delay) !== null && _props2$delay !== void 0 ? _props2$delay : [250, 150]);
        return {
          show: delay2[0],
          hide: (_delay2$ = delay2[1]) !== null && _delay2$ !== void 0 ? _delay2$ : delay2[0]
        };
      });
      var trigger = attachListeners(triggerEl);
      vue.watch(function() {
        return [props2.trigger, triggerEl.value];
      }, function() {
        if (!triggerEl.value) return;
        trigger.clean();
        trigger.add({
          hover: "mouseenter",
          focus: "focusin",
          "context-menu": "contextmenu",
          click: "click"
        }[props2.trigger], function(ev) {
          if (props2.disabled) return;
          if (ev.type === "contextmenu") {
            ev.preventDefault();
          }
          if ((ev.type === "click" || ev.type === "contextmenu") && visible.value) {
            hide2(ev);
            return;
          }
          show(ev);
        });
        trigger.add({
          hover: "mouseleave",
          focus: "focusout"
        }[props2.trigger], hide2);
      });
      vue.watch(function() {
        return [props2.overlayStyle, props2.overlayInnerStyle, overlayEl.value];
      }, function() {
        updateOverlayInnerStyle();
        updatePopper();
      });
      vue.watch(function() {
        return props2.placement;
      }, function() {
        destroyPopper();
        updatePopper();
      });
      vue.watch(function() {
        return visible.value;
      }, function(visible2) {
        if (visible2) {
          on(document, "mousedown", onDocumentMouseDown, true);
          if (props2.trigger === "focus") {
            once(triggerEl.value, "keydown", function(ev) {
              var _process$env2;
              var code = typeof process !== "undefined" && (_process$env2 = define_process_env_default) !== null && _process$env2 !== void 0 && _process$env2.TEST ? "27" : "Escape";
              if (ev.code === code) {
                hide2(ev);
              }
            });
          }
          return;
        }
        off(document, "mousedown", onDocumentMouseDown, true);
      });
      vue.onUnmounted(function() {
        destroyPopper();
        clearAllTimeout();
        off(document, "mousedown", onDocumentMouseDown, true);
      });
      expose({
        update: updatePopper,
        getOverlay: function getOverlay() {
          return overlayEl.value;
        },
        getOverlayState: function getOverlayState() {
          return {
            hover: isOverlayHover.value
          };
        },
        close: function close2() {
          return hide2();
        }
      });
      function getOverlayStyle() {
        var overlayStyle = props2.overlayStyle;
        if (!triggerEl.value || !overlayEl.value) return;
        if (isFunction_1(overlayStyle)) {
          return overlayStyle(triggerEl.value, overlayEl.value);
        }
        if (isObject_1(overlayStyle)) {
          return overlayStyle;
        }
      }
      function updateOverlayInnerStyle() {
        var overlayInnerStyle = props2.overlayInnerStyle;
        if (!triggerEl.value || !overlayEl.value) return;
        if (isFunction_1(overlayInnerStyle)) {
          setStyle$1(overlayEl.value, overlayInnerStyle(triggerEl.value, overlayEl.value));
        } else if (isObject_1(overlayInnerStyle)) {
          setStyle$1(overlayEl.value, overlayInnerStyle);
        }
      }
      function updatePopper() {
        if (!popperEl.value || !visible.value) return;
        if (popper2) {
          if (triggerEl.value.getRootNode() instanceof ShadowRoot) {
            popper2.state.elements.reference = triggerEl.value;
            popper2.update();
          } else {
            var rect = triggerEl.value.getBoundingClientRect();
            var parent22 = triggerEl.value;
            while (parent22 && parent22 !== document.body) {
              parent22 = parent22.parentElement;
            }
            var isHidden = parent22 !== document.body || rect.width === 0 && rect.height === 0;
            if (!isHidden) {
              popper2.state.elements.reference = triggerEl.value;
              popper2.update();
            } else {
              setVisible(false, {
                trigger: getTriggerType({
                  type: "mouseenter"
                })
              });
            }
          }
          return;
        }
        popper2 = createPopper(triggerEl.value, popperEl.value, _objectSpread$f({
          placement: getPopperPlacement(props2.placement),
          onFirstUpdate: function onFirstUpdate() {
            vue.nextTick(updatePopper);
          }
        }, props2.popperOptions));
      }
      function destroyPopper() {
        if (popper2) {
          var _popper;
          (_popper = popper2) === null || _popper === void 0 || _popper.destroy();
          popper2 = null;
        }
        if (props2.destroyOnClose) {
          var _containerRef$value;
          (_containerRef$value = containerRef.value) === null || _containerRef$value === void 0 || _containerRef$value.unmountContent();
        }
      }
      function show(ev) {
        clearAllTimeout();
        showTimeout = setTimeout(function() {
          setVisible(true, {
            trigger: getTriggerType(ev)
          });
        }, delay.value.show);
      }
      function hide2(ev) {
        clearAllTimeout();
        hideTimeout = setTimeout(function() {
          setVisible(false, {
            trigger: getTriggerType(ev),
            e: ev
          });
        }, delay.value.hide);
      }
      function clearAllTimeout() {
        clearTimeout(showTimeout);
        clearTimeout(hideTimeout);
      }
      function getTriggerType(ev) {
        switch (ev === null || ev === void 0 ? void 0 : ev.type) {
          case "mouseenter":
            return "trigger-element-hover";
          case "mouseleave":
            return "trigger-element-hover";
          case "focusin":
            return "trigger-element-focus";
          case "focusout":
            return "trigger-element-blur";
          case "click":
            return "trigger-element-click";
          case "context-menu":
          case "keydown":
            return "keydown-esc";
          case "mousedown":
            return "document";
          default:
            return "trigger-element-close";
        }
      }
      function onDocumentMouseDown(ev) {
        var _popperEl$value, _triggerEl$value;
        if ((_popperEl$value = popperEl.value) !== null && _popperEl$value !== void 0 && _popperEl$value.contains(ev.target)) {
          return;
        }
        if ((_triggerEl$value = triggerEl.value) !== null && _triggerEl$value !== void 0 && _triggerEl$value.contains(ev.target)) {
          return;
        }
        var activedPopper = getPopperTree(id).find(function(el) {
          return el.contains(ev.target);
        });
        if (activedPopper && getPopperTree(activedPopper.getAttribute(POPUP_PARENT_ATTR_NAME), true).some(function(el) {
          return el === popperEl.value;
        })) {
          return;
        }
        hide2(ev);
      }
      function onMouseLeave(ev) {
        isOverlayHover.value = false;
        if (props2.trigger !== "hover" || triggerEl.value.contains(ev.target)) return;
        var isCursorOverlaps = getPopperTree(id).some(function(el) {
          var rect = el.getBoundingClientRect();
          return ev.x > rect.x && ev.x < rect.x + rect.width && ev.y > rect.y && ev.y < rect.y + rect.height;
        });
        if (!isCursorOverlaps) {
          hide2(ev);
          parent2 === null || parent2 === void 0 || parent2.assertMouseLeave(ev);
        }
      }
      function onMouseenter() {
        isOverlayHover.value = true;
        if (visible.value && props2.trigger === "hover") {
          clearAllTimeout();
        }
      }
      function onOverlayClick(e) {
        var _props2$onOverlayClic;
        (_props2$onOverlayClic = props2.onOverlayClick) === null || _props2$onOverlayClic === void 0 || _props2$onOverlayClic.call(props2, {
          e
        });
      }
      var updateScrollTop = vue.inject("updateScrollTop", void 0);
      function handleOnScroll(e) {
        var _props2$onScroll;
        var _e$target = e.target, scrollTop = _e$target.scrollTop, clientHeight = _e$target.clientHeight, scrollHeight = _e$target.scrollHeight;
        var debounceOnScrollBottom = debounce_1(function(e2) {
          var _props2$onScrollToBot;
          return (_props2$onScrollToBot = props2.onScrollToBottom) === null || _props2$onScrollToBot === void 0 ? void 0 : _props2$onScrollToBot.call(props2, {
            e: e2
          });
        }, 100);
        if (clientHeight + Math.floor(scrollTop) === scrollHeight) {
          debounceOnScrollBottom(e);
        }
        (_props2$onScroll = props2.onScroll) === null || _props2$onScroll === void 0 || _props2$onScroll.call(props2, {
          e
        });
      }
      vue.watch(function() {
        return [visible.value, overlayEl.value];
      }, function() {
        if (visible.value && overlayEl.value && updateScrollTop) {
          updateScrollTop === null || updateScrollTop === void 0 || updateScrollTop(overlayEl.value);
        }
      });
      return function() {
        var content = renderTNodeJSX3("content");
        var hidePopup = props2.hideEmptyPopup && ["", void 0, null].includes(content);
        var overlay = visible.value || !props2.destroyOnClose ? vue.withDirectives(vue.createVNode("div", vue.mergeProps(_defineProperty$2(_defineProperty$2({}, POPUP_ATTR_NAME, id), POPUP_PARENT_ATTR_NAME, parent2 === null || parent2 === void 0 ? void 0 : parent2.id), {
          "class": [prefixCls.value, props2.overlayClassName],
          "ref": function ref2(ref22) {
            return popperEl.value = ref22;
          },
          "style": [{
            zIndex: props2.zIndex
          }, getOverlayStyle(), hidePopup && {
            visibility: "hidden"
          }],
          "onClick": onOverlayClick,
          "onMouseenter": onMouseenter,
          "onMouseleave": onMouseLeave
        }), [vue.createVNode("div", {
          "class": ["".concat(prefixCls.value, "__content"), _defineProperty$2(_defineProperty$2(_defineProperty$2({}, "".concat(prefixCls.value, "__content--text"), isString_1(props2.content)), "".concat(prefixCls.value, "__content--arrow"), props2.showArrow), commonCls.value.disabled, props2.disabled), props2.overlayInnerClassName],
          "ref": overlayEl,
          "onScroll": handleOnScroll
        }, [content, props2.showArrow && vue.createVNode("div", {
          "class": "".concat(prefixCls.value, "__arrow")
        }, null)])]), [[vue.vShow, visible.value]]) : null;
        return vue.createVNode(Container, {
          "ref": function ref2(ref22) {
            return containerRef.value = ref22;
          },
          "forwardRef": function forwardRef(ref2) {
            return triggerEl.value = ref2;
          },
          "onContentMounted": function onContentMounted() {
            if (visible.value) {
              updatePopper();
              var timer = setTimeout(function() {
                updateOverlayInnerStyle();
                clearTimeout(timer);
              }, 60);
            }
          },
          "onResize": function onResize() {
            if (visible.value) {
              updatePopper();
            }
          },
          "visible": visible.value,
          "attach": props2.attach
        }, {
          content: function content2() {
            return vue.createVNode(vue.Transition, {
              "name": "".concat(prefixCls.value, "--animation").concat(props2.expandAnimation ? "-expand" : ""),
              "appear": true,
              "onEnter": updatePopper,
              "onAfterLeave": destroyPopper
            }, _isSlot$4(overlay) ? overlay : {
              "default": function _default4() {
                return [overlay];
              }
            });
          },
          "default": function _default4() {
            return renderContent3("default", "triggerElement");
          }
        });
      };
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var Popup = withInstall(_Popup);
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function last$1(array) {
    var length = array == null ? 0 : array.length;
    return length ? array[length - 1] : void 0;
  }
  var last_1 = last$1;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var _Symbol = _Symbol$2$1, isArguments = isArguments_1, isArray = isArray_1;
  var spreadableSymbol = _Symbol ? _Symbol.isConcatSpreadable : void 0;
  function isFlattenable$1(value) {
    return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
  }
  var _isFlattenable = isFlattenable$1;
  var arrayPush = _arrayPush, isFlattenable = _isFlattenable;
  function baseFlatten$1(array, depth, predicate, isStrict, result) {
    var index = -1, length = array.length;
    predicate || (predicate = isFlattenable);
    result || (result = []);
    while (++index < length) {
      var value = array[index];
      if (depth > 0 && predicate(value)) {
        if (depth > 1) {
          baseFlatten$1(value, depth - 1, predicate, isStrict, result);
        } else {
          arrayPush(result, value);
        }
      } else if (!isStrict) {
        result[result.length] = value;
      }
    }
    return result;
  }
  var _baseFlatten = baseFlatten$1;
  var baseFlatten = _baseFlatten;
  function flatten$1(array) {
    var length = array == null ? 0 : array.length;
    return length ? baseFlatten(array, 1) : [];
  }
  var flatten_1 = flatten$1;
  var flatten = flatten_1, overRest = _overRest, setToString = _setToString;
  function flatRest$2(func) {
    return setToString(overRest(func, void 0, flatten), func + "");
  }
  var _flatRest = flatRest$2;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var baseGet$1 = _baseGet, baseSlice = _baseSlice;
  function parent$1(object, path) {
    return path.length < 2 ? object : baseGet$1(object, baseSlice(path, 0, -1));
  }
  var _parent = parent$1;
  var castPath$1$1 = _castPath, last = last_1, parent = _parent, toKey$1 = _toKey;
  function baseUnset$1(object, path) {
    path = castPath$1$1(path, object);
    object = parent(object, path);
    return object == null || delete object[toKey$1(last(path))];
  }
  var _baseUnset = baseUnset$1;
  var isPlainObject = isPlainObject_1;
  function customOmitClone$1(value) {
    return isPlainObject(value) ? void 0 : value;
  }
  var _customOmitClone = customOmitClone$1;
  var arrayMap$2 = _arrayMap, baseClone = _baseClone, baseUnset = _baseUnset, castPath$2 = _castPath, copyObject = _copyObject, customOmitClone = _customOmitClone, flatRest$1 = _flatRest, getAllKeysIn = _getAllKeysIn;
  var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
  var omit = flatRest$1(function(object, paths) {
    var result = {};
    if (object == null) {
      return result;
    }
    var isDeep = false;
    paths = arrayMap$2(paths, function(path) {
      path = castPath$2(path, object);
      isDeep || (isDeep = path.length > 1);
      return path;
    });
    copyObject(object, getAllKeysIn(object), result);
    if (isDeep) {
      result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
    }
    var length = paths.length;
    while (length--) {
      baseUnset(result, paths[length]);
    }
    return result;
  });
  var omit_1 = omit;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var FakeArrow = vue.defineComponent({
    name: "TFakeArrow",
    props: {
      isActive: {
        type: Boolean
      },
      overlayClassName: {
        type: [String, Object, Array]
      },
      overlayStyle: {
        type: Object || String
      }
    },
    setup: function setup9(props2) {
      var COMPONENT_NAME = usePrefixClass("fake-arrow");
      var classes = vue.computed(function() {
        return [COMPONENT_NAME.value, _defineProperty$2({}, "".concat(COMPONENT_NAME.value, "--active"), props2.isActive), props2.overlayClassName];
      });
      return {
        classes
      };
    },
    render: function render3() {
      return vue.createVNode("svg", {
        "class": this.classes,
        "width": "16",
        "height": "16",
        "viewBox": "0 0 16 16",
        "fill": "none",
        "xmlns": "http://www.w3.org/2000/svg",
        "style": this.overlayStyle
      }, [vue.createVNode("path", {
        "d": "M3.75 5.7998L7.99274 10.0425L12.2361 5.79921",
        "stroke": "black",
        "stroke-opacity": "0.9",
        "stroke-width": "1.3"
      }, null)]);
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props$b = {
    align: {
      type: String,
      "default": "left",
      validator: function validator10(val) {
        if (!val) return true;
        return ["left", "center", "right"].includes(val);
      }
    },
    allowInputOverMax: Boolean,
    autoWidth: Boolean,
    autocomplete: {
      type: String,
      "default": void 0
    },
    autofocus: Boolean,
    borderless: Boolean,
    clearable: Boolean,
    disabled: {
      type: Boolean,
      "default": void 0
    },
    format: {
      type: Function
    },
    inputClass: {
      type: [String, Object, Array]
    },
    label: {
      type: [String, Function]
    },
    maxcharacter: {
      type: Number
    },
    maxlength: {
      type: [String, Number]
    },
    name: {
      type: String,
      "default": ""
    },
    placeholder: {
      type: String,
      "default": void 0
    },
    prefixIcon: {
      type: Function
    },
    readonly: {
      type: Boolean,
      "default": void 0
    },
    showClearIconOnEmpty: Boolean,
    showLimitNumber: Boolean,
    size: {
      type: String,
      "default": "medium",
      validator: function validator11(val) {
        if (!val) return true;
        return ["small", "medium", "large"].includes(val);
      }
    },
    spellCheck: Boolean,
    status: {
      type: String,
      "default": void 0,
      validator: function validator12(val) {
        if (!val) return true;
        return ["default", "success", "warning", "error"].includes(val);
      }
    },
    suffix: {
      type: [String, Function]
    },
    suffixIcon: {
      type: Function
    },
    tips: {
      type: [String, Function]
    },
    type: {
      type: String,
      "default": "text",
      validator: function validator13(val) {
        if (!val) return true;
        return ["text", "number", "url", "tel", "password", "search", "submit", "hidden"].includes(val);
      }
    },
    value: {
      type: [String, Number],
      "default": void 0
    },
    modelValue: {
      type: [String, Number],
      "default": void 0
    },
    defaultValue: {
      type: [String, Number]
    },
    onBlur: Function,
    onChange: Function,
    onClear: Function,
    onClick: Function,
    onCompositionend: Function,
    onCompositionstart: Function,
    onEnter: Function,
    onFocus: Function,
    onKeydown: Function,
    onKeypress: Function,
    onKeyup: Function,
    onMouseenter: Function,
    onMouseleave: Function,
    onPaste: Function,
    onValidate: Function,
    onWheel: Function
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useReadonly(context) {
    var currentInstance = vue.getCurrentInstance();
    var componentReadonly = vue.computed(function() {
      return currentInstance.props.readonly;
    });
    var formReadonly = vue.inject("formReadonly", /* @__PURE__ */ Object.create(null));
    return vue.computed(function() {
      var _context$beforeReadon, _context$afterReadonl, _formReadonly$readonl;
      if (isBoolean_1(context === null || context === void 0 || (_context$beforeReadon = context.beforeReadonly) === null || _context$beforeReadon === void 0 ? void 0 : _context$beforeReadon.value)) return context.beforeReadonly.value;
      if (isBoolean_1(componentReadonly === null || componentReadonly === void 0 ? void 0 : componentReadonly.value)) return componentReadonly.value;
      if (isBoolean_1(context === null || context === void 0 || (_context$afterReadonl = context.afterReadonly) === null || _context$afterReadonl === void 0 ? void 0 : _context$afterReadonl.value)) return context.afterReadonly.value;
      if (isBoolean_1((_formReadonly$readonl = formReadonly.readonly) === null || _formReadonly$readonl === void 0 ? void 0 : _formReadonly$readonl.value)) return formReadonly.readonly.value;
      return false;
    });
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var FormItemInjectionKey = Symbol("FormItemProvide");
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useLengthLimit(params) {
    var getValueByLimitNumber = function getValueByLimitNumber2(inputValue) {
      var _params$value = params.value, allowInputOverMax = _params$value.allowInputOverMax, maxlength = _params$value.maxlength, maxcharacter = _params$value.maxcharacter;
      if (!(maxlength || maxcharacter) || allowInputOverMax || !inputValue) return inputValue;
      if (maxlength) {
        return limitUnicodeMaxLength(inputValue, maxlength);
      }
      if (maxcharacter) {
        var r = getCharacterLength(inputValue, maxcharacter);
        if (isObject_1(r)) {
          return r.characters;
        }
      }
    };
    var limitNumber = vue.computed(function() {
      var _params$value2 = params.value, maxlength = _params$value2.maxlength, maxcharacter = _params$value2.maxcharacter, value = _params$value2.value;
      if (isNumber_1(value)) return String(value);
      if (maxlength && maxcharacter) {
        log.warn("Input", "Pick one of maxlength and maxcharacter please.");
      }
      if (maxlength) {
        var length = value !== null && value !== void 0 && value.length ? getUnicodeLength(value) : 0;
        return "".concat(length, "/").concat(maxlength);
      }
      if (maxcharacter) {
        return "".concat(getCharacterLength(value || ""), "/").concat(maxcharacter);
      }
      return "";
    });
    var innerStatus = vue.computed(function() {
      if (limitNumber.value) {
        var _limitNumber$value$sp = limitNumber.value.split("/"), _limitNumber$value$sp2 = _slicedToArray(_limitNumber$value$sp, 2), current = _limitNumber$value$sp2[0], total = _limitNumber$value$sp2[1];
        return Number(current) > Number(total) ? "error" : "";
      }
      return "";
    });
    var tStatus = vue.computed(function() {
      var status = params.value.status;
      return status || innerStatus.value;
    });
    var onValidateChange = function onValidateChange2() {
      var _params$value$onValid, _params$value3;
      (_params$value$onValid = (_params$value3 = params.value).onValidate) === null || _params$value$onValid === void 0 || _params$value$onValid.call(_params$value3, {
        error: innerStatus.value ? "exceed-maximum" : void 0
      });
    };
    vue.watch(innerStatus, onValidateChange);
    vue.onMounted(function() {
      innerStatus.value && onValidateChange();
    });
    return {
      tStatus,
      limitNumber,
      getValueByLimitNumber
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function getOutputValue(val, type) {
    if (type === "number") {
      return val || val === 0 ? Number(val) : void 0;
    }
    return val;
  }
  function useInput(props2, expose) {
    var _toRefs = vue.toRefs(props2), value = _toRefs.value, modelValue = _toRefs.modelValue;
    var inputValue = vue.ref();
    var isComposition = vue.ref(false);
    var compositionValue = vue.ref();
    var clearIconRef = vue.ref(null);
    var innerClickElement = vue.ref();
    var disabled = useDisabled();
    var _useVModel = useVModel(value, modelValue, props2.defaultValue, props2.onChange), _useVModel2 = _slicedToArray(_useVModel, 2), innerValue = _useVModel2[0], setInnerValue = _useVModel2[1];
    var isHover = vue.ref(false);
    var focused = vue.ref(false);
    var renderType = vue.ref(props2.type);
    var inputRef = vue.ref(null);
    var limitParams = vue.computed(function() {
      return {
        value: [void 0, null].includes(innerValue.value) ? void 0 : String(innerValue.value),
        status: props2.status,
        maxlength: Number(props2.maxlength),
        maxcharacter: props2.maxcharacter,
        allowInputOverMax: props2.allowInputOverMax,
        onValidate: props2.onValidate
      };
    });
    var _useLengthLimit = useLengthLimit(limitParams), limitNumber = _useLengthLimit.limitNumber, getValueByLimitNumber = _useLengthLimit.getValueByLimitNumber, tStatus = _useLengthLimit.tStatus;
    var showClear = vue.computed(function() {
      return (innerValue.value && !disabled.value && props2.clearable && !props2.readonly || props2.showClearIconOnEmpty) && isHover.value;
    });
    var focus = function focus2() {
      var _inputRef$value;
      focused.value = true;
      (_inputRef$value = inputRef.value) === null || _inputRef$value === void 0 || _inputRef$value.focus();
    };
    var blur = function blur2() {
      var _inputRef$value2;
      focused.value = false;
      (_inputRef$value2 = inputRef.value) === null || _inputRef$value2 === void 0 || _inputRef$value2.blur();
    };
    var emitFocus = function emitFocus2(e) {
      var _props$onFocus;
      if (isHover.value && focused.value) return;
      inputValue.value = innerValue.value;
      if (props2.disabled) return;
      focused.value = true;
      (_props$onFocus = props2.onFocus) === null || _props$onFocus === void 0 || _props$onFocus.call(props2, innerValue.value, {
        e
      });
    };
    var emitClear = function emitClear2(_ref) {
      var _props$onClear;
      var e = _ref.e;
      var val = props2.type === "number" ? void 0 : "";
      setInnerValue(val, {
        e,
        trigger: "clear"
      });
      (_props$onClear = props2.onClear) === null || _props$onClear === void 0 || _props$onClear.call(props2, {
        e
      });
    };
    var onClearIconMousedown = function onClearIconMousedown2(e) {
      innerClickElement.value = e.target;
    };
    var emitPassword = function emitPassword2() {
      var toggleType = renderType.value === "password" ? "text" : "password";
      renderType.value = toggleType;
    };
    var setInputElValue = function setInputElValue2() {
      var v = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
      var inputEl = inputRef.value;
      if (!inputEl) return;
      var sV = String(v);
      if (!inputEl.value) {
        return;
      }
      if (inputEl.value !== sV) {
        inputEl.value = sV;
      }
    };
    var inputValueChangeHandle = function inputValueChangeHandle2(e) {
      var _innerValue$value;
      var target = e.target;
      var val = target.value;
      if (props2.type !== "number" && typeof innerValue.value === "string" && val.length > ((_innerValue$value = innerValue.value) === null || _innerValue$value === void 0 ? void 0 : _innerValue$value.length)) {
        val = getValueByLimitNumber(val);
      }
      setInnerValue(getOutputValue(val, props2.type), {
        e,
        trigger: "input"
      });
      vue.nextTick(function() {
        setInputElValue(innerValue.value);
      });
    };
    var handleInput = function handleInput2(e) {
      var checkInputType = e.inputType && e.inputType === "insertCompositionText";
      var val = e.currentTarget.value;
      if (checkInputType || isComposition.value) {
        compositionValue.value = val;
        return;
      }
      inputValueChangeHandle(e);
    };
    var isClearIcon = function isClearIcon2() {
      var _clearIconRef$value;
      var tmp = innerClickElement.value;
      if (!tmp || !tmp.tagName || !((_clearIconRef$value = clearIconRef.value) !== null && _clearIconRef$value !== void 0 && _clearIconRef$value.$el) || !["path", "svg"].includes(tmp.tagName)) return false;
      while (tmp) {
        var _clearIconRef$value2;
        if (((_clearIconRef$value2 = clearIconRef.value) === null || _clearIconRef$value2 === void 0 ? void 0 : _clearIconRef$value2.$el) === tmp) {
          return true;
        }
        tmp = tmp.parentNode;
      }
      return false;
    };
    var formItem = vue.inject(FormItemInjectionKey, void 0);
    var formatAndEmitBlur = function formatAndEmitBlur2(e) {
      if (!isClearIcon()) {
        var _props$onBlur;
        if (props2.format) {
          inputValue.value = typeof innerValue.value === "number" || props2.type === "number" ? innerValue.value : props2.format(innerValue.value);
        }
        focused.value = false;
        (_props$onBlur = props2.onBlur) === null || _props$onBlur === void 0 || _props$onBlur.call(props2, innerValue.value, {
          e
        });
        formItem === null || formItem === void 0 || formItem.handleBlur();
      } else {
        focus();
      }
    };
    var onHandleCompositionend = function onHandleCompositionend2(e) {
      var _props$onCompositione;
      isComposition.value = false;
      compositionValue.value = "";
      inputValueChangeHandle(e);
      (_props$onCompositione = props2.onCompositionend) === null || _props$onCompositione === void 0 || _props$onCompositione.call(props2, String(innerValue.value), {
        e
      });
    };
    var onHandleCompositionstart = function onHandleCompositionstart2(e) {
      var _props$onCompositions;
      isComposition.value = true;
      var value2 = e.currentTarget.value;
      compositionValue.value = value2;
      (_props$onCompositions = props2.onCompositionstart) === null || _props$onCompositions === void 0 || _props$onCompositions.call(props2, String(innerValue.value), {
        e
      });
    };
    var onRootClick = function onRootClick2(e) {
      var _inputRef$value3, _props$onClick;
      (_inputRef$value3 = inputRef.value) === null || _inputRef$value3 === void 0 || _inputRef$value3.focus();
      (_props$onClick = props2.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props2, {
        e
      });
    };
    vue.watch(function() {
      return props2.autofocus;
    }, function(value2) {
      if (value2 === true) {
        vue.nextTick(function() {
          var _inputRef$value4;
          (_inputRef$value4 = inputRef.value) === null || _inputRef$value4 === void 0 || _inputRef$value4.focus();
        });
      }
    }, {
      immediate: true
    });
    vue.watch(innerValue, function(val, oldVal) {
      var isNumberType = props2.type === "number";
      if (oldVal === void 0 && props2.format && typeof val !== "number" && !isNumberType) {
        inputValue.value = props2.format(val);
      } else {
        inputValue.value = val;
      }
      var newVal = typeof val === "number" ? val : getValueByLimitNumber(val);
      if (newVal !== val && !isNumberType) {
        setInnerValue(newVal, {
          trigger: "initial"
        });
      }
    }, {
      immediate: true
    });
    vue.watch(function() {
      return props2.type;
    }, function(v) {
      renderType.value = v;
    }, {
      immediate: true
    });
    expose({
      inputRef,
      focus,
      blur
    });
    return {
      isHover,
      focused,
      renderType,
      showClear,
      inputRef,
      clearIconRef,
      inputValue,
      isComposition,
      compositionValue,
      limitNumber,
      tStatus,
      emitFocus,
      formatAndEmitBlur,
      onHandleCompositionend,
      onHandleCompositionstart,
      onRootClick,
      emitPassword,
      handleInput,
      emitClear,
      onClearIconMousedown,
      innerValue
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useInputEventHandler(props2, isHover) {
    var handleKeydown = function handleKeydown2(e) {
      if (props2.disabled) return;
      var code = e.code;
      var tmpValue = getOutputValue(e.currentTarget.value, props2.type);
      if (/enter/i.test(code) || /enter/i.test(e.key)) {
        var _props$onEnter;
        (_props$onEnter = props2.onEnter) === null || _props$onEnter === void 0 || _props$onEnter.call(props2, tmpValue, {
          e
        });
      } else {
        var _props$onKeydown;
        (_props$onKeydown = props2.onKeydown) === null || _props$onKeydown === void 0 || _props$onKeydown.call(props2, tmpValue, {
          e
        });
      }
    };
    var handleKeyUp = function handleKeyUp2(e) {
      var _props$onKeyup;
      if (props2.disabled) return;
      var tmpValue = getOutputValue(e.currentTarget.value, props2.type);
      (_props$onKeyup = props2.onKeyup) === null || _props$onKeyup === void 0 || _props$onKeyup.call(props2, tmpValue, {
        e
      });
    };
    var handleKeypress = function handleKeypress2(e) {
      var _props$onKeypress;
      if (props2.disabled) return;
      var tmpValue = getOutputValue(e.currentTarget.value, props2.type);
      (_props$onKeypress = props2.onKeypress) === null || _props$onKeypress === void 0 || _props$onKeypress.call(props2, tmpValue, {
        e
      });
    };
    var onHandlePaste = function onHandlePaste2(e) {
      var _props$onPaste;
      if (props2.disabled) return;
      var clipData = e.clipboardData || window.clipboardData;
      (_props$onPaste = props2.onPaste) === null || _props$onPaste === void 0 || _props$onPaste.call(props2, {
        e,
        pasteValue: clipData === null || clipData === void 0 ? void 0 : clipData.getData("text/plain")
      });
    };
    var mouseEvent = function mouseEvent2(v) {
      return isHover.value = v;
    };
    var onHandleMousewheel = function onHandleMousewheel2(e) {
      var _props$onWheel;
      return (_props$onWheel = props2.onWheel) === null || _props$onWheel === void 0 ? void 0 : _props$onWheel.call(props2, {
        e
      });
    };
    var onInputMouseenter = function onInputMouseenter2(e) {
      var _props$onMouseenter;
      mouseEvent(true);
      (_props$onMouseenter = props2.onMouseenter) === null || _props$onMouseenter === void 0 || _props$onMouseenter.call(props2, {
        e
      });
    };
    var onInputMouseleave = function onInputMouseleave2(e) {
      var _props$onMouseleave;
      mouseEvent(false);
      (_props$onMouseleave = props2.onMouseleave) === null || _props$onMouseleave === void 0 || _props$onMouseleave.call(props2, {
        e
      });
    };
    return {
      isHover,
      handleKeydown,
      handleKeyUp,
      handleKeypress,
      onHandlePaste,
      onHandleMousewheel,
      onInputMouseenter,
      onInputMouseleave
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var ANIMATION_TIME = 100;
  function useInputWidth(props2, inputRef, innerValue) {
    var _toRefs = vue.toRefs(props2), autoWidth = _toRefs.autoWidth, placeholder = _toRefs.placeholder;
    var inputPreRef = vue.ref(null);
    var observerTimer = vue.ref(null);
    var updateInputWidth = function updateInputWidth2() {
      if (!inputPreRef.value || !inputRef.value) return;
      var _inputPreRef$value$ge = inputPreRef.value.getBoundingClientRect(), width = _inputPreRef$value$ge.width;
      inputRef.value.style.width = "".concat(width || 0, "px");
    };
    useResizeObserver(inputRef, function() {
      if (autoWidth.value) {
        observerTimer.value = setTimeout(function() {
          updateInputWidth();
          clearTimeout(observerTimer.value);
        }, ANIMATION_TIME);
      }
    });
    vue.onBeforeUnmount(function() {
      clearTimeout(observerTimer.value);
    });
    var addListeners = function addListeners2() {
      vue.watch([innerValue, placeholder], function() {
        if (!autoWidth.value) return;
        vue.nextTick(function() {
          updateInputWidth();
        });
      }, {
        immediate: true
      });
    };
    vue.onMounted(function() {
      if (autoWidth.value) {
        addListeners();
      }
    });
    return {
      inputPreRef
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var _excluded$3 = ["isHover", "tStatus", "inputRef", "renderType", "showClear", "focused", "inputValue", "isComposition", "compositionValue", "innerValue", "limitNumber"];
  function ownKeys$e(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$e(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$e(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$e(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  function getValidAttrs(obj) {
    var newObj = {};
    Object.keys(obj).forEach(function(key) {
      if (!isUndefined_1(obj[key])) {
        newObj[key] = obj[key];
      }
    });
    return newObj;
  }
  var _Input = vue.defineComponent({
    name: "TInput",
    props: _objectSpread$e(_objectSpread$e({}, props$b), {}, {
      showInput: {
        type: Boolean,
        "default": true
      },
      keepWrapperWidth: {
        type: Boolean,
        "default": false
      }
    }),
    setup: function setup10(props2, _ref) {
      var expose = _ref.expose;
      var _useConfig = useConfig("input"), globalConfig = _useConfig.globalConfig;
      var _useGlobalIcon = useGlobalIcon({
        BrowseIcon: browse,
        BrowseOffIcon: browseOff,
        CloseCircleFilledIcon: closeCircleFilled
      }), BrowseIcon$1 = _useGlobalIcon.BrowseIcon, BrowseOffIcon$1 = _useGlobalIcon.BrowseOffIcon, CloseCircleFilledIcon$1 = _useGlobalIcon.CloseCircleFilledIcon;
      var readonly = useReadonly();
      var disabled = useDisabled();
      var COMPONENT_NAME = usePrefixClass("input");
      var INPUT_WRAP_CLASS = usePrefixClass("input__wrap");
      var INPUT_TIPS_CLASS = usePrefixClass("input__tips");
      var _useCommonClassName = useCommonClassName$2(), STATUS = _useCommonClassName.STATUS, SIZE = _useCommonClassName.SIZE;
      var classPrefix = usePrefixClass();
      var renderTNodeJSX3 = useTNodeJSX();
      var _useInput = useInput(props2, expose), isHover = _useInput.isHover, tStatus = _useInput.tStatus, inputRef = _useInput.inputRef, renderType = _useInput.renderType, showClear = _useInput.showClear, focused = _useInput.focused, inputValue = _useInput.inputValue, isComposition = _useInput.isComposition, compositionValue = _useInput.compositionValue, innerValue = _useInput.innerValue, limitNumber = _useInput.limitNumber, inputHandle = _objectWithoutProperties(_useInput, _excluded$3);
      var _useInputWidth = useInputWidth(props2, inputRef, innerValue), inputPreRef = _useInputWidth.inputPreRef;
      var inputEventHandler = useInputEventHandler(props2, isHover);
      var tPlaceholder = vue.computed(function() {
        var _props2$placeholder;
        return (_props2$placeholder = props2.placeholder) !== null && _props2$placeholder !== void 0 ? _props2$placeholder : globalConfig.value.placeholder;
      });
      var inputAttrs = vue.computed(function() {
        var _props2$autocomplete;
        return getValidAttrs({
          autofocus: props2.autofocus,
          disabled: disabled.value,
          readonly: readonly.value,
          placeholder: tPlaceholder.value,
          maxlength: !props2.allowInputOverMax && props2.maxlength || void 0,
          name: props2.name || void 0,
          type: renderType.value,
          autocomplete: (_props2$autocomplete = props2.autocomplete) !== null && _props2$autocomplete !== void 0 ? _props2$autocomplete : globalConfig.value.autocomplete || void 0,
          unselectable: readonly.value ? "on" : void 0,
          spellcheck: props2.spellCheck
        });
      });
      var wrapClasses = vue.computed(function() {
        return [INPUT_WRAP_CLASS.value, _defineProperty$2({}, "".concat(COMPONENT_NAME.value, "--auto-width"), props2.autoWidth && !props2.keepWrapperWidth)];
      });
      var inputEvents = getValidAttrs({
        onFocus: inputHandle.emitFocus,
        onBlur: inputHandle.formatAndEmitBlur,
        onKeydown: inputEventHandler.handleKeydown,
        onKeyup: inputEventHandler.handleKeyUp,
        onKeypress: inputEventHandler.handleKeypress,
        onPaste: inputEventHandler.onHandlePaste,
        onCompositionend: inputHandle.onHandleCompositionend,
        onCompositionstart: inputHandle.onHandleCompositionstart
      });
      return function() {
        var _compositionValue$val, _inputValue$value;
        var prefixIcon = renderTNodeJSX3("prefixIcon");
        var suffixIcon = renderTNodeJSX3("suffixIcon");
        var passwordIcon = renderTNodeJSX3("passwordIcon");
        var label = renderTNodeJSX3("label", {
          silent: true
        });
        var suffix2 = renderTNodeJSX3("suffix");
        var limitNode = limitNumber.value && props2.showLimitNumber ? vue.createVNode("div", {
          "class": ["".concat(classPrefix.value, "-input__limit-number"), _defineProperty$2({}, "".concat(classPrefix.value, "-is-disabled"), disabled.value)]
        }, [limitNumber.value]) : null;
        var labelContent = label ? vue.createVNode("div", {
          "class": "".concat(COMPONENT_NAME.value, "__prefix")
        }, [label]) : null;
        var suffixContent = suffix2 || limitNode ? vue.createVNode("div", {
          "class": "".concat(COMPONENT_NAME.value, "__suffix")
        }, [suffix2, limitNode]) : null;
        if (props2.type === "password") {
          if (renderType.value === "password") {
            suffixIcon = vue.createVNode(BrowseOffIcon$1, {
              "class": "".concat(COMPONENT_NAME.value, "__suffix-clear"),
              "onClick": inputHandle.emitPassword
            }, null);
          } else if (renderType.value === "text") {
            suffixIcon = vue.createVNode(BrowseIcon$1, {
              "class": "".concat(COMPONENT_NAME.value, "__suffix-clear"),
              "onClick": inputHandle.emitPassword
            }, null);
          }
        }
        if (showClear.value) {
          if (props2.type === "password") {
            passwordIcon = vue.createVNode(CloseCircleFilledIcon$1, {
              "ref": inputHandle.clearIconRef,
              "class": "".concat(COMPONENT_NAME.value, "__suffix-clear"),
              "onClick": inputHandle.emitClear,
              "onMousedown": inputHandle.onClearIconMousedown
            }, null);
          } else {
            suffixIcon = vue.createVNode(CloseCircleFilledIcon$1, {
              "ref": inputHandle.clearIconRef,
              "class": "".concat(COMPONENT_NAME.value, "__suffix-clear"),
              "onClick": inputHandle.emitClear,
              "onMousedown": inputHandle.onClearIconMousedown
            }, null);
          }
        }
        var classes = [COMPONENT_NAME.value, props2.inputClass, _defineProperty$2(_defineProperty$2(_defineProperty$2(_defineProperty$2(_defineProperty$2(_defineProperty$2(_defineProperty$2(_defineProperty$2(_defineProperty$2(_defineProperty$2({}, SIZE.value[props2.size], props2.size !== "medium"), STATUS.value.disabled, disabled.value), STATUS.value.focused, disabled.value ? false : focused.value), "".concat(classPrefix.value, "-is-").concat(tStatus.value), tStatus.value && tStatus.value !== "default"), "".concat(classPrefix.value, "-align-").concat(props2.align), props2.align !== "left"), "".concat(classPrefix.value, "-is-readonly"), readonly.value), "".concat(COMPONENT_NAME.value, "--prefix"), prefixIcon || labelContent), "".concat(COMPONENT_NAME.value, "--suffix"), suffixIcon || suffixContent), "".concat(COMPONENT_NAME.value, "--borderless"), props2.borderless), "".concat(COMPONENT_NAME.value, "--focused"), focused.value)];
        var tips = renderTNodeJSX3("tips");
        var tipsClasses = [INPUT_TIPS_CLASS.value, "".concat(classPrefix.value, "-tips"), "".concat(classPrefix.value, "-is-").concat(tStatus.value || "default")];
        return vue.withDirectives(vue.createVNode("div", {
          "class": wrapClasses.value
        }, [vue.createVNode("div", {
          "class": classes,
          "onClick": inputHandle.onRootClick,
          "onMouseenter": inputEventHandler.onInputMouseenter,
          "onMouseleave": inputEventHandler.onInputMouseleave,
          "onWheel": inputEventHandler.onHandleMousewheel
        }, [prefixIcon ? vue.createVNode("span", {
          "class": ["".concat(COMPONENT_NAME.value, "__prefix"), "".concat(COMPONENT_NAME.value, "__prefix-icon")]
        }, [prefixIcon]) : null, labelContent, vue.createVNode("input", vue.mergeProps({
          "class": ["".concat(COMPONENT_NAME.value, "__inner"), _defineProperty$2({}, "".concat(COMPONENT_NAME.value, "--soft-hidden"), !props2.showInput)]
        }, inputAttrs.value, inputEvents, {
          "ref": inputRef,
          "value": isComposition.value ? (_compositionValue$val = compositionValue.value) !== null && _compositionValue$val !== void 0 ? _compositionValue$val : "" : (_inputValue$value = inputValue.value) !== null && _inputValue$value !== void 0 ? _inputValue$value : "",
          "onInput": function onInput(e) {
            return inputHandle.handleInput(e);
          }
        }), null), props2.autoWidth && vue.createVNode("span", {
          "ref": inputPreRef,
          "class": "".concat(classPrefix.value, "-input__input-pre")
        }, [innerValue.value || tPlaceholder.value]), suffixContent, passwordIcon ? vue.createVNode("span", {
          "class": ["".concat(COMPONENT_NAME.value, "__suffix"), "".concat(COMPONENT_NAME.value, "__suffix-icon"), "".concat(COMPONENT_NAME.value, "__clear")]
        }, [passwordIcon]) : null, suffixIcon ? vue.createVNode("span", {
          "class": ["".concat(COMPONENT_NAME.value, "__suffix"), "".concat(COMPONENT_NAME.value, "__suffix-icon"), _defineProperty$2({}, "".concat(COMPONENT_NAME.value, "__clear"), showClear.value)]
        }, [suffixIcon]) : null]), tips && vue.createVNode("div", {
          "class": tipsClasses
        }, [tips])]), [[vue.vShow, props2.type !== "hidden"]]);
      };
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var inputGroupProps = {
    separate: Boolean
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var _InputGroup = vue.defineComponent({
    name: "TInputGroup",
    props: inputGroupProps,
    setup: function setup11(props2) {
      var COMPONENT_NAME = usePrefixClass("input-group");
      var renderTNodeJSX3 = useTNodeJSX();
      var CLASS = vue.computed(function() {
        return [COMPONENT_NAME.value, _defineProperty$2({}, "".concat(COMPONENT_NAME.value, "--separate"), props2.separate)];
      });
      return function() {
        return vue.createVNode("div", {
          "class": CLASS.value
        }, [renderTNodeJSX3("default")]);
      };
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var Input = withInstall(_Input);
  withInstall(_InputGroup);
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props$a = {
    align: {
      type: String,
      validator: function validator14(val) {
        if (!val) return true;
        return ["left", "center", "right"].includes(val);
      }
    },
    allowInputOverLimit: {
      type: Boolean,
      "default": true
    },
    autoWidth: Boolean,
    decimalPlaces: {
      type: Number,
      "default": void 0
    },
    disabled: {
      type: Boolean,
      "default": void 0
    },
    format: {
      type: Function
    },
    inputProps: {
      type: Object
    },
    label: {
      type: [String, Function]
    },
    largeNumber: Boolean,
    max: {
      type: [String, Number],
      "default": Infinity
    },
    min: {
      type: [String, Number],
      "default": -Infinity
    },
    placeholder: {
      type: String,
      "default": void 0
    },
    readonly: {
      type: Boolean,
      "default": void 0
    },
    size: {
      type: String,
      "default": "medium",
      validator: function validator15(val) {
        if (!val) return true;
        return ["small", "medium", "large"].includes(val);
      }
    },
    status: {
      type: String,
      "default": "default",
      validator: function validator16(val) {
        if (!val) return true;
        return ["default", "success", "warning", "error"].includes(val);
      }
    },
    step: {
      type: [String, Number],
      "default": 1
    },
    suffix: {
      type: [String, Function]
    },
    theme: {
      type: String,
      "default": "row",
      validator: function validator17(val) {
        if (!val) return true;
        return ["column", "row", "normal"].includes(val);
      }
    },
    tips: {
      type: [String, Function]
    },
    value: {
      type: [String, Number],
      "default": void 0
    },
    modelValue: {
      type: [String, Number],
      "default": void 0
    },
    defaultValue: {
      type: [String, Number]
    },
    onBlur: Function,
    onChange: Function,
    onEnter: Function,
    onFocus: Function,
    onKeydown: Function,
    onKeypress: Function,
    onKeyup: Function,
    onValidate: Function
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function fillZero(length) {
    return new Array(length).fill(0).join("");
  }
  function isInputNumber(num) {
    if (!num) return true;
    if (isNumber_1(num)) return !Number.isNaN(num);
    var r = /^[0-9|e|E|-]+\.*[0-9|e|E|-]*$/.test(num);
    if (!r) return false;
    var eCount = 0;
    var negativeCount = 0;
    var dotCount = 0;
    for (var i = 0, len = num.length; i < len; i++) {
      if (num[i] === ".") {
        dotCount += 1;
        if (dotCount > 1) return false;
      }
      if (/(e|E)+/.test(num[i])) {
        eCount += 1;
        if (eCount > 1) return false;
      }
      if (num[i] === "-") {
        negativeCount += 1;
        if (negativeCount > 2) return false;
      }
    }
    return true;
  }
  function removeInvalidZero(num) {
    var decimal = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    if (num.indexOf(".") !== -1) {
      log.error("InputNumber", "num is not a integer number.");
      return num;
    }
    if (!num || num === "0" && decimal) return "";
    if (num === "0") return num;
    return (decimal ? num.replace(/0+$/, "") : num.replace(/^0+/, "")) || "0";
  }
  function largeIntNumberAdd(num1, num2) {
    var decimal = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
    var number1 = removeInvalidZero(num1, decimal);
    var number2 = removeInvalidZero(num2, decimal);
    var isFirstLarger = number1.length > number2.length;
    var maxNumber = isFirstLarger ? number1 : number2;
    var minNumber = isFirstLarger ? number2 : number1;
    var newNumber = [];
    var step = [];
    var diff = decimal ? 0 : maxNumber.length - minNumber.length;
    var len = decimal ? minNumber.length : maxNumber.length;
    for (var i = len - 1; i >= 0; i--) {
      var minIndex = i - diff;
      var count = Number(maxNumber[i]) + (Number(minNumber[minIndex]) || 0) + (step[i] || 0);
      if (count >= 10) {
        step[i - 1] = 1;
      }
      newNumber.unshift(String(count % 10));
    }
    if (step[-1]) {
      newNumber.unshift("1");
    }
    if (decimal) {
      return newNumber.concat(maxNumber.slice(len, maxNumber.length)).join("");
    }
    return newNumber.join("");
  }
  function largePositiveNumberAdd(num1, num2) {
    var _num1$split = num1.split("."), _num1$split2 = _slicedToArray(_num1$split, 2), _num1$split2$ = _num1$split2[0], intNumber1 = _num1$split2$ === void 0 ? "0" : _num1$split2$, _num1$split2$2 = _num1$split2[1], decimalNumber1 = _num1$split2$2 === void 0 ? "0" : _num1$split2$2;
    var _num2$split = num2.split("."), _num2$split2 = _slicedToArray(_num2$split, 2), _num2$split2$ = _num2$split2[0], intNumber2 = _num2$split2$ === void 0 ? "0" : _num2$split2$, _num2$split2$2 = _num2$split2[1], decimalNumber2 = _num2$split2$2 === void 0 ? "0" : _num2$split2$2;
    var integerSum = largeIntNumberAdd(intNumber1, intNumber2);
    if (decimalNumber1 === "0" && decimalNumber2 === "0") return integerSum;
    var newDecimalNumber1 = removeInvalidZero(decimalNumber1, true);
    var newDecimalNumber2 = removeInvalidZero(decimalNumber2, true);
    var decimalNumberSum = largeIntNumberAdd(newDecimalNumber1, newDecimalNumber2, true);
    var decimalLength = decimalNumberSum.length;
    if (decimalLength > newDecimalNumber1.length && decimalLength > newDecimalNumber2.length) {
      return [removeInvalidZero(largeIntNumberAdd(integerSum, "1")), removeInvalidZero(decimalNumberSum.slice(1), true)].filter(function(v) {
        return v;
      }).join(".");
    }
    return [removeInvalidZero(integerSum), removeInvalidZero(decimalNumberSum, true)].filter(function(v) {
      return v;
    }).join(".");
  }
  function compareLargeIntegerNumber(num1, num2) {
    var number1 = removeInvalidZero(num1);
    var number2 = removeInvalidZero(num2);
    if (number1.length === number2.length) {
      for (var i = 0, len = number1.length; i < len; i++) {
        if (number1[i] > number2[i]) return 1;
        if (number1[i] < number2[i]) return -1;
      }
      return 0;
    }
    return number1.length > number2.length ? 1 : -1;
  }
  function compareLargeDecimalNumber(num1, num2) {
    var number1 = num1 && num1 !== "0" ? num1.replace(/0+$/, "") : "0";
    var number2 = num2 && num2 !== "0" ? num2.replace(/0+$/, "") : "0";
    var maxLength = Math.max(number1.length, number2.length);
    for (var i = 0, len = maxLength; i < len; i++) {
      if ((number1[i] || 0) > (number2[i] || 0)) return 1;
      if ((number1[i] || 0) < (number2[i] || 0)) return -1;
    }
    return 0;
  }
  function formatENumber(num) {
    var _num$split = num.split("e"), _num$split2 = _slicedToArray(_num$split, 2), num1 = _num$split2[0], num2 = _num$split2[1];
    if (!num2) return num;
    var _num$split3 = num.split("."), _num$split4 = _slicedToArray(_num$split3, 2), integer = _num$split4[0], _num$split4$ = _num$split4[1], initDecimal = _num$split4$ === void 0 ? "" : _num$split4$;
    var zeroCount = Number(num2);
    var _initDecimal$split = initDecimal.split("e"), _initDecimal$split2 = _slicedToArray(_initDecimal$split, 1), decimal = _initDecimal$split2[0];
    if (zeroCount > decimal.length) {
      var multipleZero = fillZero(zeroCount - decimal.length);
      return num1.replace(/(^0+|\.)/g, "") + multipleZero;
    }
    var n1 = integer.replace(/^0+/, "") + decimal.slice(0, zeroCount);
    var d2 = decimal.slice(zeroCount);
    return d2 ? [n1, d2].join(".") : n1;
  }
  function compareLargeNumber(num1, num2) {
    var _formatENumber$split = formatENumber(num1).split("."), _formatENumber$split2 = _slicedToArray(_formatENumber$split, 2), integer1 = _formatENumber$split2[0], decimal1 = _formatENumber$split2[1];
    var _formatENumber$split3 = formatENumber(num2).split("."), _formatENumber$split4 = _slicedToArray(_formatENumber$split3, 2), integer2 = _formatENumber$split4[0], decimal2 = _formatENumber$split4[1];
    var result = compareLargeIntegerNumber(integer1.replace("-", ""), integer2.replace("-", ""));
    var integer1IsNegative = integer1.includes("-");
    var integer2IsNegative = integer2.includes("-");
    if (integer1IsNegative && !integer2IsNegative) return -1;
    if (!integer1IsNegative && integer2IsNegative) return 1;
    if (integer1IsNegative && integer2IsNegative) {
      if (result === 0) return 0;
      return result > 0 ? -1 : 1;
    }
    if (result === 0) {
      return compareLargeDecimalNumber(decimal1, decimal2);
    }
    return result;
  }
  function isInfinity(num) {
    return [-Infinity, Infinity].includes(Number(num));
  }
  function isSafeNumber(num) {
    return Number(num) < Number.MAX_SAFE_INTEGER && Number(num) > Number.MIN_SAFE_INTEGER;
  }
  function compareNumber(num1, num2, largeNumber) {
    var isSafeNumberCompare = isSafeNumber(num1) && isSafeNumber(num2) && !largeNumber;
    var isInfinityCompare = isInfinity(num1) || isInfinity(num2);
    if (isSafeNumberCompare || isInfinityCompare) {
      if (Number(num1) === Number(num2)) return 0;
      return Number(num1) > Number(num2) ? 1 : -1;
    }
    return compareLargeNumber(String(num1), String(num2));
  }
  function largeIntegerNumberSubtract(num1, num2, p) {
    if (num1 === num2) return "0";
    var _ref = p || {}, decimal = _ref.decimal, stayZero = _ref.stayZero;
    var number1 = removeInvalidZero(num1);
    var number2 = removeInvalidZero(num2);
    var isFirstLarger = compareLargeIntegerNumber(number1, number2) > 0;
    var maxNumber = isFirstLarger ? number1 : number2;
    var minNumber = isFirstLarger ? number2 : number1;
    var newNumber = [];
    var step = [];
    var diff = decimal ? 0 : maxNumber.length - minNumber.length;
    var len = decimal ? minNumber.length : maxNumber.length;
    for (var i = len - 1; i >= 0; i--) {
      var minIndex = i - diff;
      var count = Number(maxNumber[i]) - (Number(minNumber[minIndex]) || 0) - (step[i] || 0);
      if (count < 0) {
        step[i - 1] = 1;
        count += 10;
      }
      newNumber.unshift(String(count));
    }
    if (decimal) {
      return newNumber.concat(maxNumber.slice(len, maxNumber.length)).join("");
    }
    var finalNumber = newNumber.join("");
    if (!stayZero) {
      finalNumber = finalNumber.replace(/^0+/, "");
    }
    return removeInvalidZero(isFirstLarger ? finalNumber : "-".concat(finalNumber));
  }
  function largePositiveNumberSubtract(num1, num2) {
    if (num1 === num2) return "0";
    var isFirstLarger = compareNumber(num1, num2, true) > 0;
    var maxNumber = isFirstLarger ? num1 : num2;
    var minNumber = isFirstLarger ? num2 : num1;
    var _maxNumber$split = maxNumber.split("."), _maxNumber$split2 = _slicedToArray(_maxNumber$split, 2), intNumber1 = _maxNumber$split2[0], _maxNumber$split2$ = _maxNumber$split2[1], decimalNumber1 = _maxNumber$split2$ === void 0 ? "0" : _maxNumber$split2$;
    var _minNumber$split = minNumber.split("."), _minNumber$split2 = _slicedToArray(_minNumber$split, 2), intNumber2 = _minNumber$split2[0], _minNumber$split2$ = _minNumber$split2[1], decimalNumber2 = _minNumber$split2$ === void 0 ? "0" : _minNumber$split2$;
    var integerNumber = largeIntegerNumberSubtract(intNumber1, intNumber2);
    if (decimalNumber1 === "0" && decimalNumber2 === "0") {
      return isFirstLarger ? integerNumber : "-".concat(integerNumber);
    }
    var decimalNumber = "";
    var addOneNumber = decimalNumber1;
    if (decimalNumber1.length < decimalNumber2.length) {
      addOneNumber = "".concat(decimalNumber1).concat(fillZero(decimalNumber2.length - decimalNumber1.length));
    }
    if (compareLargeDecimalNumber(addOneNumber, decimalNumber2) >= 0) {
      decimalNumber = largeIntegerNumberSubtract(addOneNumber, decimalNumber2, {
        decimal: true
      });
    } else {
      if (decimalNumber1.length < decimalNumber2.length || decimalNumber1 === "0") {
        decimalNumber = largeIntegerNumberSubtract("1".concat(addOneNumber), decimalNumber2, {
          stayZero: true
        });
        decimalNumber = fillZero(decimalNumber2.length - decimalNumber.length) + decimalNumber;
      } else {
        decimalNumber = largeIntegerNumberSubtract(decimalNumber1, decimalNumber2, {
          decimal: true
        });
      }
      integerNumber = largeIntegerNumberSubtract(integerNumber, "1");
    }
    var finalNumber = decimalNumber ? [integerNumber, decimalNumber].join(".") : integerNumber;
    return isFirstLarger ? finalNumber : "-".concat(finalNumber);
  }
  function largeNumberSubtract(num1, num2) {
    var isFirstNegative = num1[0] === "-";
    var isSecondNegative = num2[0] === "-";
    if (isFirstNegative && !isSecondNegative) {
      var r = largePositiveNumberAdd(num1.slice(1), num2);
      return "-".concat(r);
    }
    if (isFirstNegative && isSecondNegative) {
      return largePositiveNumberSubtract(num2.slice(1), num1.slice(1));
    }
    if (!isFirstNegative && isSecondNegative) {
      return largePositiveNumberAdd(num1, num2.slice(1));
    }
    return largePositiveNumberSubtract(num1, num2);
  }
  function largeNumberAdd(num1, num2) {
    var isFirstNegative = num1[0] === "-";
    var isSecondNegative = num2[0] === "-";
    if (isFirstNegative && !isSecondNegative) {
      return largePositiveNumberSubtract(num2, num1.slice(1));
    }
    if (isFirstNegative && isSecondNegative) {
      var r = largePositiveNumberAdd(num2.slice(1), num1.slice(1));
      return "-".concat(r);
    }
    if (!isFirstNegative && isSecondNegative) {
      return largePositiveNumberSubtract(num1, num2.slice(1));
    }
    return largePositiveNumberAdd(num1, num2);
  }
  function largeNumberToFixed(number) {
    var decimalPlaces = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
    var largeNumber = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
    if (!largeNumber) return Number(number).toFixed(decimalPlaces);
    if (!isString_1(number)) return String(number);
    var _number$split = number.split("."), _number$split2 = _slicedToArray(_number$split, 2), num1 = _number$split2[0], num2 = _number$split2[1];
    if (!num2) {
      return decimalPlaces ? [number, fillZero(decimalPlaces)].join(".") : number;
    }
    if (decimalPlaces === 0) {
      return Number(num2[0]) >= 5 ? largePositiveNumberAdd(num1, "1") : num1;
    }
    var decimalNumber = num2.slice(0, decimalPlaces);
    if (num2.length < decimalPlaces) {
      decimalNumber += fillZero(decimalPlaces - num2.length);
    } else {
      decimalNumber = Number(num2[decimalPlaces]) >= 5 ? largePositiveNumberAdd(decimalNumber, "1") : decimalNumber;
    }
    return [num1, decimalNumber].join(".");
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function canAddNumber(num, max2) {
    var largeNumber = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
    if (!num && num !== 0) return true;
    if (largeNumber && isString_1(num)) {
      return compareNumber(num, max2, largeNumber) < 0;
    }
    return num < max2;
  }
  function canReduceNumber(num, min2) {
    var largeNumber = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
    if (!num && num !== 0) return true;
    if (largeNumber && isString_1(num)) {
      return compareNumber(num, min2, largeNumber) > 0;
    }
    return num > min2;
  }
  function putInRangeNumber(val, params) {
    if (val === "") return void 0;
    var max2 = params.max, min2 = params.min, lastValue = params.lastValue, largeNumber = params.largeNumber;
    if (!isInputNumber(val)) return lastValue;
    if (largeNumber && (isString_1(max2) || max2 === Infinity) && (isString_1(min2) || min2 === -Infinity)) {
      if (compareNumber(max2, val, largeNumber) < 0) return max2;
      if (compareNumber(min2, val, largeNumber) > 0) return min2;
      return val;
    }
    return Math.max(Number(min2), Math.min(Number(max2), Number(val)));
  }
  function positiveAdd(num1, num2) {
    var _num1$toString$split$, _num2$toString$split$;
    if (!num1 || !num2) return (num1 || 0) + (num2 || 0);
    var r1 = ((_num1$toString$split$ = num1.toString().split(".")[1]) === null || _num1$toString$split$ === void 0 ? void 0 : _num1$toString$split$.length) || 0;
    var r2 = ((_num2$toString$split$ = num2.toString().split(".")[1]) === null || _num2$toString$split$ === void 0 ? void 0 : _num2$toString$split$.length) || 0;
    if (!r1 && !r2) return num1 + num2;
    var newNumber1 = num1;
    var newNumber2 = num2;
    var diff = Math.abs(r1 - r2);
    var digit = Math.pow(10, Math.max(r1, r2));
    if (diff > 0) {
      var cm = Math.pow(10, diff);
      if (r1 > r2) {
        newNumber1 = Number(num1.toString().replace(".", ""));
        newNumber2 = Number(num2.toString().replace(".", "")) * cm;
      } else {
        newNumber1 = Number(num1.toString().replace(".", "")) * cm;
        newNumber2 = Number(num2.toString().replace(".", ""));
      }
    } else {
      newNumber1 = Number(num1.toString().replace(".", ""));
      newNumber2 = Number(num2.toString().replace(".", ""));
    }
    return (newNumber1 + newNumber2) / digit;
  }
  function positiveSubtract(num1, num2) {
    var _num1$toString$split$2, _num2$toString$split$2;
    if (!num1 || !num2) return (num1 || 0) - (num2 || 0);
    var r1 = ((_num1$toString$split$2 = num1.toString().split(".")[1]) === null || _num1$toString$split$2 === void 0 ? void 0 : _num1$toString$split$2.length) || 0;
    var r2 = ((_num2$toString$split$2 = num2.toString().split(".")[1]) === null || _num2$toString$split$2 === void 0 ? void 0 : _num2$toString$split$2.length) || 0;
    var digit = Math.pow(10, Math.max(r1, r2));
    var n = r1 >= r2 ? r1 : r2;
    return Number(((num1 * digit - num2 * digit) / digit).toFixed(n));
  }
  function add(num1, num2) {
    if (num1 < 0 && num2 > 0) return positiveSubtract(num2, Math.abs(num1));
    if (num1 < 0 && num2 < 0) return positiveAdd(Math.abs(num1), Math.abs(num2)) * -1;
    if (num1 > 0 && num2 < 0) return positiveSubtract(num1, Math.abs(num2));
    return positiveAdd(num1, num2);
  }
  function subtract(num1, num2) {
    if (num1 < 0 && num2 > 0) return positiveAdd(Math.abs(num1), num2) * -1;
    if (num1 < 0 && num2 < 0) return positiveSubtract(Math.abs(num2), Math.abs(num1));
    if (num1 > 0 && num2 < 0) return positiveAdd(num1, Math.abs(num2));
    return positiveSubtract(num1, num2);
  }
  function getStepValue(p) {
    var op = p.op, step = p.step, lastValue = p.lastValue, max2 = p.max, min2 = p.min, largeNumber = p.largeNumber;
    if (step <= 0) {
      log.error("InputNumber", "step must be larger than 0.");
      return lastValue;
    }
    var tStep = isNumber_1(step) ? String(step) : step;
    var newVal;
    if (op === "add") {
      if (largeNumber && isString_1(lastValue)) {
        newVal = largeNumberAdd(String(lastValue), String(tStep));
      } else {
        newVal = add(Number(lastValue || 0), Number(step));
      }
    } else if (op === "reduce") {
      if (largeNumber && isString_1(lastValue)) {
        newVal = largeNumberSubtract(String(lastValue), String(tStep));
      } else {
        newVal = subtract(Number(lastValue || 0), Number(step));
      }
    }
    if (isUndefined_1(lastValue)) {
      newVal = putInRangeNumber(newVal, {
        max: max2,
        min: min2,
        lastValue,
        largeNumber
      });
    }
    return largeNumber ? newVal : Number(newVal);
  }
  function getMaxOrMinValidateResult(p) {
    var largeNumber = p.largeNumber, value = p.value, max2 = p.max, min2 = p.min;
    if (isUndefined_1(value) || isUndefined_1(largeNumber)) return void 0;
    if (largeNumber && isNumber_1(value)) {
      log.warn("InputNumber", "largeNumber value must be a string.");
    }
    var error2;
    if (compareNumber(value, max2, largeNumber) > 0) {
      error2 = "exceed-maximum";
    } else if (compareNumber(value, min2, largeNumber) < 0) {
      error2 = "below-minimum";
    } else {
      error2 = void 0;
    }
    return error2;
  }
  var specialCode = ["-", ".", "e", "E", "+"];
  function canInputNumber(number, largeNumber) {
    var _number$match;
    if (["", null, void 0].includes(number)) return true;
    if (number.slice(0, 2) === "00") return false;
    if (((_number$match = number.match(/\./g)) === null || _number$match === void 0 ? void 0 : _number$match.length) > 1) return false;
    var tmpNumber = number.slice(1);
    if (/(\+|-)/.test(tmpNumber) && !/e+/i.test(tmpNumber)) return false;
    var isNumber2 = largeNumber && isInputNumber(number) || !Number.isNaN(Number(number));
    if (!isNumber2 && !specialCode.includes(number.slice(-1))) return false;
    if (/e/i.test(number) && !/\de/i.test(number)) return false;
    return true;
  }
  function canSetValue(number, lastNumber) {
    return parseFloat(number) !== lastNumber && !Number.isNaN(Number(number));
  }
  function formatUnCompleteNumber(number) {
    var extra = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (["", null, void 0].includes(number) || !/\d+/.test(number)) return void 0;
    var decimalPlaces = extra.decimalPlaces, largeNumber = extra.largeNumber, isToFixed = extra.isToFixed;
    var newNumber = number.replace(/[.|+|\-|e]$/, "");
    if (largeNumber) {
      newNumber = formatENumber(newNumber);
    }
    if (decimalPlaces !== void 0) {
      newNumber = largeNumberToFixed(newNumber, decimalPlaces, largeNumber);
    }
    if (largeNumber) return newNumber;
    return isToFixed ? newNumber : parseFloat(newNumber);
  }
  function formatThousandths(number) {
    var thousandthsRegExp = /^[-+]?\d{1,3}(,\d{3})*(\.(\d*))?$/;
    if (thousandthsRegExp.test(number)) return number.replace(/,/g, "");
    return number;
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useInputNumber(props2) {
    var _useCommonClassName = useCommonClassName(), classPrefix = _useCommonClassName.classPrefix, sizeClassNames = _useCommonClassName.sizeClassNames, statusClassNames = _useCommonClassName.statusClassNames;
    var _toRefs = vue.toRefs(props2), value = _toRefs.value, modelValue = _toRefs.modelValue, max2 = _toRefs.max, min2 = _toRefs.min;
    var _useVModel = useVModel(value, modelValue, props2.defaultValue, props2.onChange), _useVModel2 = _slicedToArray(_useVModel, 2), tValue = _useVModel2[0], setTValue = _useVModel2[1];
    var inputRef = vue.ref();
    var userInput = vue.ref("");
    var tDisabled = useDisabled();
    var isReadonly = useReadonly();
    var isError = vue.ref();
    var disabledReduce = vue.computed(function() {
      return tDisabled.value || !canReduceNumber(tValue.value, props2.min, props2.largeNumber);
    });
    var disabledAdd = vue.computed(function() {
      return tDisabled.value || !canAddNumber(tValue.value, props2.max, props2.largeNumber);
    });
    var wrapClasses = vue.computed(function() {
      return ["".concat(classPrefix.value, "-input-number"), sizeClassNames[props2.size], _defineProperty$2(_defineProperty$2(_defineProperty$2(_defineProperty$2({}, statusClassNames.disabled, tDisabled.value), "".concat(classPrefix.value, "-is-controls-right"), props2.theme === "column"), "".concat(classPrefix.value, "-input-number--").concat(props2.theme), props2.theme), "".concat(classPrefix.value, "-input-number--auto-width"), props2.autoWidth)];
    });
    var reduceClasses = vue.computed(function() {
      return ["".concat(classPrefix.value, "-input-number__decrease"), _defineProperty$2({}, statusClassNames.disabled, disabledReduce.value)];
    });
    var addClasses = vue.computed(function() {
      return ["".concat(classPrefix.value, "-input-number__increase"), _defineProperty$2({}, statusClassNames.disabled, disabledAdd.value)];
    });
    var getUserInput = function getUserInput2(value2) {
      var _inputRef$value;
      if (!value2 && value2 !== 0) return "";
      var inputStr = value2 || value2 === 0 ? String(value2) : "";
      if (!((_inputRef$value = inputRef.value) !== null && _inputRef$value !== void 0 && (_inputRef$value = _inputRef$value.inputRef) !== null && _inputRef$value !== void 0 && _inputRef$value.contains(document.activeElement))) {
        var num = formatUnCompleteNumber(inputStr, {
          decimalPlaces: props2.decimalPlaces,
          largeNumber: props2.largeNumber,
          isToFixed: true
        });
        inputStr = num || num === 0 ? String(num) : "";
        if (props2.format) {
          inputStr = String(props2.format(value2, {
            fixedNumber: inputStr
          }));
        }
      }
      return inputStr;
    };
    vue.watch(tValue, function(val) {
      var largeNumber = props2.largeNumber, decimalPlaces = props2.decimalPlaces;
      var inputValue = [void 0, null].includes(val) ? "" : String(val);
      if (!largeNumber && !Number.isNaN(userInput.value)) {
        if (parseFloat(userInput.value) !== val) {
          userInput.value = getUserInput(inputValue);
        }
        var fixedNumber = Number(largeNumberToFixed(inputValue, decimalPlaces, largeNumber));
        if (decimalPlaces !== void 0 && ![void 0, null].includes(val) && Number(fixedNumber) !== Number(tValue.value)) {
          setTValue(fixedNumber, {
            type: "props",
            e: void 0
          });
        }
      }
      if (largeNumber) {
        userInput.value = getUserInput(inputValue);
        if (decimalPlaces !== void 0 && largeNumberToFixed(inputValue, decimalPlaces, largeNumber) !== val) {
          setTValue(userInput.value, {
            type: "props",
            e: void 0
          });
        }
      }
    }, {
      immediate: true
    });
    vue.watch([tValue, max2, min2], function() {
      var _props$onValidate;
      if ([void 0, "", null].includes(tValue.value)) return;
      var max22 = props2.max, min22 = props2.min, largeNumber = props2.largeNumber;
      var error2 = getMaxOrMinValidateResult({
        value: tValue.value,
        largeNumber,
        max: max22,
        min: min22
      });
      isError.value = error2;
      (_props$onValidate = props2.onValidate) === null || _props$onValidate === void 0 || _props$onValidate.call(props2, {
        error: error2
      });
    }, {
      immediate: true
    });
    var handleStepValue = function handleStepValue2(op) {
      var newValue = getStepValue({
        op,
        step: props2.step,
        max: props2.max,
        min: props2.min,
        lastValue: tValue.value,
        largeNumber: props2.largeNumber
      });
      var largeNumber = props2.largeNumber, max22 = props2.max, min22 = props2.min;
      var overLimit = getMaxOrMinValidateResult({
        value: newValue,
        largeNumber,
        max: max22,
        min: min22
      });
      return {
        overLimit,
        newValue
      };
    };
    var handleReduce = function handleReduce2(e) {
      if (disabledReduce.value || isReadonly.value) return;
      var r = handleStepValue("reduce");
      if (r.overLimit && !props2.allowInputOverLimit) return;
      setTValue(r.newValue, {
        type: "reduce",
        e
      });
    };
    var handleAdd = function handleAdd2(e) {
      if (disabledAdd.value || isReadonly.value) return;
      var r = handleStepValue("add");
      if (r.overLimit && !props2.allowInputOverLimit) return;
      setTValue(r.newValue, {
        type: "add",
        e
      });
    };
    var onInnerInputChange = function onInnerInputChange2(inputValue, _ref4) {
      var e = _ref4.e;
      var val = formatThousandths(inputValue);
      if (!canInputNumber(val, props2.largeNumber)) return;
      userInput.value = val;
      if (props2.largeNumber) {
        setTValue(val, {
          type: "input",
          e
        });
        return;
      }
      if (canSetValue(String(val), Number(tValue.value))) {
        var newVal = val === "" ? void 0 : Number(val);
        setTValue(newVal, {
          type: "input",
          e
        });
      }
    };
    var handleBlur = function handleBlur2(value2, ctx) {
      var _props$onBlur3;
      var largeNumber = props2.largeNumber, max22 = props2.max, min22 = props2.min, decimalPlaces = props2.decimalPlaces;
      if (!props2.allowInputOverLimit && tValue.value !== void 0) {
        var r = getMaxOrMinValidateResult({
          value: tValue.value,
          largeNumber,
          max: max22,
          min: min22
        });
        if (r === "below-minimum") {
          var _props$onBlur;
          setTValue(min22, {
            type: "blur",
            e: ctx.e
          });
          (_props$onBlur = props2.onBlur) === null || _props$onBlur === void 0 || _props$onBlur.call(props2, min22, ctx);
          return;
        }
        if (r === "exceed-maximum") {
          var _props$onBlur2;
          setTValue(max22, {
            type: "blur",
            e: ctx.e
          });
          (_props$onBlur2 = props2.onBlur) === null || _props$onBlur2 === void 0 || _props$onBlur2.call(props2, max22, ctx);
          return;
        }
      }
      var newValue = formatUnCompleteNumber(value2, {
        decimalPlaces,
        largeNumber
      });
      userInput.value = getUserInput(newValue);
      if (newValue !== tValue.value) {
        setTValue(newValue, {
          type: "blur",
          e: ctx.e
        });
      }
      (_props$onBlur3 = props2.onBlur) === null || _props$onBlur3 === void 0 || _props$onBlur3.call(props2, newValue, ctx);
    };
    var handleFocus = function handleFocus2(value2, ctx) {
      var _props$onFocus;
      userInput.value = tValue.value || tValue.value === 0 ? String(tValue.value) : "";
      (_props$onFocus = props2.onFocus) === null || _props$onFocus === void 0 || _props$onFocus.call(props2, value2, ctx);
    };
    var handleKeydown = function handleKeydown2(value2, ctx) {
      var _props$onKeydown;
      if (tDisabled.value) return;
      var e = ctx.e;
      var keyEvent = {
        ArrowUp: handleAdd,
        ArrowDown: handleReduce
      };
      var code = e.code || e.key;
      if (keyEvent[code] !== void 0) {
        keyEvent[code](e);
      }
      (_props$onKeydown = props2.onKeydown) === null || _props$onKeydown === void 0 || _props$onKeydown.call(props2, value2, ctx);
    };
    var handleKeyup = function handleKeyup2(value2, ctx) {
      var _props$onKeyup;
      (_props$onKeyup = props2.onKeyup) === null || _props$onKeyup === void 0 || _props$onKeyup.call(props2, value2, ctx);
    };
    var handleKeypress = function handleKeypress2(value2, ctx) {
      var _props$onKeypress;
      (_props$onKeypress = props2.onKeypress) === null || _props$onKeypress === void 0 || _props$onKeypress.call(props2, value2, ctx);
    };
    var handleEnter = function handleEnter2(value2, ctx) {
      var _props$onEnter;
      userInput.value = getUserInput(value2);
      var newValue = formatUnCompleteNumber(value2, {
        decimalPlaces: props2.decimalPlaces,
        largeNumber: props2.largeNumber
      });
      if (newValue !== value2 && String(newValue) !== value2) {
        setTValue(newValue, {
          type: "enter",
          e: ctx.e
        });
      }
      (_props$onEnter = props2.onEnter) === null || _props$onEnter === void 0 || _props$onEnter.call(props2, newValue, ctx);
    };
    var focus = function focus2() {
      inputRef.value.focus();
    };
    var blur = function blur2() {
      inputRef.value.blur();
    };
    var listeners = {
      onBlur: handleBlur,
      onFocus: handleFocus,
      onKeydown: handleKeydown,
      onKeyup: handleKeyup,
      onKeypress: handleKeypress,
      onEnter: handleEnter,
      onClick: focus
    };
    return {
      classPrefix,
      wrapClasses,
      reduceClasses,
      addClasses,
      tDisabled,
      isError,
      listeners,
      userInput,
      tValue,
      inputRef,
      focus,
      blur,
      handleReduce,
      handleAdd,
      onInnerInputChange,
      isReadonly
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$d(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$d(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$d(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$d(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var _InputNumber = vue.defineComponent({
    name: "TInputNumber",
    props: props$a,
    setup: function setup12(props2, context) {
      var renderTNodeJSX3 = useTNodeJSX();
      var _useGlobalIcon = useGlobalIcon({
        AddIcon: add$1,
        RemoveIcon: remove,
        ChevronDownIcon: chevronDown,
        ChevronUpIcon: chevronUp
      }), AddIcon$1 = _useGlobalIcon.AddIcon, RemoveIcon$1 = _useGlobalIcon.RemoveIcon, ChevronDownIcon$1 = _useGlobalIcon.ChevronDownIcon, ChevronUpIcon$1 = _useGlobalIcon.ChevronUpIcon;
      var p = useInputNumber(props2);
      var inputRef = p.inputRef;
      context.expose(_objectSpread$d({}, p));
      return function() {
        var reduceIcon = props2.theme === "column" ? vue.createVNode(ChevronDownIcon$1, {
          "size": props2.size
        }, null) : vue.createVNode(RemoveIcon$1, {
          "size": props2.size
        }, null);
        var addIcon = props2.theme === "column" ? vue.createVNode(ChevronUpIcon$1, {
          "size": props2.size
        }, null) : vue.createVNode(AddIcon$1, {
          "size": props2.size
        }, null);
        var status = p.isError.value ? "error" : props2.status;
        var classPrefix = p.classPrefix.value;
        var tipsNode = renderTNodeJSX3("tips");
        return vue.createVNode("div", {
          "class": p.wrapClasses.value
        }, [props2.theme !== "normal" && vue.createVNode(Button, {
          "class": p.reduceClasses.value,
          "disabled": p.tDisabled.value,
          "onClick": p.handleReduce,
          "variant": "outline",
          "shape": "square",
          "icon": function icon() {
            return reduceIcon;
          }
        }, null), vue.createVNode(Input, vue.mergeProps({
          "ref": inputRef,
          "disabled": p.tDisabled.value,
          "readonly": p.isReadonly.value,
          "autocomplete": "off",
          "placeholder": props2.placeholder,
          "unselectable": p.isReadonly.value ? "on" : "off",
          "autoWidth": props2.autoWidth,
          "align": props2.align || (props2.theme === "row" ? "center" : void 0),
          "status": status,
          "label": props2.label,
          "suffix": props2.suffix
        }, p.listeners, props2.inputProps, {
          "value": p.userInput.value,
          "onChange": p.onInnerInputChange
        }), context.slots), props2.theme !== "normal" && vue.createVNode(Button, {
          "class": p.addClasses.value,
          "disabled": p.tDisabled.value,
          "onClick": p.handleAdd,
          "variant": "outline",
          "shape": "square",
          "icon": function icon() {
            return addIcon;
          }
        }, null), tipsNode && vue.createVNode("div", {
          "class": "".concat(classPrefix, "-input__tips ").concat(classPrefix, "-tips ").concat(classPrefix, "-is-").concat(status)
        }, [tipsNode])]);
      };
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var InputNumber = withInstall(_InputNumber);
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var assignValue = _assignValue, castPath$1 = _castPath, isIndex = _isIndex, isObject = isObject_1, toKey = _toKey;
  function baseSet$1(object, path, value, customizer) {
    if (!isObject(object)) {
      return object;
    }
    path = castPath$1(path, object);
    var index = -1, length = path.length, lastIndex = length - 1, nested = object;
    while (nested != null && ++index < length) {
      var key = toKey(path[index]), newValue = value;
      if (key === "__proto__" || key === "constructor" || key === "prototype") {
        return object;
      }
      if (index != lastIndex) {
        var objValue = nested[key];
        newValue = customizer ? customizer(objValue, key, nested) : void 0;
        if (newValue === void 0) {
          newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
        }
      }
      assignValue(nested, key, newValue);
      nested = nested[key];
    }
    return object;
  }
  var _baseSet = baseSet$1;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var baseGet = _baseGet, baseSet = _baseSet, castPath = _castPath;
  function basePickBy$1(object, paths, predicate) {
    var index = -1, length = paths.length, result = {};
    while (++index < length) {
      var path = paths[index], value = baseGet(object, path);
      if (predicate(value, path)) {
        baseSet(result, castPath(path, object), value);
      }
    }
    return result;
  }
  var _basePickBy = basePickBy$1;
  var basePickBy = _basePickBy, hasIn = hasIn_1;
  function basePick$1(object, paths) {
    return basePickBy(object, paths, function(value, path) {
      return hasIn(object, path);
    });
  }
  var _basePick = basePick$1;
  var basePick = _basePick, flatRest = _flatRest;
  var pick = flatRest(function(object, paths) {
    return object == null ? {} : basePick(object, paths);
  });
  var pick_1 = pick;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function baseFindIndex$1(array, predicate, fromIndex, fromRight) {
    var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
    while (fromRight ? index-- : ++index < length) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }
  var _baseFindIndex = baseFindIndex$1;
  function baseIsNaN$1(value) {
    return value !== value;
  }
  var _baseIsNaN = baseIsNaN$1;
  function strictIndexOf$1(array, value, fromIndex) {
    var index = fromIndex - 1, length = array.length;
    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }
  var _strictIndexOf = strictIndexOf$1;
  var baseFindIndex = _baseFindIndex, baseIsNaN = _baseIsNaN, strictIndexOf = _strictIndexOf;
  function baseIndexOf$1(array, value, fromIndex) {
    return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
  }
  var _baseIndexOf = baseIndexOf$1;
  var baseIndexOf = _baseIndexOf;
  function arrayIncludes$1(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }
  var _arrayIncludes = arrayIncludes$1;
  function arrayIncludesWith$1(array, value, comparator) {
    var index = -1, length = array == null ? 0 : array.length;
    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }
  var _arrayIncludesWith = arrayIncludesWith$1;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var SetCache = _SetCache, arrayIncludes = _arrayIncludes, arrayIncludesWith = _arrayIncludesWith, arrayMap$1 = _arrayMap, baseUnary = _baseUnary, cacheHas = _cacheHas;
  var nativeMin = Math.min;
  function baseIntersection$1(arrays, iteratee, comparator) {
    var includes = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array(othLength), maxLength = Infinity, result = [];
    while (othIndex--) {
      var array = arrays[othIndex];
      if (othIndex && iteratee) {
        array = arrayMap$1(array, baseUnary(iteratee));
      }
      maxLength = nativeMin(array.length, maxLength);
      caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : void 0;
    }
    array = arrays[0];
    var index = -1, seen = caches[0];
    outer: while (++index < length && result.length < maxLength) {
      var value = array[index], computed2 = iteratee ? iteratee(value) : value;
      value = comparator || value !== 0 ? value : 0;
      if (!(seen ? cacheHas(seen, computed2) : includes(result, computed2, comparator))) {
        othIndex = othLength;
        while (--othIndex) {
          var cache = caches[othIndex];
          if (!(cache ? cacheHas(cache, computed2) : includes(arrays[othIndex], computed2, comparator))) {
            continue outer;
          }
        }
        if (seen) {
          seen.push(computed2);
        }
        result.push(value);
      }
    }
    return result;
  }
  var _baseIntersection = baseIntersection$1;
  var isArrayLikeObject = isArrayLikeObject_1;
  function castArrayLikeObject$1(value) {
    return isArrayLikeObject(value) ? value : [];
  }
  var _castArrayLikeObject = castArrayLikeObject$1;
  var arrayMap = _arrayMap, baseIntersection = _baseIntersection, baseRest = _baseRest, castArrayLikeObject = _castArrayLikeObject;
  var intersection = baseRest(function(arrays) {
    var mapped = arrayMap(arrays, castArrayLikeObject);
    return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
  });
  var intersection_1 = intersection;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props$9 = {
    allowInput: Boolean,
    autoWidth: Boolean,
    autofocus: Boolean,
    borderless: Boolean,
    clearable: Boolean,
    collapsedItems: {
      type: Function
    },
    disabled: {
      type: Boolean,
      "default": void 0
    },
    inputProps: {
      type: Object
    },
    inputValue: {
      type: [String, Number],
      "default": void 0
    },
    defaultInputValue: {
      type: [String, Number]
    },
    keys: {
      type: Object
    },
    label: {
      type: [String, Function]
    },
    loading: Boolean,
    minCollapsedNum: {
      type: Number,
      "default": 0
    },
    multiple: Boolean,
    panel: {
      type: [String, Function]
    },
    placeholder: {
      type: String,
      "default": ""
    },
    popupProps: {
      type: Object
    },
    popupVisible: {
      type: Boolean,
      "default": void 0
    },
    defaultPopupVisible: Boolean,
    prefixIcon: {
      type: Function
    },
    readonly: Boolean,
    reserveKeyword: Boolean,
    size: {
      type: String,
      "default": "medium",
      validator: function validator18(val) {
        if (!val) return true;
        return ["small", "medium", "large"].includes(val);
      }
    },
    status: {
      type: String,
      "default": "default",
      validator: function validator19(val) {
        if (!val) return true;
        return ["default", "success", "warning", "error"].includes(val);
      }
    },
    suffix: {
      type: [String, Function]
    },
    suffixIcon: {
      type: Function
    },
    tag: {
      type: [String, Function]
    },
    tagInputProps: {
      type: Object
    },
    tagProps: {
      type: Object
    },
    tips: {
      type: [String, Function]
    },
    value: {
      type: [String, Number, Boolean, Object, Array, Date],
      "default": void 0
    },
    valueDisplay: {
      type: [String, Function]
    },
    onBlur: Function,
    onClear: Function,
    onEnter: Function,
    onFocus: Function,
    onInputChange: Function,
    onMouseenter: Function,
    onMouseleave: Function,
    onPaste: Function,
    onPopupVisibleChange: Function,
    onTagChange: Function
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var _excluded$2 = ["tips"];
  function ownKeys$c(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$c(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$c(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$c(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var COMMON_PROPERTIES = ["status", "clearable", "disabled", "label", "placeholder", "readonly", "prefixIcon", "suffix", "suffixIcon", "onPaste", "onMouseenter", "onMouseleave", "size", "autofocus"];
  var DEFAULT_KEYS$1 = {
    label: "label",
    value: "value",
    children: "children"
  };
  function getInputValue(value, keys2) {
    var iKeys = _objectSpread$c(_objectSpread$c({}, DEFAULT_KEYS$1), keys2);
    return isObject_1(value) ? value[iKeys.label] : value;
  }
  function useSingle(props2, context, popupRef) {
    var _props$defaultInputVa;
    var _toRefs = vue.toRefs(props2), value = _toRefs.value, keys2 = _toRefs.keys, propsInputValue = _toRefs.inputValue;
    var classPrefix = usePrefixClass();
    var isSingleFocus = vue.ref(props2.autofocus);
    var inputRef = vue.ref();
    var _useDefaultValue = useDefaultValue(propsInputValue, (_props$defaultInputVa = props2.defaultInputValue) !== null && _props$defaultInputVa !== void 0 ? _props$defaultInputVa : "", props2.onInputChange, "inputValue"), _useDefaultValue2 = _slicedToArray(_useDefaultValue, 2), inputValue = _useDefaultValue2[0], setInputValue = _useDefaultValue2[1];
    var renderTNode = useTNodeJSX();
    var disable = useDisabled();
    var commonInputProps = vue.computed(function() {
      return _objectSpread$c(_objectSpread$c({}, pick_1(props2, COMMON_PROPERTIES)), {}, {
        disabled: disable.value
      });
    });
    var onInnerClear = function onInnerClear2(context2) {
      var _context2$e, _props$onClear;
      context2 === null || context2 === void 0 || (_context2$e = context2.e) === null || _context2$e === void 0 || _context2$e.stopPropagation();
      (_props$onClear = props2.onClear) === null || _props$onClear === void 0 || _props$onClear.call(props2, context2);
      setInputValue("", {
        trigger: "clear"
      });
    };
    var onInnerInputChange = function onInnerInputChange2(value2, context2) {
      if (props2.allowInput) {
        setInputValue(value2, _objectSpread$c(_objectSpread$c({}, context2), {}, {
          trigger: context2.trigger || "input"
        }));
      }
    };
    var renderSelectSingle = function renderSelectSingle2(popupVisible) {
      var _context$attrs;
      var singleValueDisplay = renderTNode("valueDisplay");
      var displayedValue = popupVisible && props2.allowInput ? inputValue.value : getInputValue(value.value, keys2.value);
      var prefixContent = renderPrefixContent(singleValueDisplay, popupVisible);
      var inputProps = _objectSpread$c(_objectSpread$c({}, commonInputProps.value), {}, {
        value: renderInputDisplay(singleValueDisplay, displayedValue, popupVisible),
        label: prefixContent.length ? function() {
          return prefixContent;
        } : void 0,
        autoWidth: props2.autoWidth,
        readonly: !props2.allowInput || props2.readonly,
        placeholder: renderPlaceholder(singleValueDisplay),
        suffixIcon: !disable.value && props2.loading ? function() {
          return vue.createVNode(Loading, {
            "loading": true,
            "size": "small"
          }, null);
        } : props2.suffixIcon,
        showClearIconOnEmpty: Boolean(props2.clearable && (inputValue.value || displayedValue) && !disable.value && !props2.readonly)
      }, props2.inputProps);
      var _context$slots = context.slots;
      _context$slots.tips;
      var slots = _objectWithoutProperties(_context$slots, _excluded$2);
      var inputClassProps = popupVisible ? ["".concat(classPrefix.value, "-input--focused"), "".concat(classPrefix.value, "-is-focused"), inputProps === null || inputProps === void 0 ? void 0 : inputProps.inputClass] : inputProps === null || inputProps === void 0 ? void 0 : inputProps.inputClass;
      var onEnter = function onEnter2(val, context2) {
        var _props$onEnter;
        (_props$onEnter = props2.onEnter) === null || _props$onEnter === void 0 || _props$onEnter.call(props2, value.value, _objectSpread$c(_objectSpread$c({}, context2), {}, {
          inputValue: val
        }));
      };
      var onFocus = function onFocus2(val, context2) {
        var _popupRef$value, _props$onFocus;
        var overlayState = (_popupRef$value = popupRef.value) === null || _popupRef$value === void 0 ? void 0 : _popupRef$value.getOverlayState();
        if (isSingleFocus.value || overlayState !== null && overlayState !== void 0 && overlayState.hover) return;
        isSingleFocus.value = true;
        (_props$onFocus = props2.onFocus) === null || _props$onFocus === void 0 || _props$onFocus.call(props2, value.value, _objectSpread$c(_objectSpread$c({}, context2), {}, {
          inputValue: val
        }));
      };
      var onBlur = function onBlur2(val, context2) {
        var _popupRef$value2, _props$onBlur;
        var overlayState = (_popupRef$value2 = popupRef.value) === null || _popupRef$value2 === void 0 ? void 0 : _popupRef$value2.getOverlayState();
        if (overlayState !== null && overlayState !== void 0 && overlayState.hover) return;
        isSingleFocus.value = false;
        (_props$onBlur = props2.onBlur) === null || _props$onBlur === void 0 || _props$onBlur.call(props2, value.value, _objectSpread$c(_objectSpread$c({}, context2), {}, {
          inputValue: val
        }));
      };
      return vue.createVNode(Input, vue.mergeProps({
        "ref": inputRef,
        "style": (_context$attrs = context.attrs) === null || _context$attrs === void 0 ? void 0 : _context$attrs.style
      }, _objectSpread$c({
        onChange: onInnerInputChange,
        onClear: onInnerClear,
        onEnter,
        onFocus,
        onBlur
      }, inputProps), {
        "inputClass": inputClassProps
      }), slots);
    };
    var renderPrefixContent = function renderPrefixContent2(singleValueDisplay, popupVisible) {
      var label = renderTNode("label");
      if (!label && !singleValueDisplay) {
        return [];
      }
      if (singleValueDisplay) {
        var _props$valueDisplayOp, _props$valueDisplayOp2;
        if ((_props$valueDisplayOp = props2.valueDisplayOptions) !== null && _props$valueDisplayOp !== void 0 && _props$valueDisplayOp.usePlaceholder && !value.value || (_props$valueDisplayOp2 = props2.valueDisplayOptions) !== null && _props$valueDisplayOp2 !== void 0 && _props$valueDisplayOp2.useInputDisplay && popupVisible) {
          return [label];
        }
      }
      return [label, singleValueDisplay];
    };
    var renderInputDisplay = function renderInputDisplay2(singleValueDisplay, displayedValue, popupVisible) {
      if (singleValueDisplay) {
        var _props$valueDisplayOp3, _props$valueDisplayOp4;
        if (!((_props$valueDisplayOp3 = props2.valueDisplayOptions) !== null && _props$valueDisplayOp3 !== void 0 && _props$valueDisplayOp3.useInputDisplay) || (_props$valueDisplayOp4 = props2.valueDisplayOptions) !== null && _props$valueDisplayOp4 !== void 0 && _props$valueDisplayOp4.useInputDisplay && !popupVisible) {
          return void 0;
        }
      }
      return displayedValue;
    };
    var renderPlaceholder = function renderPlaceholder2(singleValueDisplay) {
      if (singleValueDisplay) {
        var _props$valueDisplayOp5, _props$valueDisplayOp6;
        if (!((_props$valueDisplayOp5 = props2.valueDisplayOptions) !== null && _props$valueDisplayOp5 !== void 0 && _props$valueDisplayOp5.usePlaceholder) || (_props$valueDisplayOp6 = props2.valueDisplayOptions) !== null && _props$valueDisplayOp6 !== void 0 && _props$valueDisplayOp6.usePlaceholder && value.value) {
          return "";
        }
      }
      return props2.placeholder;
    };
    return {
      inputRef,
      isSingleFocus,
      commonInputProps,
      singleInputValue: inputValue,
      onInnerClear,
      renderSelectSingle
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props$8 = {
    autoWidth: Boolean,
    borderless: Boolean,
    clearable: Boolean,
    collapsedItems: {
      type: Function
    },
    disabled: Boolean,
    dragSort: Boolean,
    excessTagsDisplayType: {
      type: String,
      "default": "break-line",
      validator: function validator20(val) {
        if (!val) return true;
        return ["scroll", "break-line"].includes(val);
      }
    },
    inputProps: {
      type: Object
    },
    inputValue: {
      type: [String, Number],
      "default": void 0
    },
    defaultInputValue: {
      type: [String, Number],
      "default": ""
    },
    label: {
      type: [String, Function]
    },
    max: {
      type: Number
    },
    minCollapsedNum: {
      type: Number,
      "default": 0
    },
    placeholder: {
      type: String,
      "default": void 0
    },
    prefixIcon: {
      type: Function
    },
    readonly: Boolean,
    size: {
      type: String,
      "default": "medium",
      validator: function validator21(val) {
        if (!val) return true;
        return ["small", "medium", "large"].includes(val);
      }
    },
    status: {
      type: String,
      validator: function validator22(val) {
        if (!val) return true;
        return ["default", "success", "warning", "error"].includes(val);
      }
    },
    suffix: {
      type: [String, Function]
    },
    suffixIcon: {
      type: Function
    },
    tag: {
      type: [String, Function]
    },
    tagProps: {
      type: Object
    },
    tips: {
      type: [String, Function]
    },
    value: {
      type: Array,
      "default": void 0
    },
    modelValue: {
      type: Array,
      "default": void 0
    },
    defaultValue: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    valueDisplay: {
      type: [String, Function]
    },
    onBlur: Function,
    onChange: Function,
    onClear: Function,
    onClick: Function,
    onDragSort: Function,
    onEnter: Function,
    onFocus: Function,
    onInputChange: Function,
    onMouseenter: Function,
    onMouseleave: Function,
    onPaste: Function,
    onRemove: Function
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useTagScroll(props2) {
    var tagInputRef = vue.ref();
    var _toRefs = vue.toRefs(props2), excessTagsDisplayType = _toRefs.excessTagsDisplayType, readonly = _toRefs.readonly, disabled = _toRefs.disabled;
    var scrollDistance = vue.ref(0);
    var scrollElement = vue.ref();
    var mouseEnterTimer = vue.ref();
    var isScrollable = vue.ref(false);
    var updateScrollElement = function updateScrollElement2(element2) {
      var inputElement = element2.children[0];
      scrollElement.value = inputElement;
    };
    var updateScrollDistance = function updateScrollDistance2() {
      scrollDistance.value = scrollElement.value.scrollWidth - scrollElement.value.clientWidth;
    };
    var scrollTo = function scrollTo2(distance) {
      var _scrollElement$value;
      if (!isFunction_1((_scrollElement$value = scrollElement.value) === null || _scrollElement$value === void 0 ? void 0 : _scrollElement$value.scroll)) return;
      scrollElement.value.scroll({
        left: distance,
        behavior: "smooth"
      });
    };
    var scrollToRight = function scrollToRight2() {
      updateScrollDistance();
      scrollTo(scrollDistance.value);
      setTimeout(function() {
        isScrollable.value = true;
      }, 200);
    };
    var scrollToLeft = function scrollToLeft2() {
      scrollTo(0);
    };
    var onWheel = function onWheel2(_ref) {
      var e = _ref.e;
      if (readonly.value || disabled.value) return;
      if (!scrollElement.value) return;
      if (e.deltaX > 0) {
        var distance = Math.min(scrollElement.value.scrollLeft + 120, scrollDistance.value);
        scrollTo(distance);
      } else {
        var _distance = Math.max(scrollElement.value.scrollLeft - 120, 0);
        scrollTo(_distance);
      }
    };
    var scrollToRightOnEnter = function scrollToRightOnEnter2() {
      if (excessTagsDisplayType.value !== "scroll") return;
      mouseEnterTimer.value = setTimeout(function() {
        scrollToRight();
        clearTimeout(mouseEnterTimer.value);
      }, 100);
    };
    var scrollToLeftOnLeave = function scrollToLeftOnLeave2() {
      if (excessTagsDisplayType.value !== "scroll") return;
      isScrollable.value = false;
      scrollTo(0);
      clearTimeout(mouseEnterTimer.value);
    };
    var init = function init2() {
      var _tagInputRef$value;
      var element2 = (_tagInputRef$value = tagInputRef.value) === null || _tagInputRef$value === void 0 ? void 0 : _tagInputRef$value.$el;
      if (!element2) return;
      updateScrollElement(element2);
    };
    var clear = function clear2() {
      clearTimeout(mouseEnterTimer.value);
    };
    vue.onMounted(init);
    vue.onUnmounted(clear);
    return {
      tagInputRef,
      scrollElement,
      scrollDistance,
      scrollTo,
      scrollToRight,
      scrollToLeft,
      updateScrollElement,
      updateScrollDistance,
      onWheel,
      scrollToRightOnEnter,
      scrollToLeftOnLeave,
      isScrollable
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function _typeof(obj) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  }
  var trimLeft = /^\s+/;
  var trimRight = /\s+$/;
  function tinycolor(color, opts) {
    color = color ? color : "";
    opts = opts || {};
    if (color instanceof tinycolor) {
      return color;
    }
    if (!(this instanceof tinycolor)) {
      return new tinycolor(color, opts);
    }
    var rgb = inputToRGB(color);
    this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = Math.round(100 * this._a) / 100, this._format = opts.format || rgb.format;
    this._gradientType = opts.gradientType;
    if (this._r < 1) this._r = Math.round(this._r);
    if (this._g < 1) this._g = Math.round(this._g);
    if (this._b < 1) this._b = Math.round(this._b);
    this._ok = rgb.ok;
  }
  tinycolor.prototype = {
    isDark: function isDark() {
      return this.getBrightness() < 128;
    },
    isLight: function isLight() {
      return !this.isDark();
    },
    isValid: function isValid() {
      return this._ok;
    },
    getOriginalInput: function getOriginalInput() {
      return this._originalInput;
    },
    getFormat: function getFormat() {
      return this._format;
    },
    getAlpha: function getAlpha() {
      return this._a;
    },
    getBrightness: function getBrightness() {
      var rgb = this.toRgb();
      return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;
    },
    getLuminance: function getLuminance() {
      var rgb = this.toRgb();
      var RsRGB, GsRGB, BsRGB, R, G, B;
      RsRGB = rgb.r / 255;
      GsRGB = rgb.g / 255;
      BsRGB = rgb.b / 255;
      if (RsRGB <= 0.03928) R = RsRGB / 12.92;
      else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);
      if (GsRGB <= 0.03928) G = GsRGB / 12.92;
      else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);
      if (BsRGB <= 0.03928) B = BsRGB / 12.92;
      else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);
      return 0.2126 * R + 0.7152 * G + 0.0722 * B;
    },
    setAlpha: function setAlpha(value) {
      this._a = boundAlpha(value);
      this._roundA = Math.round(100 * this._a) / 100;
      return this;
    },
    toHsv: function toHsv() {
      var hsv = rgbToHsv(this._r, this._g, this._b);
      return {
        h: hsv.h * 360,
        s: hsv.s,
        v: hsv.v,
        a: this._a
      };
    },
    toHsvString: function toHsvString() {
      var hsv = rgbToHsv(this._r, this._g, this._b);
      var h2 = Math.round(hsv.h * 360), s = Math.round(hsv.s * 100), v = Math.round(hsv.v * 100);
      return this._a == 1 ? "hsv(" + h2 + ", " + s + "%, " + v + "%)" : "hsva(" + h2 + ", " + s + "%, " + v + "%, " + this._roundA + ")";
    },
    toHsl: function toHsl() {
      var hsl = rgbToHsl(this._r, this._g, this._b);
      return {
        h: hsl.h * 360,
        s: hsl.s,
        l: hsl.l,
        a: this._a
      };
    },
    toHslString: function toHslString() {
      var hsl = rgbToHsl(this._r, this._g, this._b);
      var h2 = Math.round(hsl.h * 360), s = Math.round(hsl.s * 100), l = Math.round(hsl.l * 100);
      return this._a == 1 ? "hsl(" + h2 + ", " + s + "%, " + l + "%)" : "hsla(" + h2 + ", " + s + "%, " + l + "%, " + this._roundA + ")";
    },
    toHex: function toHex(allow3Char) {
      return rgbToHex(this._r, this._g, this._b, allow3Char);
    },
    toHexString: function toHexString(allow3Char) {
      return "#" + this.toHex(allow3Char);
    },
    toHex8: function toHex8(allow4Char) {
      return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
    },
    toHex8String: function toHex8String(allow4Char) {
      return "#" + this.toHex8(allow4Char);
    },
    toRgb: function toRgb() {
      return {
        r: Math.round(this._r),
        g: Math.round(this._g),
        b: Math.round(this._b),
        a: this._a
      };
    },
    toRgbString: function toRgbString() {
      return this._a == 1 ? "rgb(" + Math.round(this._r) + ", " + Math.round(this._g) + ", " + Math.round(this._b) + ")" : "rgba(" + Math.round(this._r) + ", " + Math.round(this._g) + ", " + Math.round(this._b) + ", " + this._roundA + ")";
    },
    toPercentageRgb: function toPercentageRgb() {
      return {
        r: Math.round(bound01(this._r, 255) * 100) + "%",
        g: Math.round(bound01(this._g, 255) * 100) + "%",
        b: Math.round(bound01(this._b, 255) * 100) + "%",
        a: this._a
      };
    },
    toPercentageRgbString: function toPercentageRgbString() {
      return this._a == 1 ? "rgb(" + Math.round(bound01(this._r, 255) * 100) + "%, " + Math.round(bound01(this._g, 255) * 100) + "%, " + Math.round(bound01(this._b, 255) * 100) + "%)" : "rgba(" + Math.round(bound01(this._r, 255) * 100) + "%, " + Math.round(bound01(this._g, 255) * 100) + "%, " + Math.round(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
    },
    toName: function toName() {
      if (this._a === 0) {
        return "transparent";
      }
      if (this._a < 1) {
        return false;
      }
      return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
    },
    toFilter: function toFilter(secondColor) {
      var hex8String = "#" + rgbaToArgbHex(this._r, this._g, this._b, this._a);
      var secondHex8String = hex8String;
      var gradientType = this._gradientType ? "GradientType = 1, " : "";
      if (secondColor) {
        var s = tinycolor(secondColor);
        secondHex8String = "#" + rgbaToArgbHex(s._r, s._g, s._b, s._a);
      }
      return "progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")";
    },
    toString: function toString2(format) {
      var formatSet = !!format;
      format = format || this._format;
      var formattedString = false;
      var hasAlpha = this._a < 1 && this._a >= 0;
      var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");
      if (needsAlphaFormat) {
        if (format === "name" && this._a === 0) {
          return this.toName();
        }
        return this.toRgbString();
      }
      if (format === "rgb") {
        formattedString = this.toRgbString();
      }
      if (format === "prgb") {
        formattedString = this.toPercentageRgbString();
      }
      if (format === "hex" || format === "hex6") {
        formattedString = this.toHexString();
      }
      if (format === "hex3") {
        formattedString = this.toHexString(true);
      }
      if (format === "hex4") {
        formattedString = this.toHex8String(true);
      }
      if (format === "hex8") {
        formattedString = this.toHex8String();
      }
      if (format === "name") {
        formattedString = this.toName();
      }
      if (format === "hsl") {
        formattedString = this.toHslString();
      }
      if (format === "hsv") {
        formattedString = this.toHsvString();
      }
      return formattedString || this.toHexString();
    },
    clone: function clone() {
      return tinycolor(this.toString());
    },
    _applyModification: function _applyModification(fn2, args) {
      var color = fn2.apply(null, [this].concat([].slice.call(args)));
      this._r = color._r;
      this._g = color._g;
      this._b = color._b;
      this.setAlpha(color._a);
      return this;
    },
    lighten: function lighten() {
      return this._applyModification(_lighten, arguments);
    },
    brighten: function brighten() {
      return this._applyModification(_brighten, arguments);
    },
    darken: function darken() {
      return this._applyModification(_darken, arguments);
    },
    desaturate: function desaturate() {
      return this._applyModification(_desaturate, arguments);
    },
    saturate: function saturate() {
      return this._applyModification(_saturate, arguments);
    },
    greyscale: function greyscale() {
      return this._applyModification(_greyscale, arguments);
    },
    spin: function spin() {
      return this._applyModification(_spin, arguments);
    },
    _applyCombination: function _applyCombination(fn2, args) {
      return fn2.apply(null, [this].concat([].slice.call(args)));
    },
    analogous: function analogous() {
      return this._applyCombination(_analogous, arguments);
    },
    complement: function complement() {
      return this._applyCombination(_complement, arguments);
    },
    monochromatic: function monochromatic() {
      return this._applyCombination(_monochromatic, arguments);
    },
    splitcomplement: function splitcomplement() {
      return this._applyCombination(_splitcomplement, arguments);
    },
    // Disabled until https://github.com/bgrins/TinyColor/issues/254
    // polyad: function (number) {
    //   return this._applyCombination(polyad, [number]);
    // },
    triad: function triad() {
      return this._applyCombination(polyad, [3]);
    },
    tetrad: function tetrad() {
      return this._applyCombination(polyad, [4]);
    }
  };
  tinycolor.fromRatio = function(color, opts) {
    if (_typeof(color) == "object") {
      var newColor = {};
      for (var i in color) {
        if (color.hasOwnProperty(i)) {
          if (i === "a") {
            newColor[i] = color[i];
          } else {
            newColor[i] = convertToPercentage(color[i]);
          }
        }
      }
      color = newColor;
    }
    return tinycolor(color, opts);
  };
  function inputToRGB(color) {
    var rgb = {
      r: 0,
      g: 0,
      b: 0
    };
    var a = 1;
    var s = null;
    var v = null;
    var l = null;
    var ok = false;
    var format = false;
    if (typeof color == "string") {
      color = stringInputToObject(color);
    }
    if (_typeof(color) == "object") {
      if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
        rgb = rgbToRgb(color.r, color.g, color.b);
        ok = true;
        format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
        s = convertToPercentage(color.s);
        v = convertToPercentage(color.v);
        rgb = hsvToRgb(color.h, s, v);
        ok = true;
        format = "hsv";
      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
        s = convertToPercentage(color.s);
        l = convertToPercentage(color.l);
        rgb = hslToRgb(color.h, s, l);
        ok = true;
        format = "hsl";
      }
      if (color.hasOwnProperty("a")) {
        a = color.a;
      }
    }
    a = boundAlpha(a);
    return {
      ok,
      format: color.format || format,
      r: Math.min(255, Math.max(rgb.r, 0)),
      g: Math.min(255, Math.max(rgb.g, 0)),
      b: Math.min(255, Math.max(rgb.b, 0)),
      a
    };
  }
  function rgbToRgb(r, g, b) {
    return {
      r: bound01(r, 255) * 255,
      g: bound01(g, 255) * 255,
      b: bound01(b, 255) * 255
    };
  }
  function rgbToHsl(r, g, b) {
    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);
    var max2 = Math.max(r, g, b), min2 = Math.min(r, g, b);
    var h2, s, l = (max2 + min2) / 2;
    if (max2 == min2) {
      h2 = s = 0;
    } else {
      var d = max2 - min2;
      s = l > 0.5 ? d / (2 - max2 - min2) : d / (max2 + min2);
      switch (max2) {
        case r:
          h2 = (g - b) / d + (g < b ? 6 : 0);
          break;
        case g:
          h2 = (b - r) / d + 2;
          break;
        case b:
          h2 = (r - g) / d + 4;
          break;
      }
      h2 /= 6;
    }
    return {
      h: h2,
      s,
      l
    };
  }
  function hslToRgb(h2, s, l) {
    var r, g, b;
    h2 = bound01(h2, 360);
    s = bound01(s, 100);
    l = bound01(l, 100);
    function hue2rgb(p2, q2, t) {
      if (t < 0) t += 1;
      if (t > 1) t -= 1;
      if (t < 1 / 6) return p2 + (q2 - p2) * 6 * t;
      if (t < 1 / 2) return q2;
      if (t < 2 / 3) return p2 + (q2 - p2) * (2 / 3 - t) * 6;
      return p2;
    }
    if (s === 0) {
      r = g = b = l;
    } else {
      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
      var p = 2 * l - q;
      r = hue2rgb(p, q, h2 + 1 / 3);
      g = hue2rgb(p, q, h2);
      b = hue2rgb(p, q, h2 - 1 / 3);
    }
    return {
      r: r * 255,
      g: g * 255,
      b: b * 255
    };
  }
  function rgbToHsv(r, g, b) {
    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);
    var max2 = Math.max(r, g, b), min2 = Math.min(r, g, b);
    var h2, s, v = max2;
    var d = max2 - min2;
    s = max2 === 0 ? 0 : d / max2;
    if (max2 == min2) {
      h2 = 0;
    } else {
      switch (max2) {
        case r:
          h2 = (g - b) / d + (g < b ? 6 : 0);
          break;
        case g:
          h2 = (b - r) / d + 2;
          break;
        case b:
          h2 = (r - g) / d + 4;
          break;
      }
      h2 /= 6;
    }
    return {
      h: h2,
      s,
      v
    };
  }
  function hsvToRgb(h2, s, v) {
    h2 = bound01(h2, 360) * 6;
    s = bound01(s, 100);
    v = bound01(v, 100);
    var i = Math.floor(h2), f = h2 - i, p = v * (1 - s), q = v * (1 - f * s), t = v * (1 - (1 - f) * s), mod = i % 6, r = [v, q, p, p, t, v][mod], g = [t, v, v, q, p, p][mod], b = [p, p, t, v, v, q][mod];
    return {
      r: r * 255,
      g: g * 255,
      b: b * 255
    };
  }
  function rgbToHex(r, g, b, allow3Char) {
    var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];
    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
    }
    return hex.join("");
  }
  function rgbaToHex(r, g, b, a, allow4Char) {
    var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16)), pad2(convertDecimalToHex(a))];
    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
    }
    return hex.join("");
  }
  function rgbaToArgbHex(r, g, b, a) {
    var hex = [pad2(convertDecimalToHex(a)), pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];
    return hex.join("");
  }
  tinycolor.equals = function(color1, color2) {
    if (!color1 || !color2) return false;
    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
  };
  tinycolor.random = function() {
    return tinycolor.fromRatio({
      r: Math.random(),
      g: Math.random(),
      b: Math.random()
    });
  };
  function _desaturate(color, amount) {
    amount = amount === 0 ? 0 : amount || 10;
    var hsl = tinycolor(color).toHsl();
    hsl.s -= amount / 100;
    hsl.s = clamp01(hsl.s);
    return tinycolor(hsl);
  }
  function _saturate(color, amount) {
    amount = amount === 0 ? 0 : amount || 10;
    var hsl = tinycolor(color).toHsl();
    hsl.s += amount / 100;
    hsl.s = clamp01(hsl.s);
    return tinycolor(hsl);
  }
  function _greyscale(color) {
    return tinycolor(color).desaturate(100);
  }
  function _lighten(color, amount) {
    amount = amount === 0 ? 0 : amount || 10;
    var hsl = tinycolor(color).toHsl();
    hsl.l += amount / 100;
    hsl.l = clamp01(hsl.l);
    return tinycolor(hsl);
  }
  function _brighten(color, amount) {
    amount = amount === 0 ? 0 : amount || 10;
    var rgb = tinycolor(color).toRgb();
    rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));
    rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));
    rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));
    return tinycolor(rgb);
  }
  function _darken(color, amount) {
    amount = amount === 0 ? 0 : amount || 10;
    var hsl = tinycolor(color).toHsl();
    hsl.l -= amount / 100;
    hsl.l = clamp01(hsl.l);
    return tinycolor(hsl);
  }
  function _spin(color, amount) {
    var hsl = tinycolor(color).toHsl();
    var hue = (hsl.h + amount) % 360;
    hsl.h = hue < 0 ? 360 + hue : hue;
    return tinycolor(hsl);
  }
  function _complement(color) {
    var hsl = tinycolor(color).toHsl();
    hsl.h = (hsl.h + 180) % 360;
    return tinycolor(hsl);
  }
  function polyad(color, number) {
    if (isNaN(number) || number <= 0) {
      throw new Error("Argument to polyad must be a positive number");
    }
    var hsl = tinycolor(color).toHsl();
    var result = [tinycolor(color)];
    var step = 360 / number;
    for (var i = 1; i < number; i++) {
      result.push(tinycolor({
        h: (hsl.h + i * step) % 360,
        s: hsl.s,
        l: hsl.l
      }));
    }
    return result;
  }
  function _splitcomplement(color) {
    var hsl = tinycolor(color).toHsl();
    var h2 = hsl.h;
    return [tinycolor(color), tinycolor({
      h: (h2 + 72) % 360,
      s: hsl.s,
      l: hsl.l
    }), tinycolor({
      h: (h2 + 216) % 360,
      s: hsl.s,
      l: hsl.l
    })];
  }
  function _analogous(color, results, slices) {
    results = results || 6;
    slices = slices || 30;
    var hsl = tinycolor(color).toHsl();
    var part = 360 / slices;
    var ret = [tinycolor(color)];
    for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results; ) {
      hsl.h = (hsl.h + part) % 360;
      ret.push(tinycolor(hsl));
    }
    return ret;
  }
  function _monochromatic(color, results) {
    results = results || 6;
    var hsv = tinycolor(color).toHsv();
    var h2 = hsv.h, s = hsv.s, v = hsv.v;
    var ret = [];
    var modification = 1 / results;
    while (results--) {
      ret.push(tinycolor({
        h: h2,
        s,
        v
      }));
      v = (v + modification) % 1;
    }
    return ret;
  }
  tinycolor.mix = function(color1, color2, amount) {
    amount = amount === 0 ? 0 : amount || 50;
    var rgb1 = tinycolor(color1).toRgb();
    var rgb2 = tinycolor(color2).toRgb();
    var p = amount / 100;
    var rgba = {
      r: (rgb2.r - rgb1.r) * p + rgb1.r,
      g: (rgb2.g - rgb1.g) * p + rgb1.g,
      b: (rgb2.b - rgb1.b) * p + rgb1.b,
      a: (rgb2.a - rgb1.a) * p + rgb1.a
    };
    return tinycolor(rgba);
  };
  tinycolor.readability = function(color1, color2) {
    var c1 = tinycolor(color1);
    var c2 = tinycolor(color2);
    return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);
  };
  tinycolor.isReadable = function(color1, color2, wcag2) {
    var readability = tinycolor.readability(color1, color2);
    var wcag2Parms, out;
    out = false;
    wcag2Parms = validateWCAG2Parms(wcag2);
    switch (wcag2Parms.level + wcag2Parms.size) {
      case "AAsmall":
      case "AAAlarge":
        out = readability >= 4.5;
        break;
      case "AAlarge":
        out = readability >= 3;
        break;
      case "AAAsmall":
        out = readability >= 7;
        break;
    }
    return out;
  };
  tinycolor.mostReadable = function(baseColor, colorList, args) {
    var bestColor = null;
    var bestScore = 0;
    var readability;
    var includeFallbackColors, level, size;
    args = args || {};
    includeFallbackColors = args.includeFallbackColors;
    level = args.level;
    size = args.size;
    for (var i = 0; i < colorList.length; i++) {
      readability = tinycolor.readability(baseColor, colorList[i]);
      if (readability > bestScore) {
        bestScore = readability;
        bestColor = tinycolor(colorList[i]);
      }
    }
    if (tinycolor.isReadable(baseColor, bestColor, {
      level,
      size
    }) || !includeFallbackColors) {
      return bestColor;
    } else {
      args.includeFallbackColors = false;
      return tinycolor.mostReadable(baseColor, ["#fff", "#000"], args);
    }
  };
  var names = tinycolor.names = {
    aliceblue: "f0f8ff",
    antiquewhite: "faebd7",
    aqua: "0ff",
    aquamarine: "7fffd4",
    azure: "f0ffff",
    beige: "f5f5dc",
    bisque: "ffe4c4",
    black: "000",
    blanchedalmond: "ffebcd",
    blue: "00f",
    blueviolet: "8a2be2",
    brown: "a52a2a",
    burlywood: "deb887",
    burntsienna: "ea7e5d",
    cadetblue: "5f9ea0",
    chartreuse: "7fff00",
    chocolate: "d2691e",
    coral: "ff7f50",
    cornflowerblue: "6495ed",
    cornsilk: "fff8dc",
    crimson: "dc143c",
    cyan: "0ff",
    darkblue: "00008b",
    darkcyan: "008b8b",
    darkgoldenrod: "b8860b",
    darkgray: "a9a9a9",
    darkgreen: "006400",
    darkgrey: "a9a9a9",
    darkkhaki: "bdb76b",
    darkmagenta: "8b008b",
    darkolivegreen: "556b2f",
    darkorange: "ff8c00",
    darkorchid: "9932cc",
    darkred: "8b0000",
    darksalmon: "e9967a",
    darkseagreen: "8fbc8f",
    darkslateblue: "483d8b",
    darkslategray: "2f4f4f",
    darkslategrey: "2f4f4f",
    darkturquoise: "00ced1",
    darkviolet: "9400d3",
    deeppink: "ff1493",
    deepskyblue: "00bfff",
    dimgray: "696969",
    dimgrey: "696969",
    dodgerblue: "1e90ff",
    firebrick: "b22222",
    floralwhite: "fffaf0",
    forestgreen: "228b22",
    fuchsia: "f0f",
    gainsboro: "dcdcdc",
    ghostwhite: "f8f8ff",
    gold: "ffd700",
    goldenrod: "daa520",
    gray: "808080",
    green: "008000",
    greenyellow: "adff2f",
    grey: "808080",
    honeydew: "f0fff0",
    hotpink: "ff69b4",
    indianred: "cd5c5c",
    indigo: "4b0082",
    ivory: "fffff0",
    khaki: "f0e68c",
    lavender: "e6e6fa",
    lavenderblush: "fff0f5",
    lawngreen: "7cfc00",
    lemonchiffon: "fffacd",
    lightblue: "add8e6",
    lightcoral: "f08080",
    lightcyan: "e0ffff",
    lightgoldenrodyellow: "fafad2",
    lightgray: "d3d3d3",
    lightgreen: "90ee90",
    lightgrey: "d3d3d3",
    lightpink: "ffb6c1",
    lightsalmon: "ffa07a",
    lightseagreen: "20b2aa",
    lightskyblue: "87cefa",
    lightslategray: "789",
    lightslategrey: "789",
    lightsteelblue: "b0c4de",
    lightyellow: "ffffe0",
    lime: "0f0",
    limegreen: "32cd32",
    linen: "faf0e6",
    magenta: "f0f",
    maroon: "800000",
    mediumaquamarine: "66cdaa",
    mediumblue: "0000cd",
    mediumorchid: "ba55d3",
    mediumpurple: "9370db",
    mediumseagreen: "3cb371",
    mediumslateblue: "7b68ee",
    mediumspringgreen: "00fa9a",
    mediumturquoise: "48d1cc",
    mediumvioletred: "c71585",
    midnightblue: "191970",
    mintcream: "f5fffa",
    mistyrose: "ffe4e1",
    moccasin: "ffe4b5",
    navajowhite: "ffdead",
    navy: "000080",
    oldlace: "fdf5e6",
    olive: "808000",
    olivedrab: "6b8e23",
    orange: "ffa500",
    orangered: "ff4500",
    orchid: "da70d6",
    palegoldenrod: "eee8aa",
    palegreen: "98fb98",
    paleturquoise: "afeeee",
    palevioletred: "db7093",
    papayawhip: "ffefd5",
    peachpuff: "ffdab9",
    peru: "cd853f",
    pink: "ffc0cb",
    plum: "dda0dd",
    powderblue: "b0e0e6",
    purple: "800080",
    rebeccapurple: "663399",
    red: "f00",
    rosybrown: "bc8f8f",
    royalblue: "4169e1",
    saddlebrown: "8b4513",
    salmon: "fa8072",
    sandybrown: "f4a460",
    seagreen: "2e8b57",
    seashell: "fff5ee",
    sienna: "a0522d",
    silver: "c0c0c0",
    skyblue: "87ceeb",
    slateblue: "6a5acd",
    slategray: "708090",
    slategrey: "708090",
    snow: "fffafa",
    springgreen: "00ff7f",
    steelblue: "4682b4",
    tan: "d2b48c",
    teal: "008080",
    thistle: "d8bfd8",
    tomato: "ff6347",
    turquoise: "40e0d0",
    violet: "ee82ee",
    wheat: "f5deb3",
    white: "fff",
    whitesmoke: "f5f5f5",
    yellow: "ff0",
    yellowgreen: "9acd32"
  };
  var hexNames = tinycolor.hexNames = flip(names);
  function flip(o) {
    var flipped = {};
    for (var i in o) {
      if (o.hasOwnProperty(i)) {
        flipped[o[i]] = i;
      }
    }
    return flipped;
  }
  function boundAlpha(a) {
    a = parseFloat(a);
    if (isNaN(a) || a < 0 || a > 1) {
      a = 1;
    }
    return a;
  }
  function bound01(n, max2) {
    if (isOnePointZero(n)) n = "100%";
    var processPercent = isPercentage(n);
    n = Math.min(max2, Math.max(0, parseFloat(n)));
    if (processPercent) {
      n = parseInt(n * max2, 10) / 100;
    }
    if (Math.abs(n - max2) < 1e-6) {
      return 1;
    }
    return n % max2 / parseFloat(max2);
  }
  function clamp01(val) {
    return Math.min(1, Math.max(0, val));
  }
  function parseIntFromHex(val) {
    return parseInt(val, 16);
  }
  function isOnePointZero(n) {
    return typeof n == "string" && n.indexOf(".") != -1 && parseFloat(n) === 1;
  }
  function isPercentage(n) {
    return typeof n === "string" && n.indexOf("%") != -1;
  }
  function pad2(c) {
    return c.length == 1 ? "0" + c : "" + c;
  }
  function convertToPercentage(n) {
    if (n <= 1) {
      n = n * 100 + "%";
    }
    return n;
  }
  function convertDecimalToHex(d) {
    return Math.round(parseFloat(d) * 255).toString(16);
  }
  function convertHexToDecimal(h2) {
    return parseIntFromHex(h2) / 255;
  }
  var matchers = function() {
    var CSS_INTEGER = "[-\\+]?\\d+%?";
    var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";
    var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";
    var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
    var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
    return {
      CSS_UNIT: new RegExp(CSS_UNIT),
      rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
      rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
      hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
      hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
      hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
      hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
      hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
      hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
      hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
      hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
    };
  }();
  function isValidCSSUnit(color) {
    return !!matchers.CSS_UNIT.exec(color);
  }
  function stringInputToObject(color) {
    color = color.replace(trimLeft, "").replace(trimRight, "").toLowerCase();
    var named = false;
    if (names[color]) {
      color = names[color];
      named = true;
    } else if (color == "transparent") {
      return {
        r: 0,
        g: 0,
        b: 0,
        a: 0,
        format: "name"
      };
    }
    var match;
    if (match = matchers.rgb.exec(color)) {
      return {
        r: match[1],
        g: match[2],
        b: match[3]
      };
    }
    if (match = matchers.rgba.exec(color)) {
      return {
        r: match[1],
        g: match[2],
        b: match[3],
        a: match[4]
      };
    }
    if (match = matchers.hsl.exec(color)) {
      return {
        h: match[1],
        s: match[2],
        l: match[3]
      };
    }
    if (match = matchers.hsla.exec(color)) {
      return {
        h: match[1],
        s: match[2],
        l: match[3],
        a: match[4]
      };
    }
    if (match = matchers.hsv.exec(color)) {
      return {
        h: match[1],
        s: match[2],
        v: match[3]
      };
    }
    if (match = matchers.hsva.exec(color)) {
      return {
        h: match[1],
        s: match[2],
        v: match[3],
        a: match[4]
      };
    }
    if (match = matchers.hex8.exec(color)) {
      return {
        r: parseIntFromHex(match[1]),
        g: parseIntFromHex(match[2]),
        b: parseIntFromHex(match[3]),
        a: convertHexToDecimal(match[4]),
        format: named ? "name" : "hex8"
      };
    }
    if (match = matchers.hex6.exec(color)) {
      return {
        r: parseIntFromHex(match[1]),
        g: parseIntFromHex(match[2]),
        b: parseIntFromHex(match[3]),
        format: named ? "name" : "hex"
      };
    }
    if (match = matchers.hex4.exec(color)) {
      return {
        r: parseIntFromHex(match[1] + "" + match[1]),
        g: parseIntFromHex(match[2] + "" + match[2]),
        b: parseIntFromHex(match[3] + "" + match[3]),
        a: convertHexToDecimal(match[4] + "" + match[4]),
        format: named ? "name" : "hex8"
      };
    }
    if (match = matchers.hex3.exec(color)) {
      return {
        r: parseIntFromHex(match[1] + "" + match[1]),
        g: parseIntFromHex(match[2] + "" + match[2]),
        b: parseIntFromHex(match[3] + "" + match[3]),
        format: named ? "name" : "hex"
      };
    }
    return false;
  }
  function validateWCAG2Parms(parms) {
    var level, size;
    parms = parms || {
      level: "AA",
      size: "small"
    };
    level = (parms.level || "AA").toUpperCase();
    size = (parms.size || "small").toLowerCase();
    if (level !== "AA" && level !== "AAA") {
      level = "AA";
    }
    if (size !== "small" && size !== "large") {
      size = "small";
    }
    return {
      level,
      size
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props$7 = {
    closable: Boolean,
    color: {
      type: String,
      "default": ""
    },
    content: {
      type: [String, Function]
    },
    "default": {
      type: [String, Function]
    },
    disabled: Boolean,
    icon: {
      type: Function,
      "default": void 0
    },
    maxWidth: {
      type: [String, Number]
    },
    shape: {
      type: String,
      "default": "square",
      validator: function validator23(val) {
        if (!val) return true;
        return ["square", "round", "mark"].includes(val);
      }
    },
    size: {
      type: String,
      "default": "medium",
      validator: function validator24(val) {
        if (!val) return true;
        return ["small", "medium", "large"].includes(val);
      }
    },
    theme: {
      type: String,
      "default": "default",
      validator: function validator25(val) {
        if (!val) return true;
        return ["default", "primary", "warning", "danger", "success"].includes(val);
      }
    },
    variant: {
      type: String,
      "default": "dark",
      validator: function validator26(val) {
        if (!val) return true;
        return ["dark", "light", "outline", "light-outline"].includes(val);
      }
    },
    onClick: Function,
    onClose: Function
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$b(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$b(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$b(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$b(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var _Tag = vue.defineComponent({
    name: "TTag",
    props: props$7,
    setup: function setup13(props2) {
      var _useConfig = useConfig("tag"), tagGlobalConfig = _useConfig.globalConfig;
      var COMPONENT_NAME = usePrefixClass("tag");
      var _useGlobalIcon = useGlobalIcon({
        CloseIcon: close
      }), CloseIcon$1 = _useGlobalIcon.CloseIcon;
      var renderTNodeJSX3 = useTNodeJSX();
      var renderContent3 = useContent();
      var _useCommonClassName = useCommonClassName$2(), SIZE = _useCommonClassName.SIZE;
      var tagClass = vue.computed(function() {
        return ["".concat(COMPONENT_NAME.value), "".concat(COMPONENT_NAME.value, "--").concat(props2.theme), "".concat(COMPONENT_NAME.value, "--").concat(props2.variant), _defineProperty$2(_defineProperty$2(_defineProperty$2(_defineProperty$2({}, "".concat(COMPONENT_NAME.value, "--ellipsis"), props2.maxWidth), "".concat(COMPONENT_NAME.value, "--close"), props2.closable), "".concat(COMPONENT_NAME.value, "--disabled"), props2.disabled), SIZE.value[props2.size], props2.size !== "medium"), props2.shape !== "square" && "".concat(COMPONENT_NAME.value, "--").concat(props2.shape)];
      });
      var tagStyle = vue.computed(function() {
        var maxWidth = props2.maxWidth;
        var styles = getTagColorStyle();
        return props2.maxWidth ? _objectSpread$b({
          maxWidth: isNaN(Number(maxWidth)) ? String(maxWidth) : "".concat(maxWidth, "px")
        }, styles) : styles;
      });
      var getTagColorStyle = function getTagColorStyle2() {
        var color = props2.color, variant = props2.variant;
        if (!color) return {};
        var luminance = tinycolor(color).getLuminance();
        var style = {
          color: luminance > 0.5 ? "black" : "white"
        };
        if (variant === "outline" || variant === "light-outline") {
          style.borderColor = color;
        }
        if (variant !== "outline") {
          var getLightestShade = function getLightestShade2() {
            var _tinycolor$toRgb = tinycolor(color).toRgb(), r = _tinycolor$toRgb.r, g = _tinycolor$toRgb.g, b = _tinycolor$toRgb.b;
            return "rgba(".concat(r, ", ").concat(g, ", ").concat(b, ", 0.1)");
          };
          style.backgroundColor = variant === "dark" ? color : getLightestShade();
        }
        if (variant !== "dark") {
          style.color = color;
        }
        return style;
      };
      var handleClick = function handleClick2(e) {
        var _props2$onClick;
        if (props2.disabled) return;
        (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 || _props2$onClick.call(props2, {
          e
        });
      };
      var getCloseIcon = function getCloseIcon2() {
        if (!props2.closable) return null;
        var iconClassName = "".concat(COMPONENT_NAME.value, "__icon-close");
        if (tagGlobalConfig.value.closeIcon) {
          return vue.h(tagGlobalConfig.value.closeIcon(vue.h), {
            "class": iconClassName
          });
        }
        return vue.createVNode(CloseIcon$1, {
          "onClick": function onClick(_ref2) {
            var _props2$onClose;
            var e = _ref2.e;
            e.stopPropagation();
            (_props2$onClose = props2.onClose) === null || _props2$onClose === void 0 || _props2$onClose.call(props2, {
              e
            });
          },
          "class": iconClassName
        }, null);
      };
      return function() {
        var closeIcon = getCloseIcon();
        var tagContent = renderContent3("default", "content");
        var icon = renderTNodeJSX3("icon");
        var title = isString_1(tagContent) ? tagContent : "";
        var titleAttribute = title && props2.maxWidth ? title : void 0;
        return vue.createVNode("div", {
          "class": tagClass.value,
          "style": tagStyle.value,
          "onClick": handleClick
        }, [icon, vue.createVNode("span", {
          "class": "".concat(COMPONENT_NAME.value, "--text"),
          "title": titleAttribute
        }, [tagContent]), !props2.disabled && closeIcon]);
      };
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props$6 = {
    checked: {
      type: Boolean,
      "default": void 0
    },
    modelValue: {
      type: Boolean,
      "default": void 0
    },
    defaultChecked: Boolean,
    checkedProps: {
      type: Object
    },
    content: {
      type: [String, Number, Array, Function]
    },
    "default": {
      type: [String, Function]
    },
    disabled: Boolean,
    size: {
      type: String,
      "default": "medium",
      validator: function validator27(val) {
        if (!val) return true;
        return ["small", "medium", "large"].includes(val);
      }
    },
    uncheckedProps: {
      type: Object
    },
    value: {
      type: [String, Number]
    },
    onChange: Function,
    onClick: Function
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var SPACE_REG = /^Space$/i;
  var ENTER_REG = /^Enter$/i;
  var CHECKED_CODE_REG = /^(Enter|Space)$/i;
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$a(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$a(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$a(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$a(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  function _isSlot$3(s) {
    return typeof s === "function" || Object.prototype.toString.call(s) === "[object Object]" && !vue.isVNode(s);
  }
  var _CheckTag = vue.defineComponent({
    name: "TCheckTag",
    props: props$6,
    setup: function setup14(props2) {
      var componentName = usePrefixClass("tag");
      var _useCommonClassName = useCommonClassName$2(), SIZE = _useCommonClassName.SIZE;
      var renderContent3 = useContent();
      var _toRefs = vue.toRefs(props2), checked = _toRefs.checked, modelValue = _toRefs.modelValue;
      var _useVModel = useVModel(checked, modelValue, props2.defaultChecked, props2.onChange, "checked"), _useVModel2 = _slicedToArray(_useVModel, 2), innerChecked = _useVModel2[0], setInnerChecked = _useVModel2[1];
      var tagClass = vue.computed(function() {
        return ["".concat(componentName.value), "".concat(componentName.value, "--check"), SIZE.value[props2.size], _defineProperty$2(_defineProperty$2({}, "".concat(componentName.value, "--checked"), innerChecked.value), "".concat(componentName.value, "--disabled"), props2.disabled)];
      });
      var checkTagProps = vue.computed(function() {
        var checkedProps = _objectSpread$a({
          theme: "primary"
        }, props2.checkedProps);
        var uncheckedProps = _objectSpread$a({}, props2.uncheckedProps);
        return innerChecked.value ? checkedProps : uncheckedProps;
      });
      var handleClick = function handleClick2(_ref2) {
        var e = _ref2.e;
        if (!props2.disabled) {
          var _props2$onClick;
          (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 || _props2$onClick.call(props2, {
            e
          });
          setInnerChecked(!innerChecked.value, {
            e,
            value: props2.value
          });
        }
      };
      var keyboardEventListener = function keyboardEventListener2(e) {
        var _e$key;
        var code = e.code || ((_e$key = e.key) === null || _e$key === void 0 ? void 0 : _e$key.trim());
        var isCheckedCode = SPACE_REG.test(code) || ENTER_REG.test(code);
        if (isCheckedCode) {
          e.preventDefault();
          setInnerChecked(!innerChecked.value, {
            e,
            value: props2.value
          });
        }
      };
      var onCheckboxFocus = function onCheckboxFocus2(e) {
        e.currentTarget.addEventListener("keydown", keyboardEventListener);
      };
      var onCheckboxBlur = function onCheckboxBlur2(e) {
        e.currentTarget.removeEventListener("keydown", keyboardEventListener);
      };
      return function() {
        var tagContent = renderContent3("default", "content");
        return vue.createVNode(_Tag, vue.mergeProps({
          "class": tagClass.value,
          "disabled": props2.disabled,
          "tabindex": props2.disabled ? void 0 : "0",
          "onFocus": onCheckboxFocus,
          "onBlur": onCheckboxBlur
        }, checkTagProps.value, {
          "onClick": handleClick
        }), _isSlot$3(tagContent) ? tagContent : {
          "default": function _default4() {
            return [tagContent];
          }
        });
      };
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props$5 = {
    checkedProps: {
      type: Object
    },
    multiple: Boolean,
    options: {
      type: Array
    },
    uncheckedProps: {
      type: Object
    },
    value: {
      type: Array,
      "default": void 0
    },
    modelValue: {
      type: Array,
      "default": void 0
    },
    defaultValue: {
      type: Array,
      "default": function _default2() {
        return [];
      }
    },
    onChange: Function
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function _isSlot$2(s) {
    return typeof s === "function" || Object.prototype.toString.call(s) === "[object Object]" && !vue.isVNode(s);
  }
  var _CheckTagGroup = vue.defineComponent({
    name: "TCheckTagGroup",
    props: props$5,
    setup: function setup15(props2, context) {
      var _toRefs = vue.toRefs(props2), value = _toRefs.value, modelValue = _toRefs.modelValue, options = _toRefs.options;
      var componentName = usePrefixClass("check-tag-group");
      var checkTagGroupClasses = vue.computed(function() {
        return [componentName.value];
      });
      var _useVModel = useVModel(value, modelValue, props2.defaultValue, props2.onChange), _useVModel2 = _slicedToArray(_useVModel, 2), innerValue = _useVModel2[0], setInnerValue = _useVModel2[1];
      var onCheckTagChange = function onCheckTagChange2(checked, ctx) {
        var value2 = ctx.value;
        if (checked) {
          if (props2.multiple) {
            setInnerValue(innerValue.value.concat(value2), {
              e: ctx.e,
              type: "check",
              value: value2
            });
          } else {
            setInnerValue([value2], {
              e: ctx.e,
              type: "check",
              value: value2
            });
          }
        } else {
          var newValue = [];
          if (props2.multiple) {
            newValue = innerValue.value.filter(function(t) {
              return t !== value2;
            });
          }
          setInnerValue(newValue, {
            e: ctx.e,
            type: "uncheck",
            value: value2
          });
        }
      };
      var getTagContent = function getTagContent2(option) {
        if (context.slots.option) return context.slots.option(option);
        if (context.slots.label) return context.slots.label(option);
        if (option.label) {
          return isFunction_1(option.label) ? option.label(vue.h) : option.label;
        }
        if (option.content && isFunction_1(option.content)) return option.content(vue.h);
        if (option["default"] && isFunction_1(option["default"])) return option["default"](vue.h);
        return option.value;
      };
      return function() {
        return vue.createVNode("div", {
          "class": checkTagGroupClasses.value
        }, [(options.value || []).map(function(option) {
          var _slot;
          return vue.createVNode(_CheckTag, {
            "key": option.value,
            "value": option.value,
            "checkedProps": props2.checkedProps,
            "uncheckedProps": props2.uncheckedProps,
            "checked": innerValue.value.includes(option.value),
            "onChange": onCheckTagChange,
            "disabled": option.disabled,
            "size": option.size,
            "data-value": option.value
          }, _isSlot$2(_slot = getTagContent(option)) ? _slot : {
            "default": function _default4() {
              return [_slot];
            }
          });
        })]);
      };
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var Tag = withInstall(_Tag);
  withInstall(_CheckTag);
  withInstall(_CheckTagGroup);
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$9(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$9(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$9(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$9(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  function useTagList(props2) {
    var renderTNode = useTNodeJSX();
    var classPrefix = usePrefixClass();
    var _toRefs = vue.toRefs(props2), value = _toRefs.value, modelValue = _toRefs.modelValue, onRemove = _toRefs.onRemove, max2 = _toRefs.max, minCollapsedNum = _toRefs.minCollapsedNum, size = _toRefs.size, disabled = _toRefs.disabled, readonly = _toRefs.readonly, tagProps = _toRefs.tagProps, getDragProps = _toRefs.getDragProps;
    var _useVModel = useVModel(value, modelValue, props2.defaultValue || [], props2.onChange), _useVModel2 = _slicedToArray(_useVModel, 2), tagValue = _useVModel2[0], setTagValue = _useVModel2[1];
    var oldInputValue = vue.ref();
    var _onClose = function onClose(p) {
      var _onRemove$value;
      var arr = _toConsumableArray(tagValue.value);
      var _arr$splice = arr.splice(p.index, 1), _arr$splice2 = _slicedToArray(_arr$splice, 1), item = _arr$splice2[0];
      setTagValue(arr, _objectSpread$9(_objectSpread$9({
        trigger: "tag-remove"
      }, p), {}, {
        item
      }));
      (_onRemove$value = onRemove.value) === null || _onRemove$value === void 0 || _onRemove$value.call(onRemove, _objectSpread$9(_objectSpread$9({}, p), {}, {
        item,
        trigger: "tag-remove",
        value: arr
      }));
    };
    var clearAll = function clearAll2(context) {
      setTagValue([], {
        trigger: "clear",
        e: context.e
      });
    };
    var onInnerEnter = function onInnerEnter2(value2, context) {
      var _tagValue$value, _props$onEnter;
      var valueStr = value2 ? String(value2).trim() : "";
      var isLimitExceeded = max2 && ((_tagValue$value = tagValue.value) === null || _tagValue$value === void 0 ? void 0 : _tagValue$value.length) >= max2.value;
      var newValue = tagValue.value;
      if (!isLimitExceeded && valueStr) {
        newValue = tagValue.value instanceof Array ? tagValue.value.concat(String(valueStr)) : [valueStr];
        setTagValue(newValue, {
          trigger: "enter",
          index: newValue.length - 1,
          item: valueStr,
          e: context.e
        });
      }
      props2 === null || props2 === void 0 || (_props$onEnter = props2.onEnter) === null || _props$onEnter === void 0 || _props$onEnter.call(props2, newValue, _objectSpread$9(_objectSpread$9({}, context), {}, {
        inputValue: value2
      }));
    };
    var onInputBackspaceKeyUp = function onInputBackspaceKeyUp2(value2) {
      if (!tagValue.value || !tagValue.value.length) return;
      oldInputValue.value = value2;
    };
    var onInputBackspaceKeyDown = function onInputBackspaceKeyDown2(value2, context) {
      var e = context.e;
      if (!tagValue.value || !tagValue.value.length || e.key === "Process") return;
      var isDelete = /(Backspace|NumpadDelete)/i.test(e.code) || /(Backspace|NumpadDelete)/i.test(e.key);
      if (!value2 && isDelete) {
        var _onRemove$value2;
        var index = tagValue.value.length - 1;
        var item = tagValue.value[index];
        var trigger = "backspace";
        var newValue = tagValue.value.slice(0, -1);
        setTagValue(newValue, {
          e,
          index,
          item,
          trigger
        });
        (_onRemove$value2 = onRemove.value) === null || _onRemove$value2 === void 0 || _onRemove$value2.call(onRemove, {
          e,
          index,
          item,
          trigger,
          value: newValue
        });
      }
      oldInputValue.value = value2;
    };
    var renderLabel = function renderLabel2(_ref) {
      var _newList$map;
      var displayNode = _ref.displayNode, label = _ref.label;
      var newList = minCollapsedNum.value ? tagValue.value.slice(0, minCollapsedNum.value) : tagValue.value;
      var list = displayNode ? [displayNode] : (newList === null || newList === void 0 || (_newList$map = newList.map) === null || _newList$map === void 0 ? void 0 : _newList$map.call(newList, function(item, index) {
        var _getDragProps$value;
        var tagContent = renderTNode("tag", {
          params: {
            value: item
          }
        });
        return vue.createVNode(Tag, vue.mergeProps({
          "key": "".concat(item).concat(index),
          "size": size.value,
          "disabled": disabled.value,
          "onClose": function onClose(context) {
            return _onClose({
              e: context.e,
              index
            });
          },
          "closable": !readonly.value && !disabled.value
        }, (_getDragProps$value = getDragProps.value) === null || _getDragProps$value === void 0 ? void 0 : _getDragProps$value.call(getDragProps, index, item), tagProps.value), {
          "default": function _default4() {
            return [tagContent !== null && tagContent !== void 0 ? tagContent : item];
          }
        });
      })) || [];
      if (![null, void 0, ""].includes(label)) {
        list.unshift(vue.createVNode("div", {
          "class": "".concat(classPrefix.value, "-tag-input__prefix"),
          "key": "label"
        }, [label]));
      }
      if (newList.length !== (tagValue.value || []).length) {
        var len = tagValue.value.length - newList.length;
        var more = renderTNode("collapsedItems", {
          params: {
            value: tagValue.value,
            count: tagValue.value.length - minCollapsedNum.value,
            collapsedTags: tagValue.value.slice(minCollapsedNum.value, tagValue.value.length),
            collapsedSelectedItems: tagValue.value.slice(minCollapsedNum.value, tagValue.value.length),
            onClose: _onClose
          }
        });
        list.push(more !== null && more !== void 0 ? more : vue.createVNode(Tag, {
          "key": "more",
          "size": size.value
        }, {
          "default": function _default4() {
            return ["+", len];
          }
        }));
      }
      return list;
    };
    return {
      tagValue,
      clearAll,
      onClose: _onClose,
      onInnerEnter,
      onInputBackspaceKeyUp,
      onInputBackspaceKeyDown,
      renderLabel
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useHover(props2) {
    var disabled = props2.disabled, readonly = props2.readonly, onMouseenter = props2.onMouseenter, onMouseleave = props2.onMouseleave;
    var isHover = vue.ref(false);
    var addHover = function addHover2(context) {
      if (readonly || disabled) return;
      isHover.value = true;
      onMouseenter === null || onMouseenter === void 0 || onMouseenter(context);
    };
    var cancelHover = function cancelHover2(context) {
      if (readonly || disabled) return;
      isHover.value = false;
      onMouseleave === null || onMouseleave === void 0 || onMouseleave(context);
    };
    return {
      isHover,
      addHover,
      cancelHover
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useDragSorter(props2) {
    var sortOnDraggable = props2.sortOnDraggable, onDragSort = props2.onDragSort, onDragOverCheck = props2.onDragOverCheck;
    var draggingIndex = vue.ref(-1);
    var dragStartData = vue.ref(null);
    var isDropped = vue.ref(null);
    var startInfo = vue.reactive({
      nodeX: 0,
      nodeWidth: 0,
      mouseX: 0
    });
    var onDragOver = function onDragOver2(e, index, record) {
      e.preventDefault();
      if (draggingIndex.value === index || draggingIndex.value === -1) return;
      var target = e.target;
      if (onDragOverCheck !== null && onDragOverCheck !== void 0 && onDragOverCheck.targetClassNameRegExp && !(onDragOverCheck !== null && onDragOverCheck !== void 0 && onDragOverCheck.targetClassNameRegExp.test(target.className))) {
        return;
      }
      if (onDragOverCheck !== null && onDragOverCheck !== void 0 && onDragOverCheck.x && target) {
        if (!startInfo.nodeWidth) return;
        var _target$getBoundingCl = target.getBoundingClientRect(), x = _target$getBoundingCl.x, width = _target$getBoundingCl.width;
        var targetNodeMiddleX = x + width / 2;
        var draggingNodeLeft = e.clientX - (startInfo.mouseX - startInfo.nodeX);
        var draggingNodeRight = draggingNodeLeft + startInfo.nodeWidth;
        var overlap = false;
        if (draggingNodeLeft > x && draggingNodeLeft < x + width) {
          overlap = draggingNodeLeft < targetNodeMiddleX;
        } else {
          overlap = draggingNodeRight > targetNodeMiddleX;
        }
        if (!overlap) return;
      }
      onDragSort === null || onDragSort === void 0 || onDragSort({
        currentIndex: draggingIndex.value,
        current: dragStartData,
        target: record,
        targetIndex: index
      });
      draggingIndex.value = index;
    };
    if (!sortOnDraggable) {
      return {};
    }
    function onDragStart(e, index, record) {
      draggingIndex.value = index;
      dragStartData.value = record;
      var target = e.target;
      if (onDragOverCheck && target) {
        var _target$getBoundingCl2 = target.getBoundingClientRect(), x = _target$getBoundingCl2.x, width = _target$getBoundingCl2.width;
        startInfo.nodeX = x;
        startInfo.nodeWidth = width;
        startInfo.mouseX = e.clientX;
      }
    }
    function _onDrop() {
      isDropped.value = true;
    }
    function onDragEnd() {
      if (!isDropped.value) ;
      isDropped.value = false;
      draggingIndex.value = -1;
      dragStartData.value = null;
    }
    function getDragProps(index, record) {
      if (sortOnDraggable) {
        return {
          draggable: true,
          onDragstart: function onDragstart(e) {
            onDragStart(e, index, record);
          },
          onDragover: function onDragover(e) {
            onDragOver(e, index, record);
          },
          onDrop: function onDrop() {
            _onDrop();
          },
          onDragend: function onDragend() {
            onDragEnd();
          }
        };
      }
      return {};
    }
    return {
      onDragStart,
      onDragOver,
      onDrop: _onDrop,
      onDragEnd,
      getDragProps,
      dragging: draggingIndex.value !== -1
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$8(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$8(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$8(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$8(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var useComponentClassName$1 = function useComponentClassName2() {
    return {
      NAME_CLASS: usePrefixClass("tag-input"),
      CLEAR_CLASS: usePrefixClass("tag-input__suffix-clear"),
      BREAK_LINE_CLASS: usePrefixClass("tag-input--break-line")
    };
  };
  var _TagInput = vue.defineComponent({
    name: "TTagInput",
    props: _objectSpread$8({}, props$8),
    setup: function setup16(props2) {
      var _useComponentClassNam = useComponentClassName$1(), NAME_CLASS = _useComponentClassNam.NAME_CLASS, CLEAR_CLASS = _useComponentClassNam.CLEAR_CLASS, BREAK_LINE_CLASS = _useComponentClassNam.BREAK_LINE_CLASS;
      var _useGlobalIcon = useGlobalIcon({
        CloseCircleFilledIcon: closeCircleFilled
      }), CloseCircleFilledIcon$1 = _useGlobalIcon.CloseCircleFilledIcon;
      var _toRefs = vue.toRefs(props2), inputValue = _toRefs.inputValue, inputProps = _toRefs.inputProps;
      var _useDefault = useDefaultValue(inputValue, props2.defaultInputValue, props2.onInputChange, "inputValue"), _useDefault2 = _slicedToArray(_useDefault, 2), tInputValue = _useDefault2[0], setTInputValue = _useDefault2[1];
      var _toRefs2 = vue.toRefs(props2), excessTagsDisplayType = _toRefs2.excessTagsDisplayType, readonly = _toRefs2.readonly, disabled = _toRefs2.disabled, clearable = _toRefs2.clearable, placeholder = _toRefs2.placeholder;
      var _useHover = useHover({
        readonly: props2.readonly,
        disabled: props2.disabled,
        onMouseenter: props2.onMouseenter,
        onMouseleave: props2.onMouseleave
      }), isHover = _useHover.isHover, addHover = _useHover.addHover, cancelHover = _useHover.cancelHover;
      var isComposition = vue.ref(false);
      var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
      var isFocused = vue.ref(false);
      var _useDragSorter = useDragSorter(_objectSpread$8(_objectSpread$8({}, props2), {}, {
        sortOnDraggable: props2.dragSort,
        onDragOverCheck: {
          x: true,
          targetClassNameRegExp: new RegExp("^".concat(classPrefix.value, "-tag"))
        }
      })), getDragProps = _useDragSorter.getDragProps;
      var _useTagScroll = useTagScroll(props2), scrollToRight = _useTagScroll.scrollToRight, onWheel = _useTagScroll.onWheel, scrollToRightOnEnter = _useTagScroll.scrollToRightOnEnter, scrollToLeftOnLeave = _useTagScroll.scrollToLeftOnLeave, tagInputRef = _useTagScroll.tagInputRef, isScrollable = _useTagScroll.isScrollable;
      var _useTagList = useTagList(vue.reactive(_objectSpread$8(_objectSpread$8({}, vue.toRefs(props2)), {}, {
        getDragProps
      }))), tagValue = _useTagList.tagValue, onInnerEnter = _useTagList.onInnerEnter, onInputBackspaceKeyUp = _useTagList.onInputBackspaceKeyUp, onInputBackspaceKeyDown = _useTagList.onInputBackspaceKeyDown, clearAll = _useTagList.clearAll, renderLabel = _useTagList.renderLabel, onClose = _useTagList.onClose;
      var classes = vue.computed(function() {
        var isEmpty2 = !(isArray_1(tagValue.value) && tagValue.value.length);
        return [NAME_CLASS.value, _defineProperty$2(_defineProperty$2(_defineProperty$2({}, BREAK_LINE_CLASS.value, excessTagsDisplayType.value === "break-line"), "".concat(classPrefix.value, "-is-empty"), isEmpty2), "".concat(classPrefix.value, "-tag-input--with-tag"), !isEmpty2)];
      });
      var tagInputPlaceholder = vue.computed(function() {
        var _tagValue$value;
        return !((_tagValue$value = tagValue.value) !== null && _tagValue$value !== void 0 && _tagValue$value.length) ? placeholder.value : "";
      });
      var showClearIcon = vue.computed(function() {
        var _tagValue$value2;
        return Boolean(!readonly.value && !disabled.value && clearable.value && isHover.value && (((_tagValue$value2 = tagValue.value) === null || _tagValue$value2 === void 0 ? void 0 : _tagValue$value2.length) || tInputValue.value));
      });
      var onInputEnter = function onInputEnter2(value, context) {
        var _context$e, _context$e$preventDef;
        (_context$e = context.e) === null || _context$e === void 0 || (_context$e$preventDef = _context$e.preventDefault) === null || _context$e$preventDef === void 0 || _context$e$preventDef.call(_context$e);
        setTInputValue("", {
          e: context.e,
          trigger: "enter"
        });
        !isComposition.value && onInnerEnter(value, context);
        vue.nextTick(function() {
          scrollToRight();
          isComposition.value = false;
        });
      };
      var onInputCompositionstart = function onInputCompositionstart2(value, context) {
        var _inputProps$value, _inputProps$value$onC;
        isComposition.value = true;
        (_inputProps$value = inputProps.value) === null || _inputProps$value === void 0 || (_inputProps$value$onC = _inputProps$value.onCompositionstart) === null || _inputProps$value$onC === void 0 || _inputProps$value$onC.call(_inputProps$value, value, context);
      };
      var onInputCompositionend = function onInputCompositionend2(value, context) {
        var _inputProps$value2, _inputProps$value2$on;
        isComposition.value = false;
        (_inputProps$value2 = inputProps.value) === null || _inputProps$value2 === void 0 || (_inputProps$value2$on = _inputProps$value2.onCompositionend) === null || _inputProps$value2$on === void 0 || _inputProps$value2$on.call(_inputProps$value2, value, context);
      };
      var onClick = function onClick2(ctx) {
        var _props2$onClick;
        if (disabled.value) return;
        isFocused.value = true;
        tagInputRef.value.focus();
        (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 || _props2$onClick.call(props2, ctx);
      };
      var onClearClick = function onClearClick2(context) {
        var _props2$onClear;
        clearAll(context);
        setTInputValue("", {
          e: context.e,
          trigger: "clear"
        });
        (_props2$onClear = props2.onClear) === null || _props2$onClear === void 0 || _props2$onClear.call(props2, context);
      };
      var focus = function focus2() {
        tagInputRef.value.focus();
      };
      var blur = function blur2() {
        tagInputRef.value.blur();
      };
      var onMouseEnter = function onMouseEnter2(context) {
        addHover(context);
        scrollToRightOnEnter();
      };
      var onMouseLeave = function onMouseLeave2(context) {
        cancelHover(context);
        scrollToLeftOnLeave();
      };
      var onInnerFocus = function onInnerFocus2(inputValue2, context) {
        var _props2$onFocus;
        if (isFocused.value) return;
        isFocused.value = true;
        (_props2$onFocus = props2.onFocus) === null || _props2$onFocus === void 0 || _props2$onFocus.call(props2, tagValue.value, {
          e: context.e,
          inputValue: inputValue2
        });
      };
      var onInnerBlur = function onInnerBlur2(inputValue2, context) {
        var _props2$onBlur;
        isFocused.value = false;
        setTInputValue("", {
          e: context.e,
          trigger: "blur"
        });
        (_props2$onBlur = props2.onBlur) === null || _props2$onBlur === void 0 || _props2$onBlur.call(props2, tagValue.value, {
          e: context.e,
          inputValue: inputValue2
        });
      };
      var onInnerChange = function onInnerChange2(val, context) {
        setTInputValue(val, _objectSpread$8(_objectSpread$8({}, context), {}, {
          trigger: "input"
        }));
      };
      vue.watch(function() {
        return isScrollable.value;
      }, function(v) {
        if (props2.excessTagsDisplayType !== "scroll") return;
        var scrollElementClass = "".concat(classPrefix.value, "-input__prefix");
        var scrollElement = tagInputRef.value.$el.querySelector(".".concat(scrollElementClass));
        if (v) scrollElement.classList.add("".concat(scrollElementClass, "--scrollable"));
        else scrollElement.classList.remove("".concat(scrollElementClass, "--scrollable"));
      });
      return {
        CLEAR_CLASS,
        CloseCircleFilledIcon: CloseCircleFilledIcon$1,
        tagValue,
        tInputValue,
        isHover,
        tagInputPlaceholder,
        showClearIcon,
        tagInputRef,
        classPrefix,
        isFocused,
        focus,
        blur,
        setTInputValue,
        onMouseEnter,
        onMouseLeave,
        onInnerFocus,
        onInnerBlur,
        onInnerChange,
        addHover,
        cancelHover,
        onInputEnter,
        onInnerEnter,
        onInputBackspaceKeyUp,
        onInputBackspaceKeyDown,
        renderLabel,
        onWheel,
        scrollToRightOnEnter,
        scrollToLeftOnLeave,
        onClick,
        onClearClick,
        onClose,
        onInputCompositionstart,
        onInputCompositionend,
        classes
      };
    },
    render: function render4() {
      var _this = this, _this$tagValue;
      var CloseCircleFilledIcon = this.CloseCircleFilledIcon;
      var suffixIconNode = this.showClearIcon ? vue.createVNode(CloseCircleFilledIcon, {
        "class": this.CLEAR_CLASS,
        "onClick": this.onClearClick
      }, null) : renderTNodeJSX(this, "suffixIcon");
      var prefixIconNode = renderTNodeJSX(this, "prefixIcon");
      var suffixClass = "".concat(this.classPrefix, "-tag-input__with-suffix-icon");
      if (suffixIconNode && !this.classes.includes(suffixClass)) {
        this.classes.push(suffixClass);
      }
      var displayNode = renderTNodeJSX(this, "valueDisplay", {
        params: {
          value: this.tagValue,
          onClose: function onClose(index) {
            return _this.onClose({
              index
            });
          }
        }
      });
      var _label = renderTNodeJSX(this, "label", {
        silent: true
      });
      var inputProps = this.inputProps;
      var readonly = this.readonly || (inputProps === null || inputProps === void 0 ? void 0 : inputProps.readonly);
      return vue.createVNode(Input, vue.mergeProps({
        "ref": "tagInputRef",
        "borderless": this.borderless,
        "readonly": readonly,
        "showInput": !readonly || !this.tagValue || !((_this$tagValue = this.tagValue) !== null && _this$tagValue !== void 0 && _this$tagValue.length),
        "value": this.tInputValue,
        "autoWidth": true,
        "size": this.size,
        "disabled": this.disabled,
        "label": function label() {
          return _this.renderLabel({
            displayNode,
            label: _label
          });
        },
        "class": this.classes,
        "tips": this.tips,
        "status": this.status,
        "placeholder": this.tagInputPlaceholder,
        "suffix": this.suffix,
        "suffixIcon": function suffixIcon() {
          return suffixIconNode;
        },
        "prefixIcon": function prefixIcon() {
          return prefixIconNode;
        },
        "keepWrapperWidth": !this.autoWidth,
        "onWheel": this.onWheel,
        "onChange": this.onInnerChange,
        "onPaste": this.onPaste,
        "onEnter": this.onInputEnter,
        "onKeyup": this.onInputBackspaceKeyUp,
        "onKeydown": this.onInputBackspaceKeyDown,
        "onMouseenter": this.onMouseEnter,
        "onMouseleave": this.onMouseLeave,
        "onFocus": this.onInnerFocus,
        "onBlur": this.onInnerBlur,
        "onClick": this.onClick,
        "onCompositionstart": this.onInputCompositionstart,
        "onCompositionend": this.onInputCompositionend
      }, this.inputProps), {
        suffix: this.$slots.suffix
      });
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var TagInput = withInstall(_TagInput);
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var _excluded$1 = ["tips"];
  function ownKeys$7(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$7(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$7(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$7(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var DEFAULT_KEYS = {
    label: "label",
    key: "key",
    children: "children"
  };
  function useMultiple(props2, context, popupRef) {
    var _toRefs = vue.toRefs(props2), inputValue = _toRefs.inputValue;
    var classPrefix = usePrefixClass();
    var tagInputRef = vue.ref();
    var isMultipleFocus = vue.ref(props2.autofocus);
    var _useDefault = useDefaultValue(inputValue, props2.defaultInputValue, props2.onInputChange, "inputValue"), _useDefault2 = _slicedToArray(_useDefault, 2), tInputValue = _useDefault2[0], setTInputValue = _useDefault2[1];
    var disable = useDisabled();
    var iKeys = vue.computed(function() {
      return _objectSpread$7(_objectSpread$7({}, DEFAULT_KEYS), props2.keys);
    });
    var tags = vue.computed(function() {
      if (!(props2.value instanceof Array)) {
        return isObject_1(props2.value) ? [props2.value[iKeys.value.label]] : [props2.value];
      }
      return props2.value.map(function(item) {
        return isObject_1(item) ? item[iKeys.value.label] : item;
      });
    });
    var tPlaceholder = vue.computed(function() {
      return !tags.value || !tags.value.length ? props2.placeholder : "";
    });
    var onTagInputChange = function onTagInputChange2(val, context2) {
      var _props$onTagChange;
      if (context2.trigger === "tag-remove") {
        var _context2$e;
        (_context2$e = context2.e) === null || _context2$e === void 0 || _context2$e.stopPropagation();
      }
      (_props$onTagChange = props2.onTagChange) === null || _props$onTagChange === void 0 || _props$onTagChange.call(props2, val, context2);
    };
    var onInputChange = function onInputChange2(val, ctx) {
      if (ctx.trigger === "enter" || ctx.trigger === "blur") return;
      setTInputValue(val, {
        trigger: ctx.trigger,
        e: ctx.e
      });
    };
    var onBlur = function onBlur2(val, ctx) {
      var _popupRef$value, _props$onBlur;
      var overlayState = (_popupRef$value = popupRef.value) === null || _popupRef$value === void 0 ? void 0 : _popupRef$value.getOverlayState();
      if (overlayState !== null && overlayState !== void 0 && overlayState.hover) return;
      isMultipleFocus.value = false;
      (_props$onBlur = props2.onBlur) === null || _props$onBlur === void 0 || _props$onBlur.call(props2, props2.value, _objectSpread$7(_objectSpread$7({}, ctx), {}, {
        tagInputValue: val
      }));
    };
    var onFocus = function onFocus2(val, ctx) {
      var _popupRef$value2, _props$onFocus;
      var overlayState = (_popupRef$value2 = popupRef.value) === null || _popupRef$value2 === void 0 ? void 0 : _popupRef$value2.getOverlayState();
      if (isMultipleFocus.value || overlayState !== null && overlayState !== void 0 && overlayState.hover) return;
      isMultipleFocus.value = true;
      var params = _objectSpread$7(_objectSpread$7({}, ctx), {}, {
        tagInputValue: val
      });
      (_props$onFocus = props2.onFocus) === null || _props$onFocus === void 0 || _props$onFocus.call(props2, props2.value, params);
    };
    var onEnter = function onEnter2(val, ctx) {
      var _props$onEnter;
      var params = _objectSpread$7(_objectSpread$7({}, ctx), {}, {
        tagInputValue: val
      });
      (_props$onEnter = props2.onEnter) === null || _props$onEnter === void 0 || _props$onEnter.call(props2, props2.value, params);
    };
    var renderSelectMultiple = function renderSelectMultiple2(p) {
      var tagInputProps = _objectSpread$7(_objectSpread$7({}, p.commonInputProps), {}, {
        tagProps: props2.tagProps,
        label: props2.label,
        autoWidth: props2.autoWidth,
        readonly: props2.readonly,
        placeholder: tPlaceholder.value,
        minCollapsedNum: props2.minCollapsedNum,
        collapsedItems: props2.collapsedItems,
        tag: props2.tag,
        value: tags.value,
        valueDisplay: props2.valueDisplay,
        inputValue: p.popupVisible && p.allowInput ? tInputValue.value : "",
        inputProps: _objectSpread$7({
          readonly: !props2.allowInput || props2.readonly,
          inputClass: _defineProperty$2({}, "".concat(classPrefix.value, "-input--focused"), p.popupVisible)
        }, props2.inputProps),
        suffixIcon: !disable.value && props2.loading ? function() {
          return vue.createVNode(Loading, {
            "loading": true,
            "size": "small"
          }, null);
        } : props2.suffixIcon
      }, props2.tagInputProps);
      var _context$slots = context.slots;
      _context$slots.tips;
      var slots = _objectWithoutProperties(_context$slots, _excluded$1);
      return vue.createVNode(TagInput, vue.mergeProps({
        "ref": tagInputRef
      }, tagInputProps, {
        "onInputChange": onInputChange,
        "onChange": onTagInputChange,
        "onClear": p.onInnerClear,
        "onBlur": onBlur,
        "onEnter": onEnter,
        "onFocus": onFocus
      }), slots);
    };
    return {
      tags,
      tPlaceholder,
      tagInputRef,
      isMultipleFocus,
      multipleInputValue: tInputValue,
      renderSelectMultiple
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$6(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$6(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$6(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$6(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var MAX_POPUP_WIDTH = 1e3;
  var RESERVE_WIDTH = 0;
  function useOverlayInnerStyle(props2) {
    var _toRefs = vue.toRefs(props2), popupProps2 = _toRefs.popupProps, autoWidth = _toRefs.autoWidth;
    var innerPopupVisible = vue.ref(false);
    var disable = useDisabled();
    var matchWidthFunc = function matchWidthFunc2(triggerElement, popupElement) {
      var SCROLLBAR_WIDTH = popupElement.scrollHeight > popupElement.offsetHeight ? RESERVE_WIDTH : 0;
      var width = popupElement.offsetWidth + SCROLLBAR_WIDTH >= triggerElement.offsetWidth ? popupElement.offsetWidth : triggerElement.offsetWidth;
      var otherOverlayInnerStyle = {};
      if (popupProps2.value && _typeof$1(popupProps2.value.overlayInnerStyle) === "object" && !popupProps2.value.overlayInnerStyle.width) {
        otherOverlayInnerStyle = popupProps2.value.overlayInnerStyle;
      }
      return _objectSpread$6({
        width: "".concat(Math.min(width, MAX_POPUP_WIDTH), "px")
      }, otherOverlayInnerStyle);
    };
    var onInnerPopupVisibleChange = function onInnerPopupVisibleChange2(visible, ctx) {
      if (disable.value || props2.readonly) return;
      var newVisible = ctx.trigger === "trigger-element-click" && props2.allowInput ? true : visible;
      if (props2.popupVisible !== newVisible) {
        var _props$onPopupVisible;
        innerPopupVisible.value = newVisible;
        (_props$onPopupVisible = props2.onPopupVisibleChange) === null || _props$onPopupVisible === void 0 || _props$onPopupVisible.call(props2, newVisible, ctx);
      }
    };
    var getAutoWidthPopupStyleWidth = function getAutoWidthPopupStyleWidth2(triggerElement, popupElement) {
      var _popupProps$value;
      return _objectSpread$6({
        width: "".concat(Math.max(triggerElement.offsetWidth, popupElement.offsetWidth), "px")
      }, (_popupProps$value = popupProps2.value) === null || _popupProps$value === void 0 ? void 0 : _popupProps$value.overlayInnerStyle);
    };
    var tOverlayInnerStyle = vue.computed(function() {
      var _popupProps$value2;
      var result = {};
      var overlayInnerStyle = ((_popupProps$value2 = popupProps2.value) === null || _popupProps$value2 === void 0 ? void 0 : _popupProps$value2.overlayInnerStyle) || {};
      if (isFunction_1(overlayInnerStyle) || isObject_1(overlayInnerStyle) && overlayInnerStyle.width) {
        result = overlayInnerStyle;
      } else {
        if (autoWidth.value) {
          result = getAutoWidthPopupStyleWidth;
        } else {
          result = matchWidthFunc;
        }
      }
      return result;
    });
    return {
      tOverlayInnerStyle,
      innerPopupVisible,
      onInnerPopupVisibleChange
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$5(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$5(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$5(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$5(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var useComponentClassName3 = function useComponentClassName4() {
    return {
      NAME_CLASS: usePrefixClass("select-input"),
      BASE_CLASS_BORDERLESS: usePrefixClass("select-input--borderless"),
      BASE_CLASS_MULTIPLE: usePrefixClass("select-input--multiple"),
      BASE_CLASS_POPUP_VISIBLE: usePrefixClass("select-input--popup-visible"),
      BASE_CLASS_EMPTY: usePrefixClass("select-input--empty")
    };
  };
  var _SelectInput = vue.defineComponent({
    name: "TSelectInput",
    props: _objectSpread$5(_objectSpread$5({}, props$9), {}, {
      valueDisplayOptions: {
        type: Object
      }
    }),
    setup: function setup17(props2, context) {
      var _useComponentClassNam = useComponentClassName3(), NAME_CLASS = _useComponentClassNam.NAME_CLASS, BASE_CLASS_BORDERLESS = _useComponentClassNam.BASE_CLASS_BORDERLESS, BASE_CLASS_MULTIPLE = _useComponentClassNam.BASE_CLASS_MULTIPLE, BASE_CLASS_POPUP_VISIBLE = _useComponentClassNam.BASE_CLASS_POPUP_VISIBLE, BASE_CLASS_EMPTY = _useComponentClassNam.BASE_CLASS_EMPTY;
      var classPrefix = usePrefixClass();
      var renderTNodeJSX3 = useTNodeJSX();
      var selectInputRef = vue.ref();
      var popupRef = vue.ref();
      var _toRefs = vue.toRefs(props2), multiple = _toRefs.multiple, value = _toRefs.value, popupVisible = _toRefs.popupVisible, borderless = _toRefs.borderless;
      var _useOverlayInnerStyle = useOverlayInnerStyle(props2), tOverlayInnerStyle = _useOverlayInnerStyle.tOverlayInnerStyle, innerPopupVisible = _useOverlayInnerStyle.innerPopupVisible, onInnerPopupVisibleChange = _useOverlayInnerStyle.onInnerPopupVisibleChange;
      var _useSingle = useSingle(props2, context, popupRef), isSingleFocus = _useSingle.isSingleFocus, commonInputProps = _useSingle.commonInputProps, onInnerClear = _useSingle.onInnerClear, renderSelectSingle = _useSingle.renderSelectSingle;
      var _useMultiple = useMultiple(props2, context, popupRef), isMultipleFocus = _useMultiple.isMultipleFocus, tagInputRef = _useMultiple.tagInputRef, renderSelectMultiple = _useMultiple.renderSelectMultiple;
      var isFocus = vue.computed(function() {
        return props2.multiple ? isMultipleFocus.value : isSingleFocus.value;
      });
      var classes = vue.computed(function() {
        var _popupVisible$value;
        return ["".concat(NAME_CLASS.value), _defineProperty$2(_defineProperty$2(_defineProperty$2(_defineProperty$2({}, BASE_CLASS_MULTIPLE.value, multiple.value), BASE_CLASS_BORDERLESS.value, borderless.value), BASE_CLASS_POPUP_VISIBLE.value, (_popupVisible$value = popupVisible.value) !== null && _popupVisible$value !== void 0 ? _popupVisible$value : innerPopupVisible.value), BASE_CLASS_EMPTY.value, value.value instanceof Array ? !value.value.length : !value.value)];
      });
      var addKeyboardEventListener = function addKeyboardEventListener2(e) {
        var _e$key;
        var code = e.code || ((_e$key = e.key) === null || _e$key === void 0 ? void 0 : _e$key.trim());
        if (/(ArrowDown|ArrowUp)/.test(code) && !popupVisible.value) {
          var _props2$onPopupVisibl;
          var ctx = _objectSpread$5(_objectSpread$5({}, context), {}, {
            trigger: "trigger-element-focus"
          });
          (_props2$onPopupVisibl = props2.onPopupVisibleChange) === null || _props2$onPopupVisibl === void 0 || _props2$onPopupVisibl.call(props2, true, ctx);
        }
      };
      vue.watch([isFocus], function(_ref2) {
        var _ref3 = _slicedToArray(_ref2, 1), isFocus2 = _ref3[0];
        if (popupVisible.value) return;
        if (isFocus2) {
          selectInputRef.value.addEventListener("keydown", addKeyboardEventListener);
        } else {
          selectInputRef.value.removeEventListener("keydown", addKeyboardEventListener);
        }
      });
      vue.onMounted(function() {
        if (!popupVisible.value && isFocus) {
          selectInputRef.value.addEventListener("keydown", addKeyboardEventListener);
        }
      });
      vue.onBeforeUnmount(function() {
        selectInputRef.value.removeEventListener("keydown", addKeyboardEventListener);
      });
      var onOverlayClick = function onOverlayClick2(ctx) {
        var _ctx$e, _tagInputRef$value;
        (_ctx$e = ctx.e) === null || _ctx$e === void 0 || _ctx$e.stopPropagation();
        if (ctx.e.target.tabIndex >= 0) return;
        if (props2.multiple) (_tagInputRef$value = tagInputRef.value) === null || _tagInputRef$value === void 0 || _tagInputRef$value.focus();
      };
      return {
        classPrefix,
        NAME_CLASS,
        innerPopupVisible,
        commonInputProps,
        tOverlayInnerStyle,
        selectInputRef,
        popupRef,
        classes,
        onInnerClear,
        renderTNodeJSX: renderTNodeJSX3,
        renderSelectSingle,
        renderSelectMultiple,
        onOverlayClick,
        onInnerPopupVisibleChange
      };
    },
    render: function render5() {
      var _this$popupVisible, _this$popupProps, _this = this;
      var visibleProps = {
        visible: (_this$popupVisible = this.popupVisible) !== null && _this$popupVisible !== void 0 ? _this$popupVisible : this.innerPopupVisible
      };
      var mainContent = vue.createVNode(Popup, vue.mergeProps({
        "ref": "popupRef",
        "trigger": ((_this$popupProps = this.popupProps) === null || _this$popupProps === void 0 ? void 0 : _this$popupProps.trigger) || "click",
        "placement": "bottom-left"
      }, visibleProps, {
        "content": this.panel,
        "hideEmptyPopup": true
      }, _objectSpread$5(_objectSpread$5({
        onVisibleChange: this.onInnerPopupVisibleChange,
        onOverlayClick: this.onOverlayClick
      }, this.popupProps), {}, {
        overlayInnerStyle: this.tOverlayInnerStyle
      })), _objectSpread$5({
        "default": function _default4() {
          return [_this.multiple ? _this.renderSelectMultiple({
            commonInputProps: _this.commonInputProps,
            onInnerClear: _this.onInnerClear,
            popupVisible: visibleProps.visible,
            allowInput: _this.allowInput
          }) : _this.renderSelectSingle(visibleProps.visible)];
        }
      }, _objectSpread$5(_objectSpread$5({}, this.$slots), {}, {
        content: this.$slots.panel
      })));
      var tipsNode = this.renderTNodeJSX("tips");
      var tipsClasses = ["".concat(this.classPrefix, "-input__tips"), "".concat(this.classPrefix, "-tips"), "".concat(this.classPrefix, "-is-").concat(this.status)];
      return vue.createVNode("div", {
        "ref": "selectInputRef",
        "class": this.classes
      }, [mainContent, tipsNode && vue.createVNode("div", {
        "class": tipsClasses
      }, [tipsNode])]);
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var SelectInput = withInstall(_SelectInput);
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props$4 = {
    checkAll: Boolean,
    content: {
      type: [String, Function]
    },
    "default": {
      type: [String, Function]
    },
    disabled: Boolean,
    label: {
      type: String,
      "default": ""
    },
    title: {
      type: String,
      "default": ""
    },
    value: {
      type: [String, Number]
    }
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props$3 = {
    checkAll: Boolean,
    checked: {
      type: Boolean,
      "default": void 0
    },
    modelValue: {
      type: Boolean,
      "default": void 0
    },
    defaultChecked: Boolean,
    "default": {
      type: [String, Function]
    },
    disabled: {
      type: Boolean,
      "default": void 0
    },
    readonly: {
      type: Boolean,
      "default": void 0
    },
    indeterminate: Boolean,
    label: {
      type: [String, Function]
    },
    lazyLoad: Boolean,
    name: {
      type: String,
      "default": ""
    },
    value: {
      type: [String, Number, Boolean]
    },
    onChange: Function
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var CheckboxGroupInjectionKey = Symbol("CheckboxGroupProvide");
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function observe(element2, root2, callback, marginBottom) {
    if (typeof window === "undefined") return null;
    if (!window || !window.IntersectionObserver) {
      callback();
      return null;
    }
    var io = null;
    try {
      io = new window.IntersectionObserver(function(entries) {
        var entry = entries[0];
        if (entry.isIntersecting) {
          callback();
          io.unobserve(element2);
        }
      }, {
        rootMargin: "0px 0px ".concat(marginBottom, "px 0px"),
        root: root2
      });
      io.observe(element2);
    } catch (e) {
      console.error(e);
      callback();
    }
    return io;
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useCheckboxLazyLoad(labelRef, lazyLoad) {
    var ioObserver = vue.ref();
    var showCheckbox = vue.ref(true);
    var handleLazyLoad = function handleLazyLoad2() {
      if (!lazyLoad.value) return;
      showCheckbox.value = false;
      var io = observe(labelRef.value, null, function() {
        showCheckbox.value = true;
      }, 0);
      ioObserver.value = io;
    };
    vue.onMounted(handleLazyLoad);
    vue.watch([lazyLoad, labelRef], handleLazyLoad);
    vue.onBeforeUnmount(function() {
      if (!lazyLoad.value) return;
      ioObserver.value.unobserve(labelRef.value);
    });
    return {
      showCheckbox
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useKeyboardEvent(handleChange) {
    var keyboardEventListener = function keyboardEventListener2(e) {
      var isCheckedCode = CHECKED_CODE_REG.test(e.key) || CHECKED_CODE_REG.test(e.code);
      if (isCheckedCode) {
        e.preventDefault();
        var _e$currentTarget$quer = e.currentTarget.querySelector("input"), disabled = _e$currentTarget$quer.disabled;
        !disabled && handleChange(e);
      }
    };
    var onCheckboxFocus = function onCheckboxFocus2(e) {
      e.currentTarget.addEventListener("keydown", keyboardEventListener);
    };
    var onCheckboxBlur = function onCheckboxBlur2(e) {
      e.currentTarget.removeEventListener("keydown", keyboardEventListener);
    };
    return {
      onCheckboxFocus,
      onCheckboxBlur
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$4(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$4(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$4(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$4(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var _Checkbox = vue.defineComponent({
    name: "TCheckbox",
    props: _objectSpread$4(_objectSpread$4({}, props$3), {}, {
      needRipple: Boolean,
      stopLabelTrigger: Boolean,
      index: Number,
      data: Object
    }),
    setup: function setup18(props2) {
      var labelRef = vue.ref();
      if (props2.needRipple) {
        useRipple(labelRef);
      }
      var _useCommonClassName = useCommonClassName$2(), STATUS = _useCommonClassName.STATUS;
      var _toRefs = vue.toRefs(props2), checked = _toRefs.checked, modelValue = _toRefs.modelValue, lazyLoad = _toRefs.lazyLoad;
      var _useVModel = useVModel(checked, modelValue, props2.defaultChecked, props2.onChange, "checked"), _useVModel2 = _slicedToArray(_useVModel, 2), innerChecked = _useVModel2[0], setInnerChecked = _useVModel2[1];
      var checkboxGroupData = vue.inject(CheckboxGroupInjectionKey, void 0);
      var tName = vue.ref();
      vue.watch(function() {
        return [props2.name, checkboxGroupData === null || checkboxGroupData === void 0 ? void 0 : checkboxGroupData.value.name].join("_");
      }, function() {
        var name = props2.name || (checkboxGroupData === null || checkboxGroupData === void 0 ? void 0 : checkboxGroupData.value.name);
        if (name) {
          tName.value = name;
        }
      }, {
        immediate: true
      });
      var tChecked = vue.ref(false);
      var getChecked = function getChecked2() {
        var value = props2.value, checkAll = props2.checkAll;
        if (checkAll) return checkboxGroupData === null || checkboxGroupData === void 0 ? void 0 : checkboxGroupData.value.isCheckAll;
        return checkboxGroupData !== null && checkboxGroupData !== void 0 && checkboxGroupData.value ? checkboxGroupData.value.checkedValues.includes(value) : innerChecked.value;
      };
      vue.watch(function() {
        var _checkboxGroupData$va;
        return [innerChecked.value, checkboxGroupData === null || checkboxGroupData === void 0 ? void 0 : checkboxGroupData.value.isCheckAll, checkboxGroupData === null || checkboxGroupData === void 0 || (_checkboxGroupData$va = checkboxGroupData.value.checkedValues) === null || _checkboxGroupData$va === void 0 ? void 0 : _checkboxGroupData$va.join(",")];
      }, function() {
        tChecked.value = getChecked();
      }, {
        immediate: true
      });
      var beforeDisabled = vue.computed(function() {
        if (!props2.checkAll && !tChecked.value && checkboxGroupData !== null && checkboxGroupData !== void 0 && checkboxGroupData.value.maxExceeded) {
          return true;
        }
        return null;
      });
      var afterDisabled = vue.computed(function() {
        return checkboxGroupData === null || checkboxGroupData === void 0 ? void 0 : checkboxGroupData.value.disabled;
      });
      var isDisabled = useDisabled({
        beforeDisabled,
        afterDisabled
      });
      var afterReadonly = vue.computed(function() {
        return checkboxGroupData === null || checkboxGroupData === void 0 ? void 0 : checkboxGroupData.value.readonly;
      });
      var isReadonly = useReadonly({
        afterReadonly
      });
      var tIndeterminate = vue.ref(false);
      vue.watch(function() {
        return [props2.checkAll, props2.indeterminate, checkboxGroupData === null || checkboxGroupData === void 0 ? void 0 : checkboxGroupData.value.indeterminate];
      }, function() {
        tIndeterminate.value = props2.checkAll ? checkboxGroupData === null || checkboxGroupData === void 0 ? void 0 : checkboxGroupData.value.indeterminate : props2.indeterminate;
      }, {
        immediate: true
      });
      var COMPONENT_NAME = usePrefixClass("checkbox");
      var labelClasses = vue.ref({});
      vue.watch([tChecked, isDisabled, tIndeterminate], function() {
        labelClasses.value = ["".concat(COMPONENT_NAME.value), _defineProperty$2(_defineProperty$2(_defineProperty$2({}, STATUS.value.checked, tChecked.value), STATUS.value.disabled, isDisabled.value), STATUS.value.indeterminate, tIndeterminate.value)];
      }, {
        immediate: true
      });
      var handleChange = function handleChange2(e) {
        if (isReadonly.value) return;
        var checked2 = !tChecked.value;
        setInnerChecked(checked2, {
          e
        });
        if (checkboxGroupData !== null && checkboxGroupData !== void 0 && checkboxGroupData.value.handleCheckboxChange) {
          checkboxGroupData.value.onCheckedChange({
            checked: checked2,
            checkAll: props2.checkAll,
            e,
            option: props2
          });
        }
      };
      var renderContent3 = useContent();
      var handleLabelClick = function handleLabelClick2(e) {
        if (props2.stopLabelTrigger) e.preventDefault();
      };
      var _useCheckboxLazyLoad = useCheckboxLazyLoad(labelRef, lazyLoad), showCheckbox = _useCheckboxLazyLoad.showCheckbox;
      var _useKeyboardEvent = useKeyboardEvent(handleChange), onCheckboxFocus = _useKeyboardEvent.onCheckboxFocus, onCheckboxBlur = _useKeyboardEvent.onCheckboxBlur;
      return function() {
        return vue.createVNode("label", {
          "ref": labelRef,
          "class": labelClasses.value,
          "tabindex": isDisabled.value ? void 0 : "0",
          "onFocus": onCheckboxFocus,
          "onBlur": onCheckboxBlur
        }, [!showCheckbox.value ? null : [vue.createVNode("input", {
          "type": "checkbox",
          "tabindex": "-1",
          "class": "".concat(COMPONENT_NAME.value, "__former"),
          "disabled": isDisabled.value,
          "readonly": isReadonly.value,
          "indeterminate": tIndeterminate.value,
          "name": tName.value,
          "value": props2.value ? props2.value : void 0,
          "checked": tChecked.value,
          "onChange": handleChange,
          "key": "input"
        }, null), vue.createVNode("span", {
          "class": "".concat(COMPONENT_NAME.value, "__input"),
          "key": "input-span"
        }, null), vue.createVNode("span", {
          "class": "".concat(COMPONENT_NAME.value, "__label"),
          "key": "label",
          "onClick": handleLabelClick
        }, [renderContent3("default", "label")])]]);
      };
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props$2 = {
    disabled: {
      type: Boolean,
      "default": void 0
    },
    readonly: {
      type: Boolean,
      "default": void 0
    },
    lazyLoad: Boolean,
    max: {
      type: Number,
      "default": void 0
    },
    name: {
      type: String,
      "default": ""
    },
    options: {
      type: Array
    },
    value: {
      type: Array,
      "default": void 0
    },
    modelValue: {
      type: Array,
      "default": void 0
    },
    defaultValue: {
      type: Array,
      "default": function _default3() {
        return [];
      }
    },
    onChange: Function
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var _Group = vue.defineComponent({
    name: "TCheckboxGroup",
    props: props$2,
    setup: function setup19(props2) {
      var COMPONENT_NAME = usePrefixClass("checkbox-group");
      var renderTNodeJSX3 = useTNodeJSX();
      var isArray2 = Array.isArray;
      var _toRefs = vue.toRefs(props2), value = _toRefs.value, modelValue = _toRefs.modelValue;
      var _useVModel = useVModel(value, modelValue, props2.defaultValue, props2.onChange), _useVModel2 = _slicedToArray(_useVModel, 2), innerValue = _useVModel2[0], setInnerValue = _useVModel2[1];
      var optionList = vue.ref([]);
      var intersectionLen = vue.computed(function() {
        if (!isArray2(innerValue.value)) return 0;
        var values = optionList.value.map(function(item) {
          return item.value;
        });
        var n = intersection_1(innerValue.value, values);
        return n.length;
      });
      var isCheckAll = vue.computed(function() {
        var optionItems = optionList.value.filter(function(item) {
          return !item.disabled && !item.readonly && !item.checkAll;
        }).map(function(t) {
          return t.value;
        });
        var intersectionValues = intersection_1(optionItems, innerValue.value);
        return intersectionValues.length === optionItems.length;
      });
      var indeterminate = vue.computed(function() {
        return !isCheckAll.value && intersectionLen.value < optionList.value.length && intersectionLen.value !== 0;
      });
      var maxExceeded = vue.computed(function() {
        return !isUndefined_1(props2.max) && innerValue.value.length === props2.max;
      });
      vue.watchEffect(function() {
        if (!props2.options) return [];
        optionList.value = props2.options.map(function(item) {
          return isObject_1(item) ? item : {
            label: String(item),
            value: item
          };
        });
      });
      var getAllCheckboxValue = function getAllCheckboxValue2() {
        var val = /* @__PURE__ */ new Set();
        for (var i = 0, len = optionList.value.length; i < len; i++) {
          var item = optionList.value[i];
          if (item.checkAll) continue;
          if (item.disabled) continue;
          if (item.readonly) continue;
          val.add(item.value);
          if (maxExceeded.value) break;
        }
        return _toConsumableArray(val);
      };
      var onCheckAllChange = function onCheckAllChange2(checked, context) {
        var value2 = checked ? getAllCheckboxValue() : [];
        setInnerValue(value2, {
          e: context.e,
          type: checked ? "check" : "uncheck",
          current: void 0,
          option: void 0
        });
      };
      var handleCheckboxChange = function handleCheckboxChange2(data) {
        var currentValue = data.option.value;
        if (!isArray2(innerValue.value)) {
          console.warn("TDesign CheckboxGroup Warn: `value` must be an array, instead of ".concat(_typeof$1(innerValue.value)));
          return;
        }
        var val = _toConsumableArray(innerValue.value);
        if (data.checked) {
          val.push(currentValue);
        } else {
          var i = val.indexOf(currentValue);
          val.splice(i, 1);
        }
        setInnerValue(val, {
          e: data.e,
          current: data.option.value,
          option: data.option,
          type: data.checked ? "check" : "uncheck"
        });
      };
      var onCheckedChange = function onCheckedChange2(p) {
        var checked = p.checked, checkAll = p.checkAll, e = p.e;
        if (checkAll) {
          onCheckAllChange(checked, {
            e
          });
        } else {
          handleCheckboxChange(p);
        }
      };
      var getChildComponentSlots = useChildComponentSlots();
      var getOptionListBySlots = function getOptionListBySlots2() {
        var nodes = getChildComponentSlots("Checkbox");
        var arr = [];
        nodes === null || nodes === void 0 || nodes.forEach(function(node) {
          var option = node.props;
          if (!option) return;
          if (option["check-all"] === "" || option["check-all"] === true) {
            option.checkAll = true;
          }
          arr.push(option);
        });
        return arr;
      };
      vue.provide(CheckboxGroupInjectionKey, vue.computed(function() {
        return {
          name: props2.name,
          isCheckAll: isCheckAll.value,
          checkedValues: innerValue.value || [],
          maxExceeded: maxExceeded.value,
          disabled: props2.disabled,
          readonly: props2.readonly,
          indeterminate: indeterminate.value,
          handleCheckboxChange,
          onCheckedChange
        };
      }));
      return function() {
        var _props2$options;
        var children = null;
        if ((_props2$options = props2.options) !== null && _props2$options !== void 0 && _props2$options.length) {
          var _optionList$value;
          children = (_optionList$value = optionList.value) === null || _optionList$value === void 0 ? void 0 : _optionList$value.map(function(option, index) {
            var _innerValue$value;
            return vue.createVNode(_Checkbox, vue.mergeProps({
              "key": "".concat(option.value || "").concat(index),
              "lazyLoad": props2.lazyLoad
            }, option, {
              "index": index,
              "checked": (_innerValue$value = innerValue.value) === null || _innerValue$value === void 0 ? void 0 : _innerValue$value.includes(option.value),
              "data": option
            }), null);
          });
        } else {
          var nodes = renderTNodeJSX3("default");
          optionList.value = getOptionListBySlots();
          children = nodes;
        }
        return vue.createVNode("div", {
          "class": COMPONENT_NAME.value,
          "role": "group",
          "aria-label": "checkbox-group"
        }, [children]);
      };
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var Checkbox = withInstall(_Checkbox);
  withInstall(_Group);
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function _createForOfIteratorHelper$2(r, e) {
    var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (!t) {
      if (Array.isArray(r) || (t = _unsupportedIterableToArray$2(r)) || e) {
        t && (r = t);
        var _n = 0, F = function F2() {
        };
        return { s: F, n: function n() {
          return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
        }, e: function e2(r2) {
          throw r2;
        }, f: F };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var o, a = true, u = false;
    return { s: function s() {
      t = t.call(r);
    }, n: function n() {
      var r2 = t.next();
      return a = r2.done, r2;
    }, e: function e2(r2) {
      u = true, o = r2;
    }, f: function f() {
      try {
        a || null == t["return"] || t["return"]();
      } finally {
        if (u) throw o;
      }
    } };
  }
  function _unsupportedIterableToArray$2(r, a) {
    if (r) {
      if ("string" == typeof r) return _arrayLikeToArray$2(r, a);
      var t = {}.toString.call(r).slice(8, -1);
      return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray$2(r, a) : void 0;
    }
  }
  function _arrayLikeToArray$2(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
    return n;
  }
  var selectInjectKey = Symbol("selectProvide");
  var getSingleContent = function getSingleContent2(value, optionsMap) {
    var option = optionsMap.value.get(value);
    return (option === null || option === void 0 ? void 0 : option.label) || (value === null || value === void 0 ? void 0 : value.toString());
  };
  var getMultipleContent = function getMultipleContent2(value, optionsMap) {
    var res = [];
    var _iterator = _createForOfIteratorHelper$2(value), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var iterator = _step.value;
        var resLabel = getSingleContent(iterator, optionsMap);
        if (resLabel) {
          res.push(resLabel);
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return res;
  };
  var getNewMultipleValue = function getNewMultipleValue2(innerValue, optionValue) {
    var value = cloneDeep_1(innerValue);
    var valueIndex = value.indexOf(optionValue);
    if (valueIndex < 0) {
      value.push(optionValue);
    } else {
      value.splice(valueIndex, 1);
    }
    return {
      value,
      isCheck: valueIndex < 0
    };
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$3(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$3(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$3(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$3(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  function _isSlot$1(s) {
    return typeof s === "function" || Object.prototype.toString.call(s) === "[object Object]" && !vue.isVNode(s);
  }
  var _Option = vue.defineComponent({
    name: "TOption",
    props: _objectSpread$3(_objectSpread$3({}, props$4), {}, {
      createAble: Boolean,
      multiple: Boolean,
      index: Number,
      rowIndex: Number,
      trs: Map,
      scrollType: String,
      isVirtual: Boolean,
      bufferSize: Number,
      checkAll: Boolean
    }),
    emits: ["row-mounted"],
    setup: function setup20(props2, context) {
      var selectProvider = vue.inject(selectInjectKey);
      var formDisabled = useDisabled();
      var isReachMax = vue.computed(function() {
        return selectProvider.value.max !== 0 && selectProvider.value.max <= selectProvider.value.selectValue.length;
      });
      var disabled = vue.computed(function() {
        return formDisabled.value || props2.multiple && isReachMax.value && !isSelected.value && !selectProvider.value.isCheckAll;
      });
      var renderContent3 = useContent();
      var selectName = usePrefixClass("select");
      var _useCommonClassName = useCommonClassName$2(), STATUS = _useCommonClassName.STATUS, SIZE = _useCommonClassName.SIZE;
      var liRef = vue.ref();
      var isHover = vue.ref(false);
      var isSelected = vue.computed(function() {
        if (selectProvider.value.isCheckAll && !props2.disabled) return true;
        return !props2.multiple ? selectProvider.value.selectValue === props2.value : selectProvider.value.selectValue.includes(props2.value);
      });
      var isIndeterminate = vue.computed(function() {
        if (!props2.checkAll) return false;
        return selectProvider.value.indeterminate;
      });
      var classes = vue.computed(function() {
        return ["".concat(selectName.value, "-option"), [SIZE.value[selectProvider.value.size]], _defineProperty$2(_defineProperty$2(_defineProperty$2({}, STATUS.value.disabled, disabled.value), STATUS.value.selected, isSelected.value), "".concat(selectName.value, "-option__hover"), (isHover.value || selectProvider.value.hoverIndex === props2.index) && !disabled.value)];
      });
      var labelText = vue.computed(function() {
        return props2.label || props2.value;
      });
      var handleClick = function handleClick2(e) {
        if (props2.disabled || disabled.value) return;
        if (props2.multiple) {
          handleCheckboxClick(!isSelected.value, {
            e
          });
          e.preventDefault();
          return;
        }
        if (props2.createAble) {
          var _selectProvider$value, _selectProvider$value2;
          (_selectProvider$value = (_selectProvider$value2 = selectProvider.value).handleCreate) === null || _selectProvider$value === void 0 || _selectProvider$value.call(_selectProvider$value2, props2.value);
          if (selectProvider.value.multiple) {
            selectProvider.value.handleValueChange([].concat(_toConsumableArray(selectProvider.value.selectValue), [props2.value]), {
              selectedOptions: selectProvider.value.getSelectedOptions(),
              trigger: "check",
              e
            });
            return;
          }
        }
        var selectedOptions = selectProvider.value.getSelectedOptions(props2.value);
        selectProvider.value.handleValueChange(props2.value, {
          option: selectedOptions === null || selectedOptions === void 0 ? void 0 : selectedOptions[0],
          selectedOptions,
          trigger: "check",
          e
        });
        selectProvider.value.handlePopupVisibleChange(false, {
          e
        });
      };
      var handleCheckboxClick = function handleCheckboxClick2(val, context2) {
        if (props2.checkAll) {
          selectProvider.value.onCheckAllChange(val);
          return;
        }
        var newValue = getNewMultipleValue(selectProvider.value.selectValue, props2.value);
        var selectedOptions = selectProvider.value.getSelectedOptions(newValue.value);
        selectProvider.value.handleValueChange(newValue.value, {
          option: selectedOptions.find(function(v) {
            return v.value === props2.value;
          }),
          selectedOptions,
          trigger: val ? "check" : "uncheck",
          e: context2.e
        });
        if (!selectProvider.value.reserveKeyword) {
          selectProvider.value.handlerInputChange("");
        }
      };
      vue.onMounted(function() {
        var trs = props2.trs, rowIndex = props2.rowIndex, isVirtual = props2.isVirtual;
        if (isVirtual) {
          trs.set(rowIndex, liRef.value);
          context.emit("row-mounted");
        }
      });
      vue.onBeforeUnmount(function() {
        if (props2.isVirtual) {
          var trs = props2.trs, rowIndex = props2.rowIndex;
          trs["delete"](rowIndex);
        }
      });
      useRipple(liRef);
      return function() {
        var optionChild = renderContent3("default", "content") || labelText.value;
        return vue.createVNode("li", {
          "ref": liRef,
          "class": classes.value,
          "title": props2.title || "".concat(labelText.value),
          "onMouseenter": function onMouseenter() {
            return isHover.value = true;
          },
          "onMouseleave": function onMouseleave() {
            return isHover.value = false;
          },
          "onClick": handleClick
        }, [selectProvider && props2.multiple ? vue.createVNode(Checkbox, {
          "checked": isSelected.value,
          "disabled": disabled.value,
          "onChange": handleCheckboxClick,
          "indeterminate": isIndeterminate.value
        }, _isSlot$1(optionChild) ? optionChild : {
          "default": function _default4() {
            return [optionChild];
          }
        }) : vue.createVNode("span", null, [optionChild])]);
      };
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props$1 = {
    divider: {
      type: Boolean,
      "default": true
    },
    label: {
      type: String,
      "default": ""
    }
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function ownKeys$2(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$2(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$2(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$2(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var _OptionGroup = vue.defineComponent({
    name: "TOptionGroup",
    props: _objectSpread$2({}, props$1),
    setup: function setup21(props2) {
      var selectProvider = vue.inject(selectInjectKey);
      var COMPONENT_NAME = usePrefixClass("select-option-group");
      var _useCommonClassName = useCommonClassName$2(), SIZE = _useCommonClassName.SIZE;
      var renderTNodeJSX3 = useTNodeJSX();
      var classes = vue.computed(function() {
        return [COMPONENT_NAME.value, SIZE.value[selectProvider.value.size], _defineProperty$2({}, "".concat(COMPONENT_NAME.value, "__divider"), props2.divider)];
      });
      return function() {
        return vue.createVNode("li", {
          "class": classes.value
        }, [vue.createVNode("div", {
          "class": "".concat(COMPONENT_NAME.value, "__header")
        }, [props2.label]), renderTNodeJSX3("default")]);
      };
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var props = {
    autoWidth: Boolean,
    autofocus: Boolean,
    borderless: Boolean,
    clearable: Boolean,
    collapsedItems: {
      type: Function
    },
    creatable: Boolean,
    disabled: {
      type: Boolean,
      "default": void 0
    },
    empty: {
      type: [String, Function]
    },
    filter: {
      type: Function
    },
    filterable: Boolean,
    inputProps: {
      type: Object
    },
    inputValue: {
      type: [String, Number],
      "default": void 0
    },
    defaultInputValue: {
      type: [String, Number]
    },
    keys: {
      type: Object
    },
    label: {
      type: [String, Function]
    },
    loading: Boolean,
    loadingText: {
      type: [String, Function]
    },
    max: {
      type: Number,
      "default": 0
    },
    minCollapsedNum: {
      type: Number,
      "default": 0
    },
    multiple: Boolean,
    options: {
      type: Array
    },
    panelBottomContent: {
      type: [String, Function]
    },
    panelTopContent: {
      type: [String, Function]
    },
    placeholder: {
      type: String,
      "default": void 0
    },
    popupProps: {
      type: Object
    },
    popupVisible: {
      type: Boolean,
      "default": void 0
    },
    defaultPopupVisible: Boolean,
    prefixIcon: {
      type: Function
    },
    readonly: Boolean,
    reserveKeyword: Boolean,
    scroll: {
      type: Object
    },
    selectInputProps: {
      type: Object
    },
    showArrow: {
      type: Boolean,
      "default": true
    },
    size: {
      type: String,
      "default": "medium",
      validator: function validator28(val) {
        if (!val) return true;
        return ["small", "medium", "large"].includes(val);
      }
    },
    status: {
      type: String,
      "default": "default",
      validator: function validator29(val) {
        if (!val) return true;
        return ["default", "success", "warning", "error"].includes(val);
      }
    },
    suffix: {
      type: [String, Function]
    },
    suffixIcon: {
      type: Function
    },
    tagInputProps: {
      type: Object
    },
    tagProps: {
      type: Object
    },
    tips: {
      type: [String, Function]
    },
    value: {
      type: [String, Number, Boolean, Object, Array],
      "default": void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Object, Array],
      "default": void 0
    },
    defaultValue: {
      type: [String, Number, Boolean, Object, Array],
      "default": void 0
    },
    valueDisplay: {
      type: [String, Function]
    },
    valueType: {
      type: String,
      "default": "value",
      validator: function validator30(val) {
        if (!val) return true;
        return ["value", "object"].includes(val);
      }
    },
    onBlur: Function,
    onChange: Function,
    onClear: Function,
    onCreate: Function,
    onEnter: Function,
    onFocus: Function,
    onInputChange: Function,
    onPopupVisibleChange: Function,
    onRemove: Function,
    onSearch: Function
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var usePanelVirtualScroll = function usePanelVirtualScroll2(props2) {
    var _props$scroll3, _props$scroll4, _props$scroll5, _props$scroll6, _props$scroll7;
    var isVirtual = vue.computed(function() {
      var _props$scroll, _props$options$value, _props$scroll2;
      return ((_props$scroll = props2.scroll) === null || _props$scroll === void 0 ? void 0 : _props$scroll.type) === "virtual" && ((_props$options$value = props2.options.value) === null || _props$options$value === void 0 ? void 0 : _props$options$value.length) > (((_props$scroll2 = props2.scroll) === null || _props$scroll2 === void 0 ? void 0 : _props$scroll2.threshold) || 100);
    });
    var _ref = ((_props$scroll3 = props2.scroll) === null || _props$scroll3 === void 0 ? void 0 : _props$scroll3.type) === "virtual" ? useVirtualScroll({
      container: props2.popupContentRef,
      data: props2.options,
      fixedHeight: ((_props$scroll4 = props2.scroll) === null || _props$scroll4 === void 0 ? void 0 : _props$scroll4.isFixedRowHeight) || false,
      lineHeight: ((_props$scroll5 = props2.scroll) === null || _props$scroll5 === void 0 ? void 0 : _props$scroll5.rowHeight) || 28,
      bufferSize: ((_props$scroll6 = props2.scroll) === null || _props$scroll6 === void 0 ? void 0 : _props$scroll6.bufferSize) || 20,
      threshold: ((_props$scroll7 = props2.scroll) === null || _props$scroll7 === void 0 ? void 0 : _props$scroll7.threshold) || 100
    }) : {}, _ref$trs = _ref.trs, trs = _ref$trs === void 0 ? null : _ref$trs, _ref$visibleData = _ref.visibleData, visibleData = _ref$visibleData === void 0 ? null : _ref$visibleData, _ref$handleScroll = _ref.handleScroll, handleVirtualScroll = _ref$handleScroll === void 0 ? null : _ref$handleScroll, _ref$scrollHeight = _ref.scrollHeight, scrollHeight = _ref$scrollHeight === void 0 ? null : _ref$scrollHeight, _ref$translateY = _ref.translateY, translateY = _ref$translateY === void 0 ? null : _ref$translateY, _ref$handleRowMounted = _ref.handleRowMounted, handleRowMounted = _ref$handleRowMounted === void 0 ? null : _ref$handleRowMounted;
    var lastScrollY = -1;
    var onInnerVirtualScroll = function onInnerVirtualScroll2(e) {
      if (!isVirtual.value) {
        return;
      }
      var target = e.target;
      var top2 = target.scrollTop;
      if (Math.abs(lastScrollY - top2) > 5) {
        handleVirtualScroll();
        lastScrollY = top2;
      } else {
        lastScrollY = -1;
      }
    };
    vue.onMounted(function() {
      var _props$popupContentRe;
      (_props$popupContentRe = props2.popupContentRef.value) === null || _props$popupContentRe === void 0 || _props$popupContentRe.addEventListener("scroll", onInnerVirtualScroll);
    });
    vue.onBeforeUnmount(function() {
      var _props$popupContentRe2;
      (_props$popupContentRe2 = props2.popupContentRef.value) === null || _props$popupContentRe2 === void 0 || _props$popupContentRe2.removeEventListener("scroll", onInnerVirtualScroll);
    });
    var cursorStyle = vue.computed(function() {
      return {
        position: "absolute",
        width: "1px",
        height: "1px",
        transition: "transform 0.2s",
        transform: "translate(0, ".concat(scrollHeight.value, "px)"),
        "-ms-transform": "translate(0, ".concat(scrollHeight.value, "px)"),
        "-moz-transform": "translate(0, ".concat(scrollHeight.value, "px)"),
        "-webkit-transform": "translate(0, ".concat(scrollHeight.value, "px)")
      };
    });
    var panelStyle = vue.computed(function() {
      return {
        transform: "translate(0, ".concat(translateY.value, "px)"),
        "-ms-transform": "translate(0, ".concat(translateY.value, "px)"),
        "-moz-transform": "translate(0, ".concat(translateY.value, "px)"),
        "-webkit-transform": "translate(0, ".concat(translateY.value, "px)")
      };
    });
    return {
      trs,
      scrollHeight,
      translateY,
      visibleData,
      handleRowMounted,
      isVirtual,
      cursorStyle,
      panelStyle
    };
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function _isSlot(s) {
    return typeof s === "function" || Object.prototype.toString.call(s) === "[object Object]" && !vue.isVNode(s);
  }
  var SelectPanel = vue.defineComponent({
    name: "TSelectPanel",
    props: {
      inputValue: props.inputValue,
      panelTopContent: props.panelTopContent,
      panelBottomContent: props.panelBottomContent,
      empty: props.empty,
      creatable: props.creatable,
      loading: props.loading,
      loadingText: props.loadingText,
      multiple: props.multiple,
      filterable: props.filterable,
      filter: props.filter,
      scroll: props.scroll,
      size: props.size
    },
    setup: function setup22(props2, _ref) {
      var expose = _ref.expose;
      var COMPONENT_NAME = usePrefixClass("select");
      var renderTNodeJSX3 = useTNodeJSX();
      var renderDefaultTNode = useTNodeDefault();
      var _useConfig = useConfig("select"), t = _useConfig.t, globalConfig = _useConfig.globalConfig;
      var tSelect = vue.inject(selectInjectKey);
      var innerRef = vue.ref(null);
      var popupContentRef = vue.computed(function() {
        return tSelect.value.popupContentRef.value;
      });
      var showCreateOption = vue.computed(function() {
        return props2.creatable && props2.filterable && props2.inputValue;
      });
      var displayOptions = vue.computed(function() {
        return tSelect.value.displayOptions;
      });
      var _usePanelVirtualScrol = usePanelVirtualScroll({
        scroll: props2.scroll,
        popupContentRef,
        options: displayOptions
      }), trs = _usePanelVirtualScrol.trs, visibleData = _usePanelVirtualScrol.visibleData, handleRowMounted = _usePanelVirtualScrol.handleRowMounted, isVirtual = _usePanelVirtualScrol.isVirtual, panelStyle = _usePanelVirtualScrol.panelStyle, cursorStyle = _usePanelVirtualScrol.cursorStyle;
      var isEmpty2 = vue.computed(function() {
        return !displayOptions.value.length;
      });
      var renderCreateOption = function renderCreateOption2() {
        return vue.createVNode("ul", {
          "class": ["".concat(COMPONENT_NAME.value, "__create-option"), "".concat(COMPONENT_NAME.value, "__list")]
        }, [vue.createVNode(_Option, {
          "value": props2.inputValue,
          "label": "".concat(props2.inputValue),
          "createAble": true,
          "class": "".concat(COMPONENT_NAME.value, "__create-option--special")
        }, null)]);
      };
      var renderOptionsContent = function renderOptionsContent2(options) {
        return vue.createVNode("ul", {
          "class": "".concat(COMPONENT_NAME.value, "__list")
        }, [options.map(function(item, index) {
          var _props$scroll, _props$scroll2;
          if (item.group) {
            var _slot;
            return vue.createVNode(_OptionGroup, {
              "label": item.group,
              "divider": item.divider
            }, _isSlot(_slot = renderOptionsContent2(item.children)) ? _slot : {
              "default": function _default4() {
                return [_slot];
              }
            });
          }
          return vue.createVNode(_Option, vue.mergeProps(omit_1(item, "index", "$index", "className", "tagName"), isVirtual.value ? {
            rowIndex: item.$index,
            trs,
            scrollType: (_props$scroll = props2.scroll) === null || _props$scroll === void 0 ? void 0 : _props$scroll.type,
            isVirtual: isVirtual.value,
            bufferSize: (_props$scroll2 = props2.scroll) === null || _props$scroll2 === void 0 ? void 0 : _props$scroll2.bufferSize,
            key: "".concat(item.$index || "", "_").concat(index)
          } : {
            key: "".concat(index, "_").concat(item.value)
          }, {
            "index": index,
            "multiple": props2.multiple,
            "onRowMounted": handleRowMounted
          }), item.slots);
        })]);
      };
      var dropdownInnerSize = vue.computed(function() {
        return {
          small: "s",
          medium: "m",
          large: "l"
        }[tSelect.value.size];
      });
      expose({
        innerRef,
        visibleData,
        isVirtual,
        displayOptions
      });
      var renderPanel = function renderPanel2(options, extraStyle) {
        return vue.createVNode("div", {
          "ref": innerRef,
          "class": ["".concat(COMPONENT_NAME.value, "__dropdown-inner"), "".concat(COMPONENT_NAME.value, "__dropdown-inner--size-").concat(dropdownInnerSize.value)],
          "style": extraStyle
        }, [showCreateOption.value && renderCreateOption(), props2.loading && renderDefaultTNode("loadingText", {
          defaultNode: vue.createVNode("div", {
            "class": "".concat(COMPONENT_NAME.value, "__loading-tips")
          }, [t(globalConfig.value.loadingText)])
        }), !props2.loading && isEmpty2.value && !showCreateOption.value && renderDefaultTNode("empty", {
          defaultNode: vue.createVNode("div", {
            "class": "".concat(COMPONENT_NAME.value, "__empty")
          }, [t(globalConfig.value.empty)])
        }), !isEmpty2.value && !props2.loading && renderOptionsContent(options)]);
      };
      return {
        renderPanel,
        panelStyle,
        cursorStyle,
        isVirtual,
        displayOptions,
        visibleData,
        renderTNodeJSX: renderTNodeJSX3
      };
    },
    render: function render6() {
      return this.isVirtual ? vue.createVNode(vue.Fragment, null, [this.renderTNodeJSX("panelTopContent"), vue.createVNode("div", null, [vue.createVNode("div", {
        "style": this.cursorStyle
      }, null), this.renderPanel(this.visibleData, this.panelStyle)]), this.renderTNodeJSX("panelBottomContent")]) : vue.createVNode(vue.Fragment, null, [this.renderTNodeJSX("panelTopContent"), this.renderPanel(this.displayOptions), this.renderTNodeJSX("panelBottomContent")]);
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function _createForOfIteratorHelper$1(r, e) {
    var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (!t) {
      if (Array.isArray(r) || (t = _unsupportedIterableToArray$1(r)) || e) {
        t && (r = t);
        var _n = 0, F = function F2() {
        };
        return { s: F, n: function n() {
          return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
        }, e: function e2(r2) {
          throw r2;
        }, f: F };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var o, a = true, u = false;
    return { s: function s() {
      t = t.call(r);
    }, n: function n() {
      var r2 = t.next();
      return a = r2.done, r2;
    }, e: function e2(r2) {
      u = true, o = r2;
    }, f: function f() {
      try {
        a || null == t["return"] || t["return"]();
      } finally {
        if (u) throw o;
      }
    } };
  }
  function _unsupportedIterableToArray$1(r, a) {
    if (r) {
      if ("string" == typeof r) return _arrayLikeToArray$1(r, a);
      var t = {}.toString.call(r).slice(8, -1);
      return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray$1(r, a) : void 0;
    }
  }
  function _arrayLikeToArray$1(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
    return n;
  }
  function ownKeys$1(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread$1(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys$1(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$1(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var useSelectOptions = function useSelectOptions2(props2, keys2, inputValue) {
    var getChildComponentSlots = useChildComponentSlots();
    var optionsCache = vue.ref([]);
    var options = vue.computed(function() {
      var _props$options;
      var dynamicIndex = 0;
      var innerOptions = ((_props$options = props2.options) === null || _props$options === void 0 ? void 0 : _props$options.map(function(option) {
        var getFormatOption = function getFormatOption2(option2) {
          var _keys$value = keys2.value, value = _keys$value.value, label = _keys$value.label, disabled = _keys$value.disabled;
          var res2 = _objectSpread$1(_objectSpread$1({}, option2), {}, {
            index: dynamicIndex,
            label: get_1(option2, label),
            value: get_1(option2, value),
            disabled: get_1(option2, disabled)
          });
          dynamicIndex++;
          return res2;
        };
        if (option.group && option.children) {
          return _objectSpread$1(_objectSpread$1({}, option), {}, {
            children: option.children.map(function(child2) {
              return getFormatOption(child2);
            })
          });
        }
        return getFormatOption(option);
      })) || [];
      var optionsSlots = getChildComponentSlots("Option");
      var groupSlots = getChildComponentSlots("OptionGroup");
      if (isArray_1(groupSlots)) {
        var _iterator = _createForOfIteratorHelper$1(groupSlots), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var _group$props;
            var group = _step.value;
            var groupOption = _objectSpread$1(_objectSpread$1({
              group: (_group$props = group.props) === null || _group$props === void 0 ? void 0 : _group$props.label
            }, group.props), {}, {
              children: []
            });
            var res = getChildComponentSlots("Option", group.children);
            if (!isArray_1(res)) continue;
            var _iterator2 = _createForOfIteratorHelper$1(res), _step2;
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                var child = _step2.value;
                groupOption.children.push(_objectSpread$1(_objectSpread$1({}, child.props), {}, {
                  slots: child.children,
                  index: dynamicIndex
                }));
                dynamicIndex++;
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
            innerOptions.push(groupOption);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      if (isArray_1(optionsSlots)) {
        var _iterator3 = _createForOfIteratorHelper$1(optionsSlots), _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
            var _child = _step3.value;
            innerOptions.push(_objectSpread$1(_objectSpread$1({}, _child.props), {}, {
              slots: _child.children,
              index: dynamicIndex
            }));
            dynamicIndex++;
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      }
      return innerOptions;
    });
    var optionsList = vue.computed(function() {
      var res = [];
      var getOptionsList = function getOptionsList2(options2) {
        var _iterator4 = _createForOfIteratorHelper$1(options2), _step4;
        try {
          for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
            var option = _step4.value;
            if (option.group) {
              getOptionsList2(option.children);
            } else {
              res.push(option);
            }
          }
        } catch (err) {
          _iterator4.e(err);
        } finally {
          _iterator4.f();
        }
      };
      getOptionsList(options.value);
      return res;
    });
    var optionsMap = vue.computed(function() {
      var res = /* @__PURE__ */ new Map();
      optionsCache.value.concat(optionsList.value).forEach(function(option) {
        res.set(option.value, option);
      });
      return res;
    });
    var displayOptions = vue.computed(function() {
      if (props2.onSearch && props2.filterable) return options.value;
      if (!inputValue.value || !(props2.filterable || isFunction_1(props2.filter))) return options.value;
      var filterMethods = function filterMethods2(option) {
        var _option$label, _option$label$toLower;
        if (isFunction_1(props2.filter)) {
          return props2.filter("".concat(inputValue.value), option);
        }
        return ((_option$label = option.label) === null || _option$label === void 0 || (_option$label$toLower = _option$label.toLowerCase) === null || _option$label$toLower === void 0 ? void 0 : _option$label$toLower.call(_option$label).indexOf("".concat(inputValue.value).toLowerCase())) > -1;
      };
      var res = [];
      options.value.forEach(function(option) {
        if (option.group && option.children) {
          res.push(_objectSpread$1(_objectSpread$1({}, option), {}, {
            children: option.children.filter(filterMethods)
          }));
        }
        if (filterMethods(option)) {
          res.push(option);
        }
      });
      return res;
    });
    return {
      options,
      optionsMap,
      optionsList,
      optionsCache,
      displayOptions
    };
  };
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  function useKeyboardControl(_ref) {
    var displayOptions = _ref.displayOptions, optionsList = _ref.optionsList, innerPopupVisible = _ref.innerPopupVisible, setInnerPopupVisible = _ref.setInnerPopupVisible, selectPanelRef = _ref.selectPanelRef, isFilterable = _ref.isFilterable, isRemoteSearch = _ref.isRemoteSearch, getSelectedOptions = _ref.getSelectedOptions, setInnerValue = _ref.setInnerValue, innerValue = _ref.innerValue, popupContentRef = _ref.popupContentRef, multiple = _ref.multiple, max2 = _ref.max;
    var hoverIndex = vue.ref(-1);
    var filteredOptions = vue.ref([]);
    var virtualFilteredOptions = vue.ref([]);
    var classPrefix = usePrefixClass();
    var handleKeyDown = function handleKeyDown2(e) {
      var _optionsList$value$ne, _optionsList$value$ne2;
      var optionsListLength = displayOptions.value.length;
      var newIndex = hoverIndex.value;
      switch (e.code) {
        case "ArrowUp":
          e.preventDefault();
          if (hoverIndex.value === -1) {
            newIndex = 0;
          } else if (hoverIndex.value === 0 || hoverIndex.value > displayOptions.value.length - 1) {
            newIndex = optionsListLength - 1;
          } else {
            newIndex--;
          }
          if ((_optionsList$value$ne = optionsList.value[newIndex]) !== null && _optionsList$value$ne !== void 0 && _optionsList$value$ne.disabled) {
            newIndex--;
          }
          hoverIndex.value = newIndex;
          break;
        case "ArrowDown":
          e.preventDefault();
          if (hoverIndex.value === -1 || hoverIndex.value >= optionsListLength - 1) {
            newIndex = 0;
          } else {
            newIndex++;
          }
          if ((_optionsList$value$ne2 = optionsList.value[newIndex]) !== null && _optionsList$value$ne2 !== void 0 && _optionsList$value$ne2.disabled) {
            newIndex++;
          }
          hoverIndex.value = newIndex;
          break;
        case "Enter":
          if (hoverIndex.value === -1) break;
          var finalOptions = selectPanelRef.value.isVirtual && isFilterable.value && virtualFilteredOptions.value.length ? virtualFilteredOptions.value : isRemoteSearch.value ? optionsList.value : filteredOptions.value;
          if (!finalOptions.length) finalOptions = optionsList.value;
          if (!innerPopupVisible.value) {
            setInnerPopupVisible(true, {
              e
            });
            break;
          }
          if (!multiple) {
            var selectedOptions = getSelectedOptions(finalOptions[hoverIndex.value].value);
            setInnerValue(finalOptions[hoverIndex.value].value, {
              option: selectedOptions === null || selectedOptions === void 0 ? void 0 : selectedOptions[0],
              selectedOptions: getSelectedOptions(finalOptions[hoverIndex.value].value),
              trigger: "check",
              e
            });
            setInnerPopupVisible(false, {
              e
            });
          } else {
            var _finalOptions$hoverIn;
            if (hoverIndex.value === -1) return;
            var optionValue = (_finalOptions$hoverIn = finalOptions[hoverIndex.value]) === null || _finalOptions$hoverIn === void 0 ? void 0 : _finalOptions$hoverIn.value;
            if (!optionValue) return;
            var newValue = getNewMultipleValue(innerValue.value, optionValue);
            if (max2 > 0 && newValue.value.length > max2) return;
            var _selectedOptions = getSelectedOptions(newValue.value);
            setInnerValue(newValue.value, {
              option: _selectedOptions.find(function(v) {
                return v.value == optionValue;
              }),
              selectedOptions: _selectedOptions,
              trigger: newValue.isCheck ? "check" : "uncheck",
              e
            });
            filteredOptions.value = [];
          }
          break;
        case "Escape":
          setInnerPopupVisible(false, {
            e
          });
          break;
      }
    };
    vue.watch(innerPopupVisible, function(value) {
      if (value) {
        hoverIndex.value = -1;
        virtualFilteredOptions.value = [];
        filteredOptions.value = [];
      }
    });
    vue.watch(hoverIndex, function(index) {
      var _selectPanelRef$value;
      var optionHeight = (_selectPanelRef$value = selectPanelRef.value) === null || _selectPanelRef$value === void 0 || (_selectPanelRef$value = _selectPanelRef$value.innerRef) === null || _selectPanelRef$value === void 0 ? void 0 : _selectPanelRef$value.querySelector(".".concat(classPrefix.value, "-select-option")).clientHeight;
      var scrollHeight = optionHeight * index;
      popupContentRef.value.scrollTo({
        top: scrollHeight,
        behavior: "smooth"
      });
    });
    return {
      hoverIndex,
      handleKeyDown,
      virtualFilteredOptions,
      filteredOptions
    };
  }
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var _excluded = ["overlayClassName"];
  function _createForOfIteratorHelper(r, e) {
    var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (!t) {
      if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e) {
        t && (r = t);
        var _n = 0, F = function F2() {
        };
        return { s: F, n: function n() {
          return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
        }, e: function e2(r2) {
          throw r2;
        }, f: F };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var o, a = true, u = false;
    return { s: function s() {
      t = t.call(r);
    }, n: function n() {
      var r2 = t.next();
      return a = r2.done, r2;
    }, e: function e2(r2) {
      u = true, o = r2;
    }, f: function f() {
      try {
        a || null == t["return"] || t["return"]();
      } finally {
        if (u) throw o;
      }
    } };
  }
  function _unsupportedIterableToArray(r, a) {
    if (r) {
      if ("string" == typeof r) return _arrayLikeToArray(r, a);
      var t = {}.toString.call(r).slice(8, -1);
      return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
    }
  }
  function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
    return n;
  }
  function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
        _defineProperty$2(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  var _Select = vue.defineComponent({
    name: "TSelect",
    props: _objectSpread(_objectSpread({}, props), {}, {
      valueDisplayOptions: {
        type: Object
      }
    }),
    setup: function setup23(props2, _ref) {
      var slots = _ref.slots;
      var classPrefix = usePrefixClass();
      var disabled = useDisabled();
      var renderTNodeJSX3 = useTNodeJSX();
      var COMPONENT_NAME = usePrefixClass("select");
      var _useConfig = useConfig("select"), globalConfig = _useConfig.globalConfig, t = _useConfig.t;
      var _toRefs = vue.toRefs(props2), popupVisible = _toRefs.popupVisible, inputValue = _toRefs.inputValue, modelValue = _toRefs.modelValue, value = _toRefs.value;
      var _useDefaultValue = useDefaultValue(inputValue, props2.defaultInputValue, props2.onInputChange, "inputValue"), _useDefaultValue2 = _slicedToArray(_useDefaultValue, 2), innerInputValue = _useDefaultValue2[0], setInputValue = _useDefaultValue2[1];
      var _useVModel = useVModel(value, modelValue, props2.defaultValue, props2.onChange), _useVModel2 = _slicedToArray(_useVModel, 2), orgValue = _useVModel2[0], setOrgValue = _useVModel2[1];
      var selectPanelRef = vue.ref(null);
      var selectInputRef = vue.ref(null);
      var keys2 = vue.computed(function() {
        var _props2$keys, _props2$keys2, _props2$keys3;
        return {
          label: ((_props2$keys = props2.keys) === null || _props2$keys === void 0 ? void 0 : _props2$keys.label) || "label",
          value: ((_props2$keys2 = props2.keys) === null || _props2$keys2 === void 0 ? void 0 : _props2$keys2.value) || "value",
          disabled: ((_props2$keys3 = props2.keys) === null || _props2$keys3 === void 0 ? void 0 : _props2$keys3.disabled) || "disabled"
        };
      });
      var _useSelectOptions = useSelectOptions(props2, keys2, innerInputValue), optionsMap = _useSelectOptions.optionsMap, optionsList = _useSelectOptions.optionsList, optionsCache = _useSelectOptions.optionsCache, displayOptions = _useSelectOptions.displayOptions;
      var innerValue = vue.computed(function() {
        if (orgValue.value === void 0) {
          return props2.multiple ? [] : void 0;
        }
        if (props2.valueType === "object") {
          return !props2.multiple ? orgValue.value[keys2.value.value] : orgValue.value.map(function(option) {
            return option[keys2.value.value];
          });
        }
        return orgValue.value;
      });
      var setInnerValue = function setInnerValue2(newVal, context) {
        if (props2.valueType === "object") {
          var _keys$value = keys2.value, value2 = _keys$value.value, label = _keys$value.label;
          var getOption = function getOption2(val) {
            if (val === void 0) {
              return void 0;
            }
            var option = optionsMap.value.get(val);
            return _defineProperty$2(_defineProperty$2({}, value2, get_1(option, value2)), label, get_1(option, label));
          };
          newVal = props2.multiple ? newVal.map(function(val) {
            return getOption(val);
          }) : getOption(newVal);
        }
        if (newVal === orgValue.value) return;
        setOrgValue(newVal, _objectSpread({
          selectedOptions: getSelectedOptions(newVal)
        }, context));
      };
      var _useDefaultValue3 = useDefaultValue(popupVisible, false, function(visible, context) {
        var _props2$onPopupVisibl;
        (_props2$onPopupVisibl = props2.onPopupVisibleChange) === null || _props2$onPopupVisibl === void 0 || _props2$onPopupVisibl.call(props2, visible, context);
      }, "popupVisible"), _useDefaultValue4 = _slicedToArray(_useDefaultValue3, 2), innerPopupVisible = _useDefaultValue4[0], setInnerPopupVisible = _useDefaultValue4[1];
      var placeholderText = vue.computed(function() {
        var _ref3;
        return (_ref3 = !props2.multiple && innerPopupVisible.value && getSingleContent(innerValue.value, optionsMap) || props2.placeholder) !== null && _ref3 !== void 0 ? _ref3 : t(globalConfig.value.placeholder);
      });
      var displayText = vue.computed(function() {
        return props2.multiple ? getMultipleContent(innerValue.value, optionsMap) : getSingleContent(innerValue.value, optionsMap);
      });
      var valueDisplayParams = vue.computed(function() {
        var val = props2.multiple && isArray_1(innerValue.value) ? innerValue.value.map(function(value2) {
          var _optionsMap$value$get;
          return {
            value: value2,
            label: (_optionsMap$value$get = optionsMap.value.get(value2)) === null || _optionsMap$value$get === void 0 ? void 0 : _optionsMap$value$get.label
          };
        }) : innerValue.value;
        var params = {
          value: val,
          onClose: props2.multiple ? function(index) {
            return removeTag(index);
          } : function() {
          }
        };
        if (props2.minCollapsedNum && props2.multiple) {
          var _val$slice;
          return _objectSpread(_objectSpread({}, params), {}, {
            displayValue: val === null || val === void 0 || (_val$slice = val.slice) === null || _val$slice === void 0 ? void 0 : _val$slice.call(val, 0, props2.minCollapsedNum)
          });
        }
        return params;
      });
      var isFilterable = vue.computed(function() {
        return Boolean(props2.filterable || globalConfig.value.filterable || isFunction_1(props2.filter));
      });
      var isRemoteSearch = vue.computed(function() {
        return Boolean((props2.filterable || globalConfig.value.filterable) && isFunction_1(props2.onSearch));
      });
      var removeTag = function removeTag2(index, e) {
        var _props2$onRemove;
        var selectValue = cloneDeep_1(innerValue.value);
        var value2 = selectValue[index];
        selectValue.splice(index, 1);
        setInnerValue(selectValue, {
          selectedOptions: getSelectedOptions(selectValue),
          trigger: "tag-remove",
          e
        });
        (_props2$onRemove = props2.onRemove) === null || _props2$onRemove === void 0 || _props2$onRemove.call(props2, {
          value: value2,
          data: optionsMap.value.get(value2),
          e
        });
      };
      var handleCreate = function handleCreate2() {
        var _props2$onCreate;
        if (!innerInputValue.value) return;
        (_props2$onCreate = props2.onCreate) === null || _props2$onCreate === void 0 || _props2$onCreate.call(props2, innerInputValue.value);
        setInputValue("");
      };
      var popupContentRef = vue.computed(function() {
        var _selectInputRef$value;
        return (_selectInputRef$value = selectInputRef.value) === null || _selectInputRef$value === void 0 ? void 0 : _selectInputRef$value.popupRef.getOverlay();
      });
      var optionalList = vue.computed(function() {
        return optionsList.value.filter(function(item) {
          return !item.disabled && !item["check-all"] && !item.checkAll;
        });
      });
      var getSelectedOptions = function getSelectedOptions2() {
        var selectValue = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : innerValue.value;
        return optionsList.value.filter(function(option) {
          if (option.checkAll) return;
          if (isArray_1(selectValue)) return selectValue.includes(option.value);
          return selectValue === option.value;
        });
      };
      var _useKeyboardControl = useKeyboardControl({
        displayOptions,
        optionsList,
        innerPopupVisible,
        setInnerPopupVisible,
        selectPanelRef,
        isFilterable,
        isRemoteSearch,
        getSelectedOptions,
        setInnerValue,
        innerValue,
        popupContentRef,
        multiple: props2.multiple,
        max: props2.max
      }), hoverIndex = _useKeyboardControl.hoverIndex, virtualFilteredOptions = _useKeyboardControl.virtualFilteredOptions, handleKeyDown = _useKeyboardControl.handleKeyDown, filteredOptions = _useKeyboardControl.filteredOptions;
      var onCheckAllChange = function onCheckAllChange2(checked) {
        if (!props2.multiple) return;
        var value2 = checked ? optionalList.value.map(function(option) {
          return option.value;
        }) : [];
        setInnerValue(value2, {
          selectedOptions: getSelectedOptions(value2),
          trigger: checked ? "check" : "clear"
        });
      };
      var intersectionLen = vue.computed(function() {
        var values = optionalList.value.map(function(item) {
          return item.value;
        });
        var n = intersection_1(innerValue.value, values);
        return n.length;
      });
      var isCheckAll = vue.computed(function() {
        return intersectionLen.value === optionalList.value.length;
      });
      var indeterminate = vue.computed(function() {
        return !isCheckAll.value && intersectionLen.value !== 0;
      });
      var SelectProvider = vue.computed(function() {
        return {
          max: props2.max,
          multiple: props2.multiple,
          hoverIndex: hoverIndex.value,
          selectValue: innerValue.value,
          reserveKeyword: props2.reserveKeyword,
          handleValueChange: setInnerValue,
          handlerInputChange: setInputValue,
          handlePopupVisibleChange: setInnerPopupVisible,
          handleCreate,
          size: props2.size,
          popupContentRef,
          indeterminate: indeterminate.value,
          isCheckAll: isCheckAll.value,
          onCheckAllChange,
          getSelectedOptions,
          displayOptions: displayOptions.value
        };
      });
      vue.provide(selectInjectKey, SelectProvider);
      var checkValueInvalid = function checkValueInvalid2() {
        if (!props2.multiple && isArray_1(orgValue.value)) {
          setOrgValue(void 0, {
            selectedOptions: [],
            trigger: "default"
          });
        }
        if (props2.multiple && !isArray_1(orgValue.value)) {
          setOrgValue([], {
            selectedOptions: [],
            trigger: "default"
          });
        }
      };
      var handleSearch = debounce_1(function(value2, _ref4) {
        var _props2$onSearch;
        var e = _ref4.e;
        (_props2$onSearch = props2.onSearch) === null || _props2$onSearch === void 0 || _props2$onSearch.call(props2, "".concat(value2), {
          e
        });
      }, 300);
      var handlerInputChange = function handlerInputChange2(value2, context) {
        if (value2) {
          !innerPopupVisible.value && setInnerPopupVisible(true, {
            e: context.e
          });
        }
        setInputValue(value2);
        handleSearch("".concat(value2), {
          e: context.e
        });
        vue.nextTick(function() {
          var _selectPanelRef$value, _selectPanelRef$value2;
          virtualFilteredOptions.value = (_selectPanelRef$value = selectPanelRef.value) === null || _selectPanelRef$value === void 0 ? void 0 : _selectPanelRef$value.visibleData;
          filteredOptions.value = (_selectPanelRef$value2 = selectPanelRef.value) === null || _selectPanelRef$value2 === void 0 ? void 0 : _selectPanelRef$value2.displayOptions;
        });
      };
      var handlerPopupVisibleChange = function handlerPopupVisibleChange2(visible, context) {
        setInnerPopupVisible(visible, context);
        if (visible && context.trigger === "trigger-element-click") setInputValue("");
      };
      var addCache = function addCache2(val) {
        if (props2.multiple) {
          var newCache = [];
          var _iterator = _createForOfIteratorHelper(val || []), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var item = _step.value;
              var option = optionsMap.value.get(item);
              if (option) {
                newCache.push(option);
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          optionsCache.value = Array.from(/* @__PURE__ */ new Set([].concat(newCache, _toConsumableArray(optionsCache.value))));
        } else {
          var _option = optionsMap.value.get(val);
          if (_option) {
            optionsCache.value = Array.from(/* @__PURE__ */ new Set([_option].concat(_toConsumableArray(optionsCache.value))));
          }
        }
      };
      vue.watch(orgValue, function(val) {
        checkValueInvalid();
        vue.nextTick(function() {
          addCache(val);
        });
      }, {
        immediate: true
      });
      vue.watch(function() {
        return props2.multiple;
      }, function() {
        checkValueInvalid();
      });
      var updateScrollTop = function updateScrollTop2(content) {
        var _selectPanelRef$value3;
        if (!selectPanelRef.value) {
          return;
        }
        var firstSelectedNode = (_selectPanelRef$value3 = selectPanelRef.value) === null || _selectPanelRef$value3 === void 0 || (_selectPanelRef$value3 = _selectPanelRef$value3.innerRef) === null || _selectPanelRef$value3 === void 0 ? void 0 : _selectPanelRef$value3.querySelector(".".concat(classPrefix.value, "-is-selected"));
        vue.nextTick(function() {
          if (firstSelectedNode && content) {
            var _getComputedStyle = getComputedStyle(firstSelectedNode), paddingBottom = _getComputedStyle.paddingBottom;
            var _getComputedStyle2 = getComputedStyle(content), marginBottom = _getComputedStyle2.marginBottom;
            var elementBottomHeight = parseInt(paddingBottom, 10) + parseInt(marginBottom, 10);
            var updateValue = firstSelectedNode.offsetTop - content.offsetTop - (content.clientHeight - firstSelectedNode.clientHeight) + elementBottomHeight;
            content.scrollTop = updateValue;
          }
        });
      };
      vue.provide("updateScrollTop", updateScrollTop);
      return function() {
        var _ref5 = props2.popupProps || {}, overlayClassName = _ref5.overlayClassName, restPopupProps = _objectWithoutProperties(_ref5, _excluded);
        return vue.createVNode("div", {
          "class": "".concat(COMPONENT_NAME.value, "__wrap")
        }, [vue.createVNode(SelectInput, vue.mergeProps({
          autoWidth: props2.autoWidth,
          readonly: props2.readonly,
          borderless: props2.borderless,
          multiple: props2.multiple,
          clearable: props2.clearable,
          loading: props2.loading,
          status: props2.status,
          tips: props2.tips,
          minCollapsedNum: props2.minCollapsedNum,
          autofocus: props2.autofocus,
          suffix: props2.suffix,
          valueDisplayOptions: props2.valueDisplayOptions
        }, {
          "ref": selectInputRef,
          "class": COMPONENT_NAME.value,
          "value": displayText.value,
          "disabled": disabled.value,
          "popupVisible": innerPopupVisible.value,
          "inputValue": innerPopupVisible.value ? innerInputValue.value : "",
          "placeholder": "".concat(placeholderText.value),
          "allowInput": isFilterable.value,
          "collapsed-items": props2.collapsedItems,
          "inputProps": _objectSpread(_objectSpread({
            size: props2.size,
            autofocus: props2.autofocus
          }, props2.inputProps), {}, {
            onkeydown: handleKeyDown
          }),
          "tagInputProps": _objectSpread({
            size: props2.size
          }, props2.tagInputProps),
          "onTagChange": function onTagChange(val, ctx) {
            removeTag(ctx.index);
          },
          "tagProps": _objectSpread({}, props2.tagProps),
          "popupProps": _objectSpread({
            overlayClassName: ["".concat(COMPONENT_NAME.value, "__dropdown"), overlayClassName]
          }, restPopupProps),
          "label": props2.label,
          "prefixIcon": props2.prefixIcon,
          "suffix": props2.suffix,
          "suffixIcon": function suffixIcon() {
            if (props2.suffixIcon || slots.suffixIcon) {
              return renderTNodeJSX3("suffixIcon");
            }
            return props2.showArrow && vue.createVNode(FakeArrow, {
              "overlayClassName": "".concat(COMPONENT_NAME.value, "__right-icon"),
              "isActive": innerPopupVisible.value
            }, null);
          },
          "valueDisplay": function valueDisplay() {
            return renderTNodeJSX3("valueDisplay", {
              params: valueDisplayParams.value
            });
          },
          "onPopupVisibleChange": handlerPopupVisibleChange,
          "onInputChange": handlerInputChange,
          "onClear": function onClear(_ref6) {
            var _props2$onClear;
            var e = _ref6.e;
            setInnerValue(props2.multiple ? [] : void 0, {
              option: null,
              selectedOptions: getSelectedOptions(props2.multiple ? [] : void 0),
              trigger: "clear",
              e
            });
            (_props2$onClear = props2.onClear) === null || _props2$onClear === void 0 || _props2$onClear.call(props2, {
              e
            });
          },
          "onEnter": function onEnter(inputValue2, _ref7) {
            var e = _ref7.e;
            setTimeout(function() {
              var _props2$onEnter;
              (_props2$onEnter = props2.onEnter) === null || _props2$onEnter === void 0 || _props2$onEnter.call(props2, {
                inputValue: "".concat(innerInputValue.value),
                e,
                value: innerValue.value
              });
              handleCreate();
            }, 0);
          },
          "onBlur": function onBlur(inputValue2, _ref8) {
            var _props2$onBlur;
            var e = _ref8.e;
            (_props2$onBlur = props2.onBlur) === null || _props2$onBlur === void 0 || _props2$onBlur.call(props2, {
              e,
              value: innerValue.value
            });
          },
          "onFocus": function onFocus(inputValue2, _ref9) {
            var _props2$onFocus;
            var e = _ref9.e;
            (_props2$onFocus = props2.onFocus) === null || _props2$onFocus === void 0 || _props2$onFocus.call(props2, {
              e,
              value: innerValue.value
            });
          }
        }, props2.selectInputProps), {
          label: slots.label,
          prefixIcon: slots.prefixIcon,
          suffix: slots.suffix,
          panel: function panel() {
            return vue.createVNode(SelectPanel, vue.mergeProps({
              "ref": selectPanelRef
            }, pick_1(props2, ["size", "multiple", "empty", "loading", "loadingText", "filterable", "creatable", "panelTopContent", "panelBottomContent", "filter", "scroll"]), {
              "inputValue": innerInputValue.value
            }), slots);
          },
          collapsedItems: slots.collapsedItems
        })]);
      };
    }
  });
  /**
   * tdesign v1.9.7
   * (c) 2024 tdesign
   * @license MIT
   */
  var Select = withInstall(_Select);
  var Option = withInstall(_Option);
  var OptionGroup = withInstall(_OptionGroup);
  const _export_sfc = (sfc, props2) => {
    const target = sfc.__vccOpts || sfc;
    for (const [key, val] of props2) {
      target[key] = val;
    }
    return target;
  };
  const _withScopeId = (n) => (vue.pushScopeId("data-v-bb379384"), n = n(), vue.popScopeId(), n);
  const _hoisted_1 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ vue.createElementVNode("div", { class: "label" }, "字号", -1));
  const _hoisted_2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ vue.createElementVNode("div", { class: "label" }, "字体", -1));
  const _hoisted_3 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ vue.createElementVNode("div", { class: "label" }, "主题", -1));
  const _sfc_main$1 = {
    __name: "settings",
    props: {
      setting: Object
    },
    emits: ["update:setting"],
    setup(__props, { emit: __emit }) {
      const props2 = __props;
      const emits = __emit;
      const _2 = _unsafeWindow._;
      const getAttach3 = () => {
        return document.querySelector("#self_dialog");
      };
      const setting = vue.ref({});
      const themes = vue.ref([]);
      vue.watch(() => setting.value, (val) => {
        emits("update:setting", val);
      }, { deep: true });
      vue.onMounted(() => {
        setting.value = props2.setting;
        let obj = _2.groupBy(codeThemeList, "group");
        Object.keys(obj).forEach((key) => {
          themes.value.push({
            group: key === "undefined" ? "其他" : key,
            children: obj[key]
          });
        });
      });
      return (_ctx, _cache) => {
        return vue.openBlock(), vue.createBlock(vue.unref(Space), {
          direction: "vertical",
          class: "setting-content"
        }, {
          default: vue.withCtx(() => [
            vue.createVNode(vue.unref(Space), null, {
              default: vue.withCtx(() => [
                _hoisted_1,
                vue.createVNode(vue.unref(InputNumber), {
                  modelValue: setting.value.fontSize,
                  "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => setting.value.fontSize = $event),
                  "controls-position": "right"
                }, null, 8, ["modelValue"])
              ]),
              _: 1
            }),
            vue.createVNode(vue.unref(Space), null, {
              default: vue.withCtx(() => [
                _hoisted_2,
                vue.createVNode(vue.unref(Select), {
                  popupProps: { attach: getAttach3 },
                  style: { "width": "150px" },
                  teleported: false,
                  modelValue: setting.value.fontFamily,
                  "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => setting.value.fontFamily = $event)
                }, {
                  default: vue.withCtx(() => [
                    (vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(vue.unref(fontFamilys), (item) => {
                      return vue.openBlock(), vue.createBlock(vue.unref(Option), {
                        key: item.value,
                        label: item.label,
                        value: item.value
                      }, null, 8, ["label", "value"]);
                    }), 128))
                  ]),
                  _: 1
                }, 8, ["popupProps", "modelValue"])
              ]),
              _: 1
            }),
            vue.createVNode(vue.unref(Space), null, {
              default: vue.withCtx(() => [
                _hoisted_3,
                vue.createVNode(vue.unref(Select), {
                  popupProps: { attach: getAttach3 },
                  style: { "width": "150px" },
                  filterable: true,
                  teleported: false,
                  modelValue: setting.value.theme,
                  "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => setting.value.theme = $event)
                }, {
                  default: vue.withCtx(() => [
                    (vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(themes.value, (list, index) => {
                      return vue.openBlock(), vue.createBlock(vue.unref(OptionGroup), {
                        key: index,
                        label: list.group,
                        divider: true
                      }, {
                        default: vue.withCtx(() => [
                          (vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(list.children, (item) => {
                            return vue.openBlock(), vue.createBlock(vue.unref(Option), {
                              key: item.value,
                              value: item.value,
                              label: item.name
                            }, null, 8, ["value", "label"]);
                          }), 128))
                        ]),
                        _: 2
                      }, 1032, ["label"]);
                    }), 128))
                  ]),
                  _: 1
                }, 8, ["popupProps", "modelValue"])
              ]),
              _: 1
            })
          ]),
          _: 1
        });
      };
    }
  };
  const settings = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["__scopeId", "data-v-bb379384"]]);
  vue.ref(false);
  const useObserverDom = (dom, callback) => {
    let observer;
    const startObserving = () => {
      if (!dom) return;
      observer = new MutationObserver(callback);
      const config = {
        childList: true,
        // 监听子节点的变化
        subtree: true
        // 包含子树的所有变化
      };
      observer.observe(dom, config);
    };
    const stopObserving = () => {
      if (observer) {
        observer.disconnect();
        observer = null;
      }
    };
    vue.onMounted(startObserving);
    vue.onUnmounted(stopObserving);
    return {
      start: startObserving,
      stop: stopObserving
    };
  };
  const _sfc_main = {
    __name: "App",
    setup(__props) {
      const _2 = _unsafeWindow._;
      const storageKey = vue.ref("codeSettings");
      const getAttach3 = () => {
        return document.querySelector("#self_dialog");
      };
      const setting = vue.ref({
        fontSize: 13,
        fontFamily: "'Fira Code', 'Monoid', 'Consolas', 'monospace'",
        theme: "vs"
      });
      const setData = (settings2) => {
        _unsafeWindow.localStorage.setItem(
          storageKey.value,
          JSON.stringify(settings2)
        );
      };
      vue.watch(
        () => setting.value,
        (val) => {
          setData(val);
          setAllSetting();
        },
        { deep: true }
      );
      const initData = async () => {
        let settings2 = _unsafeWindow.localStorage.getItem(storageKey.value);
        if (!_2.isEmpty(settings2)) {
          let obj = JSON.parse(settings2);
          Object.keys(obj).forEach((key) => {
            setting.value[key] = obj[key];
          });
        }
      };
      const setAllSetting = _2.debounce(async () => {
        await regTheme();
        for (const i of _2.flatten(codes.value)) {
          await _unsafeWindow.zzUtil.watchEffectOnce(() => _2.get(i, "myEditor.updateOptions", ""));
          if (_2.isEmpty(i)) continue;
          if (i.mode === "javascript" && !_unsafeWindow.hasRegTip) {
            regTip();
            _unsafeWindow.hasRegTip = true;
          }
          updateSetting(i.myEditor, setting.value);
        }
      }, 200);
      const regTip = () => {
        let monaco = _unsafeWindow.monaco;
        monaco.languages.registerCompletionItemProvider("javascript", {
          provideCompletionItems(model, position) {
            let suggestions = [];
            suggestions.push({
              label: "clog",
              kind: monaco.languages.CompletionItemKind.Function,
              insertText: "console.log()",
              detail: "打印日志"
            });
            return { suggestions };
          }
        });
      };
      const regTheme = _2.debounce(() => {
        let hasRegTheme = [];
        if (Array.isArray(_unsafeWindow.hasRegThemes)) {
          hasRegTheme = _unsafeWindow.hasRegThemes;
        } else {
          _unsafeWindow.hasRegThemes = [];
        }
        let needReg = codeThemeList.filter((i) => !i.out && !hasRegTheme.includes(i.value));
        let editor = _unsafeWindow.monaco.editor;
        Promise.all(needReg.map(async (i) => {
          const response = await fetch(new URL((/* @__PURE__ */ Object.assign({ "/src/themes/AtlanticNight.json": __vite_glob_0_0, "/src/themes/AtomOneDark.json": __vite_glob_0_1, "/src/themes/AuroraX.json": __vite_glob_0_2, "/src/themes/AyuDark.json": __vite_glob_0_3, "/src/themes/AyuLight.json": __vite_glob_0_4, "/src/themes/BlulocoLight.json": __vite_glob_0_5, "/src/themes/BracketsLightPro.json": __vite_glob_0_6, "/src/themes/CatppuccinMocha.json": __vite_glob_0_7, "/src/themes/CodeSandBox.json": __vite_glob_0_8, "/src/themes/Darktooth.json": __vite_glob_0_9, "/src/themes/Dracula.json": __vite_glob_0_10, "/src/themes/EvaLight.json": __vite_glob_0_11, "/src/themes/FlatUI.json": __vite_glob_0_12, "/src/themes/Hopscotch.json": __vite_glob_0_13, "/src/themes/HorlaLightTheme.json": __vite_glob_0_14, "/src/themes/HybridNext.json": __vite_glob_0_15, "/src/themes/KimbieDark.json": __vite_glob_0_16, "/src/themes/LaserWave.json": __vite_glob_0_17, "/src/themes/Lucario.json": __vite_glob_0_18, "/src/themes/Min.json": __vite_glob_0_19, "/src/themes/MonokaiDimmed.json": __vite_glob_0_20, "/src/themes/MonokaiPro.json": __vite_glob_0_21, "/src/themes/Nebula.json": __vite_glob_0_22, "/src/themes/NoctisAzureus.json": __vite_glob_0_23, "/src/themes/NoctisBordo.json": __vite_glob_0_24, "/src/themes/NoctisLux.json": __vite_glob_0_25, "/src/themes/OneDarkPro.json": __vite_glob_0_26, "/src/themes/OneMonokai.json": __vite_glob_0_27, "/src/themes/Panda.json": __vite_glob_0_28, "/src/themes/ReUI.json": __vite_glob_0_29, "/src/themes/RemedyDark.json": __vite_glob_0_30, "/src/themes/ShadesOfPurple.json": __vite_glob_0_31, "/src/themes/SnazzyLight.json": __vite_glob_0_32, "/src/themes/SnazzyOperator.json": __vite_glob_0_33, "/src/themes/SublimeMaterialThemeDark.json": __vite_glob_0_34, "/src/themes/SynthWave84.json": __vite_glob_0_35, "/src/themes/TokyoNightStorm.json": __vite_glob_0_36, "/src/themes/TomorrowNightBlue.json": __vite_glob_0_37, "/src/themes/Twilight.json": __vite_glob_0_38, "/src/themes/WinterIsComing.json": __vite_glob_0_39 }))[`/src/themes/${i.value}.json`], (_documentCurrentScript && _documentCurrentScript.src || new URL('__entry.js', document.baseURI).href)));
          if (response.ok) {
            const json = await response.json();
            editor.defineTheme(i.value, json);
            _unsafeWindow.hasRegThemes.push(i.value);
          }
        }));
      }, 200);
      const updateSetting = (editor, setting2) => {
        let font = fontFamilys.find((i) => i.value === setting2.fontFamily);
        editor.updateOptions({
          theme: setting2.theme,
          fontFamily: setting2.fontFamily,
          fontSize: setting2.fontSize
        });
        if (font.feature) {
          setFeature(font.feature);
        }
      };
      const setFeature = (feature = '"liga" 0, "calt" 0;') => {
        let dom = document.querySelector(
          ".code.mask_popup .monaco-mouse-cursor-text"
        );
        if (!dom) return;
        dom.style["font-feature-settings"] = feature;
      };
      const codes = vue.ref([]);
      useObserverDom(findRef(_unsafeWindow.vueThis, "code").$children[1].$children[1].$el, () => setAllSetting());
      useObserverDom(findRef(_unsafeWindow.vueThis, "code").$children[1].$children[2].$el, () => setAllSetting());
      vue.onMounted(() => {
        initData();
        let root2 = _unsafeWindow.vueThis;
        let ref2 = findRef(root2, "code");
        codes.value.push(ref2.$children[1].$children[1].$children);
        codes.value.push(ref2.$children[1].$children[2].$children);
      });
      return (_ctx, _cache) => {
        return vue.openBlock(), vue.createBlock(vue.unref(Popup), {
          trigger: "click",
          attach: getAttach3
        }, {
          triggerElement: vue.withCtx(() => [
            vue.createVNode(vue.unref(Button), { ghost: "" }, {
              icon: vue.withCtx(() => [
                vue.createVNode(vue.unref(setting1))
              ]),
              default: vue.withCtx(() => [
                vue.createTextVNode(" 设置 ")
              ]),
              _: 1
            })
          ]),
          content: vue.withCtx(() => [
            vue.createVNode(settings, {
              setting: setting.value,
              "onUpdate:setting": _cache[0] || (_cache[0] = ($event) => setting.value = $event)
            }, null, 8, ["setting"])
          ]),
          _: 1
        });
      };
    }
  };
  const render7 = (el) => {
    vue.createApp(_sfc_main).mount(
      (() => {
        const app = document.createElement("div");
        app.setAttribute("id", "self_dialog");
        el.append(app);
        return app;
      })()
    );
  };
  waitForElementById("tab-code", (icon) => {
    icon.addEventListener("click", async function() {
      let mask = document.querySelector(".code.mask_popup");
      if (!mask) return;
      let dialog = mask.querySelector("#self_dialog");
      if (!dialog) {
        render7(mask);
      }
    });
  });

})(Vue);